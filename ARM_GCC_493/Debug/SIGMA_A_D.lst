ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SIGMA_A_D.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SIGMA_A_D_convDone
  19              		.bss
  20              		.type	SIGMA_A_D_convDone, %object
  21              		.size	SIGMA_A_D_convDone, 1
  22              	SIGMA_A_D_convDone:
  23 0000 00       		.space	1
  24              		.global	SIGMA_A_D_stopConversion
  25              		.type	SIGMA_A_D_stopConversion, %object
  26              		.size	SIGMA_A_D_stopConversion, 1
  27              	SIGMA_A_D_stopConversion:
  28 0001 00       		.space	1
  29              		.global	SIGMA_A_D_initVar
  30              		.type	SIGMA_A_D_initVar, %object
  31              		.size	SIGMA_A_D_initVar, 1
  32              	SIGMA_A_D_initVar:
  33 0002 00       		.space	1
  34              		.global	SIGMA_A_D_started
  35              		.type	SIGMA_A_D_started, %object
  36              		.size	SIGMA_A_D_started, 1
  37              	SIGMA_A_D_started:
  38 0003 00       		.space	1
  39              		.global	SIGMA_A_D_Config
  40              		.data
  41              		.type	SIGMA_A_D_Config, %object
  42              		.size	SIGMA_A_D_Config, 1
  43              	SIGMA_A_D_Config:
  44 0000 01       		.byte	1
  45              		.comm	SIGMA_A_D_Offset,4,4
  46              		.comm	SIGMA_A_D_CountsPerVolt,4,4
  47              		.bss
  48              		.align	2
  49              	SIGMA_A_D_gcor:
  50 0004 00000000 		.space	4
  51              		.section	.text.SIGMA_A_D_Init,"ax",%progbits
  52              		.align	2
  53              		.global	SIGMA_A_D_Init
  54              		.thumb
  55              		.thumb_func
  56              		.type	SIGMA_A_D_Init, %function
  57              	SIGMA_A_D_Init:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 2


  58              	.LFB0:
  59              		.file 1 ".\\Generated_Source\\PSoC5\\SIGMA_A_D.c"
   1:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * File Name: SIGMA_A_D.c
   3:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Version 3.20
   4:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
   5:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Description:
   6:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Component.
   8:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
   9:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Note:
  10:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  11:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  18:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #include "SIGMA_A_D.h"
  19:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  20:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
  21:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #include "SIGMA_A_D_theACLK.h"
  22:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
  23:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  24:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #include "SIGMA_A_D_Ext_CP_Clk.h"
  25:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  26:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #if(SIGMA_A_D_DEFAULT_INPUT_MODE)
  27:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #include "SIGMA_A_D_AMux.h"
  28:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #endif /* SIGMA_A_D_DEFAULT_INPUT_MODE */
  29:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  30:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  31:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /***************************************
  32:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global data allocation
  33:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ***************************************/
  34:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  35:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* Software flag for checking conversion completed or not */
  36:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile uint8 SIGMA_A_D_convDone = 0u;
  37:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  38:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* Software flag to stop conversion for single sample conversion mode
  39:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   with resolution above 16 bits 
  40:.\Generated_Source\PSoC5/SIGMA_A_D.c **** */
  41:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile uint8 SIGMA_A_D_stopConversion = 0u;
  42:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  43:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* To run the initialization block only at the start up */
  44:.\Generated_Source\PSoC5/SIGMA_A_D.c **** uint8 SIGMA_A_D_initVar = 0u;
  45:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  46:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* To check whether ADC started or not before switching the configuration */
  47:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile uint8 SIGMA_A_D_started = 0u;
  48:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  49:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile uint8 SIGMA_A_D_Config = 1u;
  51:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  52:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile int32 SIGMA_A_D_Offset;
  53:.\Generated_Source\PSoC5/SIGMA_A_D.c **** volatile int32 SIGMA_A_D_CountsPerVolt;
  54:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  55:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 3


  56:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /***************************************
  57:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Local data allocation
  58:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ***************************************/
  59:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  60:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /* The array with precalculated gain compensation coefficients */
  61:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static SIGMA_A_D_GCOR_STRUCT SIGMA_A_D_gcor[SIGMA_A_D_DEFAULT_NUM_CONFIGS];
  62:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  63:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  64:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  65:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /***************************************
  66:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Forward function references
  67:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ***************************************/
  68:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_InitConfig(uint8 config) ;
  69:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGai
  70:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                             uint8 resolution, uint8 config) ;
  71:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_SetDSMRef0Reg(uint8 value) ;
  72:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  73:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  74:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /******************************************************************************
  75:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Init
  76:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************
  77:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  78:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
  79:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Initialize component's parameters to the parameters set by user in the
  80:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  customizer of the component placed onto schematic. Usually called in
  81:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * SIGMA_A_D_Start().
  82:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  83:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  84:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
  85:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
  86:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  87:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
  88:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
  89:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
  90:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
  91:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_Init(void) 
  92:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
  60              		.loc 1 92 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64 0000 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68 0002 82B0     		sub	sp, sp, #8
  69              		.cfi_def_cfa_offset 16
  70 0004 02AF     		add	r7, sp, #8
  71              		.cfi_def_cfa 7, 8
  93:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  94:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_Config = 1u;
  72              		.loc 1 94 0
  73 0006 324B     		ldr	r3, .L2
  74 0008 0122     		movs	r2, #1
  75 000a 1A70     		strb	r2, [r3]
  95:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_convDone = 0u;
  76              		.loc 1 95 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 4


  77 000c 314B     		ldr	r3, .L2+4
  78 000e 0022     		movs	r2, #0
  79 0010 1A70     		strb	r2, [r3]
  96:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  97:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  80              		.loc 1 97 0
  81 0012 1020     		movs	r0, #16
  82 0014 FFF7FEFF 		bl	SIGMA_A_D_Ext_CP_Clk_SetModeRegister
  98:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
  99:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* This is only valid if there is an internal clock */
 100:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
 101:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_theACLK_SetMode(CYCLK_DUTY);
  83              		.loc 1 101 0
  84 0018 1020     		movs	r0, #16
  85 001a FFF7FEFF 		bl	SIGMA_A_D_theACLK_SetModeRegister
 102:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
 103:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 104:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_IRQ_REMOVE == 0u)
 105:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Set interrupt priority */
 106:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CyIntSetPriority(SIGMA_A_D_INTC_NUMBER, SIGMA_A_D_INTC_PRIOR_NUMBER);
  86              		.loc 1 106 0
  87 001e 1D20     		movs	r0, #29
  88 0020 0721     		movs	r1, #7
  89 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif   /* End SIGMA_A_D_IRQ_REMOVE */
 108:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 109:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Init static registers with common configuration */
 110:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_DEM0_REG    = SIGMA_A_D_CFG1_DSM_DEM0;
  90              		.loc 1 110 0
  91 0026 2C4B     		ldr	r3, .L2+8
  92 0028 0422     		movs	r2, #4
  93 002a 1A70     		strb	r2, [r3]
 111:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_DEM1_REG    = SIGMA_A_D_CFG1_DSM_DEM1;
  94              		.loc 1 111 0
  95 002c 2B4B     		ldr	r3, .L2+12
  96 002e 0022     		movs	r2, #0
  97 0030 1A70     		strb	r2, [r3]
 112:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_MISC_REG    = SIGMA_A_D_CFG1_DSM_MISC;
  98              		.loc 1 112 0
  99 0032 2B4B     		ldr	r3, .L2+16
 100 0034 0022     		movs	r2, #0
 101 0036 1A70     		strb	r2, [r3]
 113:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CLK_REG    |= SIGMA_A_D_CFG1_DSM_CLK;
 102              		.loc 1 113 0
 103 0038 2A4A     		ldr	r2, .L2+20
 104 003a 2A4B     		ldr	r3, .L2+20
 105 003c 1B78     		ldrb	r3, [r3]
 106 003e DBB2     		uxtb	r3, r3
 107 0040 43F01803 		orr	r3, r3, #24
 108 0044 DBB2     		uxtb	r3, r3
 109 0046 1370     		strb	r3, [r2]
 114:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_REF1_REG    = SIGMA_A_D_CFG1_DSM_REF1;
 110              		.loc 1 114 0
 111 0048 274B     		ldr	r3, .L2+24
 112 004a 0022     		movs	r2, #0
 113 004c 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 5


 116:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_OUT0_REG    = SIGMA_A_D_CFG1_DSM_OUT0;
 114              		.loc 1 116 0
 115 004e 274B     		ldr	r3, .L2+28
 116 0050 0022     		movs	r2, #0
 117 0052 1A70     		strb	r2, [r3]
 117:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_OUT1_REG    = SIGMA_A_D_CFG1_DSM_OUT1;
 118              		.loc 1 117 0
 119 0054 264B     		ldr	r3, .L2+32
 120 0056 0022     		movs	r2, #0
 121 0058 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 119:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR0_REG     = SIGMA_A_D_CFG1_DSM_CR0;
 122              		.loc 1 119 0
 123 005a 264B     		ldr	r3, .L2+36
 124 005c 0A22     		movs	r2, #10
 125 005e 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR1_REG     = SIGMA_A_D_CFG1_DSM_CR1;
 126              		.loc 1 120 0
 127 0060 254B     		ldr	r3, .L2+40
 128 0062 0022     		movs	r2, #0
 129 0064 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #if(SIGMA_A_D_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR3_REG     |= SIGMA_A_D_DSM_MODBIT_EN;
 123:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #else
 124:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR3_REG     = SIGMA_A_D_CFG1_DSM_CR3;
 130              		.loc 1 124 0
 131 0066 254B     		ldr	r3, .L2+44
 132 0068 0022     		movs	r2, #0
 133 006a 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/SIGMA_A_D.c **** #endif /* SIGMA_A_D_MI_ENABLE != 0u*/    
 126:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR8_REG     = SIGMA_A_D_CFG1_DSM_CR8;
 134              		.loc 1 126 0
 135 006c 244B     		ldr	r3, .L2+48
 136 006e 5B22     		movs	r2, #91
 137 0070 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR9_REG     = SIGMA_A_D_CFG1_DSM_CR9;
 138              		.loc 1 127 0
 139 0072 244B     		ldr	r3, .L2+52
 140 0074 5E22     		movs	r2, #94
 141 0076 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR13_REG    = SIGMA_A_D_CFG1_DSM_CR13;
 142              		.loc 1 128 0
 143 0078 234B     		ldr	r3, .L2+56
 144 007a 0022     		movs	r2, #0
 145 007c 1A70     		strb	r2, [r3]
 129:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 130:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_SR_REG      = SIGMA_A_D_CFG1_DEC_SR;
 146              		.loc 1 130 0
 147 007e 234B     		ldr	r3, .L2+60
 148 0080 1422     		movs	r2, #20
 149 0082 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 132:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_GainCompensation(SIGMA_A_D_CFG1_INPUT_RANGE,
 150              		.loc 1 133 0
 151 0084 0123     		movs	r3, #1
 152 0086 0093     		str	r3, [sp]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 6


 153 0088 0320     		movs	r0, #3
 154 008a 47F60271 		movw	r1, #32514
 155 008e 4FF40042 		mov	r2, #32768
 156 0092 1323     		movs	r3, #19
 157 0094 FFF7FEFF 		bl	SIGMA_A_D_GainCompensation
 134:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                       SIGMA_A_D_CFG1_IDEAL_DEC_GAIN,
 135:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                       SIGMA_A_D_CFG1_IDEAL_ODDDEC_GAIN,
 136:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                       SIGMA_A_D_CFG1_RESOLUTION,
 137:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                       SIGMA_A_D_CFG1);
 138:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1)
 139:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_GainCompensation(SIGMA_A_D_CFG2_INPUT_RANGE,
 140:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG2_IDEAL_DEC_GAIN,
 141:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG2_IDEAL_ODDDEC_GAIN,
 142:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG2_RESOLUTION,
 143:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG2);
 144:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1 */
 145:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2)
 146:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_GainCompensation(SIGMA_A_D_CFG3_INPUT_RANGE,
 147:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG3_IDEAL_DEC_GAIN,
 148:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG3_IDEAL_ODDDEC_GAIN,
 149:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG3_RESOLUTION,
 150:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG3);
 151:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2 */
 152:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3)
 153:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_GainCompensation(SIGMA_A_D_CFG4_INPUT_RANGE,
 154:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG4_IDEAL_DEC_GAIN,
 155:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG4_IDEAL_ODDDEC_GAIN,
 156:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG4_RESOLUTION,
 157:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                           SIGMA_A_D_CFG4);
 158:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3 */
 159:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 160:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Set GCOR register for config1 */
 161:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_GVAL_REG = SIGMA_A_D_gcor[SIGMA_A_D_Config - 1u].gval;
 158              		.loc 1 161 0
 159 0098 1D4A     		ldr	r2, .L2+64
 160 009a 0D4B     		ldr	r3, .L2
 161 009c 1B78     		ldrb	r3, [r3]
 162 009e DBB2     		uxtb	r3, r3
 163 00a0 013B     		subs	r3, r3, #1
 164 00a2 1C49     		ldr	r1, .L2+68
 165 00a4 9B00     		lsls	r3, r3, #2
 166 00a6 0B44     		add	r3, r3, r1
 167 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 168 00aa 1370     		strb	r3, [r2]
 162:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CY_SET_REG16(SIGMA_A_D_DEC_GCOR_16B_PTR, SIGMA_A_D_gcor[SIGMA_A_D_Config - 1u].gcor);
 169              		.loc 1 162 0
 170 00ac 1A4A     		ldr	r2, .L2+72
 171 00ae 084B     		ldr	r3, .L2
 172 00b0 1B78     		ldrb	r3, [r3]
 173 00b2 DBB2     		uxtb	r3, r3
 174 00b4 013B     		subs	r3, r3, #1
 175 00b6 1749     		ldr	r1, .L2+68
 176 00b8 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 177 00bc 1380     		strh	r3, [r2]	@ movhi
 163:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 164:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_InitConfig(SIGMA_A_D_Config);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 7


 178              		.loc 1 165 0
 179 00be 044B     		ldr	r3, .L2
 180 00c0 1B78     		ldrb	r3, [r3]
 181 00c2 DBB2     		uxtb	r3, r3
 182 00c4 1846     		mov	r0, r3
 183 00c6 FFF7FEFF 		bl	SIGMA_A_D_InitConfig
 166:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 184              		.loc 1 166 0
 185 00ca BD46     		mov	sp, r7
 186              		.cfi_def_cfa_register 13
 187              		@ sp needed
 188 00cc 80BD     		pop	{r7, pc}
 189              	.L3:
 190 00ce 00BF     		.align	2
 191              	.L2:
 192 00d0 00000000 		.word	SIGMA_A_D_Config
 193 00d4 00000000 		.word	SIGMA_A_D_convDone
 194 00d8 96580040 		.word	1073764502
 195 00dc 97580040 		.word	1073764503
 196 00e0 9E580040 		.word	1073764510
 197 00e4 075B0040 		.word	1073765127
 198 00e8 93580040 		.word	1073764499
 199 00ec 885B0040 		.word	1073765256
 200 00f0 895B0040 		.word	1073765257
 201 00f4 80580040 		.word	1073764480
 202 00f8 81580040 		.word	1073764481
 203 00fc 83580040 		.word	1073764483
 204 0100 88580040 		.word	1073764488
 205 0104 89580040 		.word	1073764489
 206 0108 8D580040 		.word	1073764493
 207 010c 014E0040 		.word	1073761793
 208 0110 0E4E0040 		.word	1073761806
 209 0114 04000000 		.word	SIGMA_A_D_gcor
 210 0118 0C4E0040 		.word	1073761804
 211              		.cfi_endproc
 212              	.LFE0:
 213              		.size	SIGMA_A_D_Init, .-SIGMA_A_D_Init
 214              		.section	.text.SIGMA_A_D_Enable,"ax",%progbits
 215              		.align	2
 216              		.global	SIGMA_A_D_Enable
 217              		.thumb
 218              		.thumb_func
 219              		.type	SIGMA_A_D_Enable, %function
 220              	SIGMA_A_D_Enable:
 221              	.LFB1:
 167:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 168:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 169:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /******************************************************************************
 170:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Enable
 171:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************
 172:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 173:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 174:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Enables the ADC DelSig block operation.
 175:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 176:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 177:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 178:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 8


 179:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 180:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 181:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 182:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 183:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 184:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_Enable(void) 
 185:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 222              		.loc 1 185 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 8
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 82B0     		sub	sp, sp, #8
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 186:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 	uint8 config;
 187:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 enableInterrupts;
 188:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     enableInterrupts = CyEnterCriticalSection();
 234              		.loc 1 188 0
 235 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 236 000a 0346     		mov	r3, r0
 237 000c FB71     		strb	r3, [r7, #7]
 189:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 190:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Read volatile variable to the local variable */
 191:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     config = SIGMA_A_D_Config;
 238              		.loc 1 191 0
 239 000e 444B     		ldr	r3, .L5
 240 0010 1B78     		ldrb	r3, [r3]
 241 0012 BB71     		strb	r3, [r7, #6]
 192:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
 193:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable active mode power for ADC */
 194:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_DEC_REG |= SIGMA_A_D_ACT_PWR_DEC_EN;
 242              		.loc 1 194 0
 243 0014 434A     		ldr	r2, .L5+4
 244 0016 434B     		ldr	r3, .L5+4
 245 0018 1B78     		ldrb	r3, [r3]
 246 001a DBB2     		uxtb	r3, r3
 247 001c 43F00103 		orr	r3, r3, #1
 248 0020 DBB2     		uxtb	r3, r3
 249 0022 1370     		strb	r3, [r2]
 195:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_DSM_REG |= SIGMA_A_D_ACT_PWR_DSM_EN;
 250              		.loc 1 195 0
 251 0024 3F4A     		ldr	r2, .L5+4
 252 0026 3F4B     		ldr	r3, .L5+4
 253 0028 1B78     		ldrb	r3, [r3]
 254 002a DBB2     		uxtb	r3, r3
 255 002c 43F01003 		orr	r3, r3, #16
 256 0030 DBB2     		uxtb	r3, r3
 257 0032 1370     		strb	r3, [r2]
 196:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 197:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      /* Enable alternative active mode power for ADC */
 198:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_DEC_REG |= SIGMA_A_D_STBY_PWR_DEC_EN;
 258              		.loc 1 198 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 9


 259 0034 3C4A     		ldr	r2, .L5+8
 260 0036 3C4B     		ldr	r3, .L5+8
 261 0038 1B78     		ldrb	r3, [r3]
 262 003a DBB2     		uxtb	r3, r3
 263 003c 43F00103 		orr	r3, r3, #1
 264 0040 DBB2     		uxtb	r3, r3
 265 0042 1370     		strb	r3, [r2]
 199:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_DSM_REG |= SIGMA_A_D_STBY_PWR_DSM_EN;
 266              		.loc 1 199 0
 267 0044 384A     		ldr	r2, .L5+8
 268 0046 384B     		ldr	r3, .L5+8
 269 0048 1B78     		ldrb	r3, [r3]
 270 004a DBB2     		uxtb	r3, r3
 271 004c 43F01003 		orr	r3, r3, #16
 272 0050 DBB2     		uxtb	r3, r3
 273 0052 1370     		strb	r3, [r2]
 200:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 201:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG |= SIGMA_A_D_IGNORE_PRESA1;
 274              		.loc 1 202 0
 275 0054 354A     		ldr	r2, .L5+12
 276 0056 354B     		ldr	r3, .L5+12
 277 0058 1B78     		ldrb	r3, [r3]
 278 005a DBB2     		uxtb	r3, r3
 279 005c 43F00203 		orr	r3, r3, #2
 280 0060 DBB2     		uxtb	r3, r3
 281 0062 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG |= SIGMA_A_D_IGNORE_PRESA2;
 282              		.loc 1 203 0
 283 0064 324A     		ldr	r2, .L5+16
 284 0066 324B     		ldr	r3, .L5+16
 285 0068 1B78     		ldrb	r3, [r3]
 286 006a DBB2     		uxtb	r3, r3
 287 006c 43F00203 		orr	r3, r3, #2
 288 0070 DBB2     		uxtb	r3, r3
 289 0072 1370     		strb	r3, [r2]
 204:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 205:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR17_REG |= (SIGMA_A_D_DSM_EN_BUF_VREF | SIGMA_A_D_DSM_EN_BUF_VCM);
 290              		.loc 1 205 0
 291 0074 2F4A     		ldr	r2, .L5+20
 292 0076 2F4B     		ldr	r3, .L5+20
 293 0078 1B78     		ldrb	r3, [r3]
 294 007a DBB2     		uxtb	r3, r3
 295 007c 43F00303 		orr	r3, r3, #3
 296 0080 DBB2     		uxtb	r3, r3
 297 0082 1370     		strb	r3, [r2]
 206:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 207:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if (((SIGMA_A_D_CFG1_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) || \
 209:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           (SIGMA_A_D_CFG1_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32)) || \
 210:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1) && \
 211:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           ((SIGMA_A_D_CFG2_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||  \
 212:.\Generated_Source\PSoC5/SIGMA_A_D.c ****            (SIGMA_A_D_CFG2_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))) || \
 213:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2) && \
 214:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           ((SIGMA_A_D_CFG3_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||  \
 215:.\Generated_Source\PSoC5/SIGMA_A_D.c ****            (SIGMA_A_D_CFG3_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))) || \
 216:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3) && \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 10


 217:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           ((SIGMA_A_D_CFG4_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) || \
 218:.\Generated_Source\PSoC5/SIGMA_A_D.c ****            (SIGMA_A_D_CFG4_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))))
 219:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if (((config == 1u) &&
 220:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((SIGMA_A_D_CFG1_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||
 221:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG1_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))) ||
 222:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((config == 2u) &&
 223:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((SIGMA_A_D_CFG2_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||
 224:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))) ||
 225:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((config == 3u) &&
 226:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((SIGMA_A_D_CFG3_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||
 227:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))) ||
 228:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((config == 4u) &&
 229:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((SIGMA_A_D_CFG4_REFERENCE == SIGMA_A_D_EXT_REF_ON_P03) ||
 230:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_REFERENCE == SIGMA_A_D_EXT_REF_ON_P32))))
 231:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 232:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Disable the REFBUF0 */
 233:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR17_REG &= (uint8)~SIGMA_A_D_DSM_EN_BUF_VREF;
 234:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 235:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* External ref */
 236:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 237:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if (((SIGMA_A_D_CFG1_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF) || \
 238:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1) && \
 239:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           (SIGMA_A_D_CFG2_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)) || \
 240:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2) && \
 241:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           (SIGMA_A_D_CFG3_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)) || \
 242:.\Generated_Source\PSoC5/SIGMA_A_D.c ****          ((SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3) && \
 243:.\Generated_Source\PSoC5/SIGMA_A_D.c ****           (SIGMA_A_D_CFG4_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF))))
 244:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(((config == 1u) &&
 245:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             (SIGMA_A_D_CFG1_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF) &&
 246:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             ((SIGMA_A_D_CFG1_REFERENCE != SIGMA_A_D_EXT_REF_ON_P03) &&
 247:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG1_REFERENCE != SIGMA_A_D_EXT_REF_ON_P32))) ||
 248:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((config == 2u) &&
 249:.\Generated_Source\PSoC5/SIGMA_A_D.c ****               (SIGMA_A_D_CFG2_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF) &&
 250:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((SIGMA_A_D_CFG2_REFERENCE != SIGMA_A_D_EXT_REF_ON_P03) &&
 251:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_REFERENCE != SIGMA_A_D_EXT_REF_ON_P32))) ||
 252:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((config == 3u) &&
 253:.\Generated_Source\PSoC5/SIGMA_A_D.c ****               (SIGMA_A_D_CFG3_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF) &&
 254:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((SIGMA_A_D_CFG3_REFERENCE != SIGMA_A_D_EXT_REF_ON_P03) &&
 255:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_REFERENCE != SIGMA_A_D_EXT_REF_ON_P32))) ||
 256:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((config == 4u) &&
 257:.\Generated_Source\PSoC5/SIGMA_A_D.c ****               (SIGMA_A_D_CFG4_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF) &&
 258:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              ((SIGMA_A_D_CFG4_REFERENCE != SIGMA_A_D_EXT_REF_ON_P03) &&
 259:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_REFERENCE != SIGMA_A_D_EXT_REF_ON_P32))))
 260:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 261:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Enable the REFBUF1 */
 262:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF0_REG |= SIGMA_A_D_DSM_EN_BUF_VREF_INN;
 263:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 264:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* VSSA_TO_2VREF */
 265:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(config != 0u)
 266:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 267:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Suppress compiler warning */
 268:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 269:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 270:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Wait for 3 microseconds */
 271:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyDelayUs(SIGMA_A_D_PRES_DELAY_TIME);
 298              		.loc 1 271 0
 299 0084 0320     		movs	r0, #3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 11


 300 0086 FFF7FEFF 		bl	CyDelayUs
 272:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 273:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable the press circuit */
 274:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG &= (uint8)~SIGMA_A_D_IGNORE_PRESA1;
 301              		.loc 1 274 0
 302 008a 284A     		ldr	r2, .L5+12
 303 008c 274B     		ldr	r3, .L5+12
 304 008e 1B78     		ldrb	r3, [r3]
 305 0090 DBB2     		uxtb	r3, r3
 306 0092 23F00203 		bic	r3, r3, #2
 307 0096 DBB2     		uxtb	r3, r3
 308 0098 1370     		strb	r3, [r2]
 275:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG &= (uint8)~SIGMA_A_D_IGNORE_PRESA2;
 309              		.loc 1 275 0
 310 009a 254A     		ldr	r2, .L5+16
 311 009c 244B     		ldr	r3, .L5+16
 312 009e 1B78     		ldrb	r3, [r3]
 313 00a0 DBB2     		uxtb	r3, r3
 314 00a2 23F00203 		bic	r3, r3, #2
 315 00a6 DBB2     		uxtb	r3, r3
 316 00a8 1370     		strb	r3, [r2]
 276:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 277:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable negative pumps for DSM  */
 278:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PUMP_CR1_REG  |= ( SIGMA_A_D_PUMP_CR1_CLKSEL | SIGMA_A_D_PUMP_CR1_FORCE );
 317              		.loc 1 278 0
 318 00aa 234A     		ldr	r2, .L5+24
 319 00ac 224B     		ldr	r3, .L5+24
 320 00ae 1B78     		ldrb	r3, [r3]
 321 00b0 DBB2     		uxtb	r3, r3
 322 00b2 43F00603 		orr	r3, r3, #6
 323 00b6 DBB2     		uxtb	r3, r3
 324 00b8 1370     		strb	r3, [r2]
 279:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 280:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable Modulator Chopping if required */
 281:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR2_REG = SIGMA_A_D_CFG1_DSM_CR2;
 325              		.loc 1 281 0
 326 00ba 204B     		ldr	r3, .L5+28
 327 00bc 7A22     		movs	r2, #122
 328 00be 1A70     		strb	r2, [r3]
 282:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 283:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* This is only valid if there is an internal clock */
 284:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
 285:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_PWRMGR_CLK_REG |= SIGMA_A_D_ACT_PWR_CLK_EN;
 329              		.loc 1 285 0
 330 00c0 1F4A     		ldr	r2, .L5+32
 331 00c2 1F4B     		ldr	r3, .L5+32
 332 00c4 1B78     		ldrb	r3, [r3]
 333 00c6 DBB2     		uxtb	r3, r3
 334 00c8 43F00103 		orr	r3, r3, #1
 335 00cc DBB2     		uxtb	r3, r3
 336 00ce 1370     		strb	r3, [r2]
 286:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_STBY_PWRMGR_CLK_REG |= SIGMA_A_D_STBY_PWR_CLK_EN;
 337              		.loc 1 286 0
 338 00d0 1C4A     		ldr	r2, .L5+36
 339 00d2 1C4B     		ldr	r3, .L5+36
 340 00d4 1B78     		ldrb	r3, [r3]
 341 00d6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 12


 342 00d8 43F00103 		orr	r3, r3, #1
 343 00dc DBB2     		uxtb	r3, r3
 344 00de 1370     		strb	r3, [r2]
 287:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
 288:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 289:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_CHARGE_PUMP_CLK_REG |= SIGMA_A_D_ACT_PWR_CHARGE_PUMP_CLK_EN;
 345              		.loc 1 290 0
 346 00e0 194A     		ldr	r2, .L5+40
 347 00e2 194B     		ldr	r3, .L5+40
 348 00e4 1B78     		ldrb	r3, [r3]
 349 00e6 DBB2     		uxtb	r3, r3
 350 00e8 43F00103 		orr	r3, r3, #1
 351 00ec DBB2     		uxtb	r3, r3
 352 00ee 1370     		strb	r3, [r2]
 291:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= SIGMA_A_D_STBY_PWR_CHARGE_PUMP_CLK_EN;
 353              		.loc 1 291 0
 354 00f0 164A     		ldr	r2, .L5+44
 355 00f2 164B     		ldr	r3, .L5+44
 356 00f4 1B78     		ldrb	r3, [r3]
 357 00f6 DBB2     		uxtb	r3, r3
 358 00f8 43F00103 		orr	r3, r3, #1
 359 00fc DBB2     		uxtb	r3, r3
 360 00fe 1370     		strb	r3, [r2]
 292:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 293:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_IRQ_REMOVE == 0u)
 294:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Clear a pending interrupt */
 295:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CyIntClearPending(SIGMA_A_D_INTC_NUMBER);
 361              		.loc 1 295 0
 362 0100 134B     		ldr	r3, .L5+48
 363 0102 4FF00052 		mov	r2, #536870912
 364 0106 1A60     		str	r2, [r3]
 296:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Enable interrupt */
 297:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CyIntEnable(SIGMA_A_D_INTC_NUMBER);
 365              		.loc 1 297 0
 366 0108 124B     		ldr	r3, .L5+52
 367 010a 4FF00052 		mov	r2, #536870912
 368 010e 1A60     		str	r2, [r3]
 298:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif   /* End SIGMA_A_D_IRQ_REMOVE */
 299:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 300:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyExitCriticalSection(enableInterrupts);
 369              		.loc 1 300 0
 370 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 371 0112 1846     		mov	r0, r3
 372 0114 FFF7FEFF 		bl	CyExitCriticalSection
 301:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 302:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 373              		.loc 1 302 0
 374 0118 0837     		adds	r7, r7, #8
 375              		.cfi_def_cfa_offset 8
 376 011a BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 011c 80BD     		pop	{r7, pc}
 380              	.L6:
 381 011e 00BF     		.align	2
 382              	.L5:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 13


 383 0120 00000000 		.word	SIGMA_A_D_Config
 384 0124 AA430040 		.word	1073759146
 385 0128 BA430040 		.word	1073759162
 386 012c F8460040 		.word	1073759992
 387 0130 F9460040 		.word	1073759993
 388 0134 91580040 		.word	1073764497
 389 0138 77580040 		.word	1073764471
 390 013c 82580040 		.word	1073764482
 391 0140 A1430040 		.word	1073759137
 392 0144 B1430040 		.word	1073759153
 393 0148 A2430040 		.word	1073759138
 394 014c B2430040 		.word	1073759154
 395 0150 80E200E0 		.word	-536812928
 396 0154 00E100E0 		.word	-536813312
 397              		.cfi_endproc
 398              	.LFE1:
 399              		.size	SIGMA_A_D_Enable, .-SIGMA_A_D_Enable
 400              		.section	.text.SIGMA_A_D_Start,"ax",%progbits
 401              		.align	2
 402              		.global	SIGMA_A_D_Start
 403              		.thumb
 404              		.thumb_func
 405              		.type	SIGMA_A_D_Start, %function
 406              	SIGMA_A_D_Start:
 407              	.LFB2:
 303:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 304:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 305:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Start
 307:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 309:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 310:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Performs all required initialization for this component and enables
 311:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  the power. It configure all the register the first time it is called.
 312:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  on the power. If multiple configurations are selected, it will
 314:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  configure the ADC for configuration 1 by default, unless the
 315:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_SelectConfiguration( ) function has been called to change
 316:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  the default setting.
 317:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 318:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 319:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 320:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 321:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 322:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 323:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 324:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 325:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_initVar:  Used to check the initial configuration,
 326:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  modified when this function is called for the first time.
 327:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 328:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_Start(void) 
 330:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 408              		.loc 1 330 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 14


 412 0000 80B5     		push	{r7, lr}
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 331:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(SIGMA_A_D_initVar == 0u)
 418              		.loc 1 331 0
 419 0004 084B     		ldr	r3, .L10
 420 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 0008 002B     		cmp	r3, #0
 422 000a 09D1     		bne	.L8
 332:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 333:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_started == 0u)
 423              		.loc 1 333 0
 424 000c 074B     		ldr	r3, .L10+4
 425 000e 1B78     		ldrb	r3, [r3]
 426 0010 DBB2     		uxtb	r3, r3
 427 0012 002B     		cmp	r3, #0
 428 0014 01D1     		bne	.L9
 334:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 335:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_Init();
 429              		.loc 1 335 0
 430 0016 FFF7FEFF 		bl	SIGMA_A_D_Init
 431              	.L9:
 336:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 337:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_initVar = 1u;
 432              		.loc 1 337 0
 433 001a 034B     		ldr	r3, .L10
 434 001c 0122     		movs	r2, #1
 435 001e 1A70     		strb	r2, [r3]
 436              	.L8:
 338:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 339:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 340:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable the ADC */
 341:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_Enable();
 437              		.loc 1 341 0
 438 0020 FFF7FEFF 		bl	SIGMA_A_D_Enable
 342:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 439              		.loc 1 342 0
 440 0024 80BD     		pop	{r7, pc}
 441              	.L11:
 442 0026 00BF     		.align	2
 443              	.L10:
 444 0028 00000000 		.word	SIGMA_A_D_initVar
 445 002c 00000000 		.word	SIGMA_A_D_started
 446              		.cfi_endproc
 447              	.LFE2:
 448              		.size	SIGMA_A_D_Start, .-SIGMA_A_D_Start
 449              		.section	.text.SIGMA_A_D_Stop,"ax",%progbits
 450              		.align	2
 451              		.global	SIGMA_A_D_Stop
 452              		.thumb
 453              		.thumb_func
 454              		.type	SIGMA_A_D_Stop, %function
 455              	SIGMA_A_D_Stop:
 456              	.LFB3:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 15


 343:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 344:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 345:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Stop
 347:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 348:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 349:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 350:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function stops and powers down the ADC component and the internal
 351:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  clock if the external clock is not selected. If an external clock is
 352:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  used, it is up to the designer to power down the external clock it
 353:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  required.
 354:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 355:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 356:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 357:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 358:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 359:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 360:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 361:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 362:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_Stop(void) 
 363:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 457              		.loc 1 363 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 82B0     		sub	sp, sp, #8
 466              		.cfi_def_cfa_offset 16
 467 0004 00AF     		add	r7, sp, #0
 468              		.cfi_def_cfa_register 7
 364:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 enableInterrupts;
 365:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     enableInterrupts = CyEnterCriticalSection();
 469              		.loc 1 365 0
 470 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 471 000a 0346     		mov	r3, r0
 472 000c FB71     		strb	r3, [r7, #7]
 366:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 367:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Stop conversions */
 368:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_CR_REG &= (uint8)~SIGMA_A_D_DEC_START_CONV;
 473              		.loc 1 368 0
 474 000e 4D4A     		ldr	r2, .L13
 475 0010 4C4B     		ldr	r3, .L13
 476 0012 1B78     		ldrb	r3, [r3]
 477 0014 DBB2     		uxtb	r3, r3
 478 0016 23F00103 		bic	r3, r3, #1
 479 001a DBB2     		uxtb	r3, r3
 480 001c 1370     		strb	r3, [r2]
 369:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_SR_REG |=  SIGMA_A_D_DEC_INTR_CLEAR;
 481              		.loc 1 369 0
 482 001e 4A4A     		ldr	r2, .L13+4
 483 0020 494B     		ldr	r3, .L13+4
 484 0022 1B78     		ldrb	r3, [r3]
 485 0024 DBB2     		uxtb	r3, r3
 486 0026 43F00403 		orr	r3, r3, #4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 16


 487 002a DBB2     		uxtb	r3, r3
 488 002c 1370     		strb	r3, [r2]
 370:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 371:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:.\Generated_Source\PSoC5/SIGMA_A_D.c ****        enable PRES */
 373:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG |= SIGMA_A_D_IGNORE_PRESA1;
 489              		.loc 1 373 0
 490 002e 474A     		ldr	r2, .L13+8
 491 0030 464B     		ldr	r3, .L13+8
 492 0032 1B78     		ldrb	r3, [r3]
 493 0034 DBB2     		uxtb	r3, r3
 494 0036 43F00203 		orr	r3, r3, #2
 495 003a DBB2     		uxtb	r3, r3
 496 003c 1370     		strb	r3, [r2]
 374:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG |= SIGMA_A_D_IGNORE_PRESA2;
 497              		.loc 1 374 0
 498 003e 444A     		ldr	r2, .L13+12
 499 0040 434B     		ldr	r3, .L13+12
 500 0042 1B78     		ldrb	r3, [r3]
 501 0044 DBB2     		uxtb	r3, r3
 502 0046 43F00203 		orr	r3, r3, #2
 503 004a DBB2     		uxtb	r3, r3
 504 004c 1370     		strb	r3, [r2]
 375:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 376:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR17_REG &= (uint8)~(SIGMA_A_D_DSM_EN_BUF_VREF | SIGMA_A_D_DSM_EN_BUF_VCM);
 505              		.loc 1 376 0
 506 004e 414A     		ldr	r2, .L13+16
 507 0050 404B     		ldr	r3, .L13+16
 508 0052 1B78     		ldrb	r3, [r3]
 509 0054 DBB2     		uxtb	r3, r3
 510 0056 23F00303 		bic	r3, r3, #3
 511 005a DBB2     		uxtb	r3, r3
 512 005c 1370     		strb	r3, [r2]
 377:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_REF0_REG &= (uint8)~SIGMA_A_D_DSM_EN_BUF_VREF_INN;
 513              		.loc 1 377 0
 514 005e 3E4A     		ldr	r2, .L13+20
 515 0060 3D4B     		ldr	r3, .L13+20
 516 0062 1B78     		ldrb	r3, [r3]
 517 0064 DBB2     		uxtb	r3, r3
 518 0066 23F00803 		bic	r3, r3, #8
 519 006a DBB2     		uxtb	r3, r3
 520 006c 1370     		strb	r3, [r2]
 378:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 379:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Wait for 3 microseconds. */
 380:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyDelayUs(SIGMA_A_D_PRES_DELAY_TIME);
 521              		.loc 1 380 0
 522 006e 0320     		movs	r0, #3
 523 0070 FFF7FEFF 		bl	CyDelayUs
 381:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 382:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable the press circuit */
 383:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG &= (uint8)~SIGMA_A_D_IGNORE_PRESA1;
 524              		.loc 1 383 0
 525 0074 354A     		ldr	r2, .L13+8
 526 0076 354B     		ldr	r3, .L13+8
 527 0078 1B78     		ldrb	r3, [r3]
 528 007a DBB2     		uxtb	r3, r3
 529 007c 23F00203 		bic	r3, r3, #2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 17


 530 0080 DBB2     		uxtb	r3, r3
 531 0082 1370     		strb	r3, [r2]
 384:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG &= (uint8)~SIGMA_A_D_IGNORE_PRESA2;
 532              		.loc 1 384 0
 533 0084 324A     		ldr	r2, .L13+12
 534 0086 324B     		ldr	r3, .L13+12
 535 0088 1B78     		ldrb	r3, [r3]
 536 008a DBB2     		uxtb	r3, r3
 537 008c 23F00203 		bic	r3, r3, #2
 538 0090 DBB2     		uxtb	r3, r3
 539 0092 1370     		strb	r3, [r2]
 385:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 386:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable power to the ADC */
 387:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_DSM_REG &= (uint8)~SIGMA_A_D_ACT_PWR_DSM_EN;
 540              		.loc 1 387 0
 541 0094 314A     		ldr	r2, .L13+24
 542 0096 314B     		ldr	r3, .L13+24
 543 0098 1B78     		ldrb	r3, [r3]
 544 009a DBB2     		uxtb	r3, r3
 545 009c 23F01003 		bic	r3, r3, #16
 546 00a0 DBB2     		uxtb	r3, r3
 547 00a2 1370     		strb	r3, [r2]
 388:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 389:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable power to Decimator block */
 390:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_DEC_REG &= (uint8)~SIGMA_A_D_ACT_PWR_DEC_EN;
 548              		.loc 1 390 0
 549 00a4 2D4A     		ldr	r2, .L13+24
 550 00a6 2D4B     		ldr	r3, .L13+24
 551 00a8 1B78     		ldrb	r3, [r3]
 552 00aa DBB2     		uxtb	r3, r3
 553 00ac 23F00103 		bic	r3, r3, #1
 554 00b0 DBB2     		uxtb	r3, r3
 555 00b2 1370     		strb	r3, [r2]
 391:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 392:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable alternative active power to the ADC */
 393:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_DEC_REG &= (uint8)~SIGMA_A_D_STBY_PWR_DEC_EN;
 556              		.loc 1 393 0
 557 00b4 2A4A     		ldr	r2, .L13+28
 558 00b6 2A4B     		ldr	r3, .L13+28
 559 00b8 1B78     		ldrb	r3, [r3]
 560 00ba DBB2     		uxtb	r3, r3
 561 00bc 23F00103 		bic	r3, r3, #1
 562 00c0 DBB2     		uxtb	r3, r3
 563 00c2 1370     		strb	r3, [r2]
 394:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_DSM_REG &= (uint8)~SIGMA_A_D_STBY_PWR_DSM_EN;
 564              		.loc 1 394 0
 565 00c4 264A     		ldr	r2, .L13+28
 566 00c6 264B     		ldr	r3, .L13+28
 567 00c8 1B78     		ldrb	r3, [r3]
 568 00ca DBB2     		uxtb	r3, r3
 569 00cc 23F01003 		bic	r3, r3, #16
 570 00d0 DBB2     		uxtb	r3, r3
 571 00d2 1370     		strb	r3, [r2]
 395:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 396:.\Generated_Source\PSoC5/SIGMA_A_D.c ****    /* Disable negative pumps for DSM  */
 397:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PUMP_CR1_REG &= (uint8)~(SIGMA_A_D_PUMP_CR1_CLKSEL | SIGMA_A_D_PUMP_CR1_FORCE );
 572              		.loc 1 397 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 18


 573 00d4 234A     		ldr	r2, .L13+32
 574 00d6 234B     		ldr	r3, .L13+32
 575 00d8 1B78     		ldrb	r3, [r3]
 576 00da DBB2     		uxtb	r3, r3
 577 00dc 23F00603 		bic	r3, r3, #6
 578 00e0 DBB2     		uxtb	r3, r3
 579 00e2 1370     		strb	r3, [r2]
 398:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 399:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* This is only valid if there is an internal clock */
 400:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
 401:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_PWRMGR_CLK_REG &= (uint8)~SIGMA_A_D_ACT_PWR_CLK_EN;
 580              		.loc 1 401 0
 581 00e4 204A     		ldr	r2, .L13+36
 582 00e6 204B     		ldr	r3, .L13+36
 583 00e8 1B78     		ldrb	r3, [r3]
 584 00ea DBB2     		uxtb	r3, r3
 585 00ec 23F00103 		bic	r3, r3, #1
 586 00f0 DBB2     		uxtb	r3, r3
 587 00f2 1370     		strb	r3, [r2]
 402:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_STBY_PWRMGR_CLK_REG &= (uint8)~SIGMA_A_D_STBY_PWR_CLK_EN;
 588              		.loc 1 402 0
 589 00f4 1D4A     		ldr	r2, .L13+40
 590 00f6 1D4B     		ldr	r3, .L13+40
 591 00f8 1B78     		ldrb	r3, [r3]
 592 00fa DBB2     		uxtb	r3, r3
 593 00fc 23F00103 		bic	r3, r3, #1
 594 0100 DBB2     		uxtb	r3, r3
 595 0102 1370     		strb	r3, [r2]
 403:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
 404:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 405:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable Modulator Chopping */
 406:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_CR2_REG &= (uint8)~SIGMA_A_D_DSM_MOD_CHOP_EN;
 596              		.loc 1 406 0
 597 0104 1A4A     		ldr	r2, .L13+44
 598 0106 1A4B     		ldr	r3, .L13+44
 599 0108 1B78     		ldrb	r3, [r3]
 600 010a DBB2     		uxtb	r3, r3
 601 010c 23F00803 		bic	r3, r3, #8
 602 0110 DBB2     		uxtb	r3, r3
 603 0112 1370     		strb	r3, [r2]
 407:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable power to charge pump clock */
 408:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~SIGMA_A_D_ACT_PWR_CHARGE_PUMP_CLK_EN;
 604              		.loc 1 408 0
 605 0114 174A     		ldr	r2, .L13+48
 606 0116 174B     		ldr	r3, .L13+48
 607 0118 1B78     		ldrb	r3, [r3]
 608 011a DBB2     		uxtb	r3, r3
 609 011c 23F00103 		bic	r3, r3, #1
 610 0120 DBB2     		uxtb	r3, r3
 611 0122 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~SIGMA_A_D_STBY_PWR_CHARGE_PUMP_CLK_EN;
 612              		.loc 1 409 0
 613 0124 144A     		ldr	r2, .L13+52
 614 0126 144B     		ldr	r3, .L13+52
 615 0128 1B78     		ldrb	r3, [r3]
 616 012a DBB2     		uxtb	r3, r3
 617 012c 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 19


 618 0130 DBB2     		uxtb	r3, r3
 619 0132 1370     		strb	r3, [r2]
 410:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
 411:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyExitCriticalSection(enableInterrupts);
 620              		.loc 1 411 0
 621 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 622 0136 1846     		mov	r0, r3
 623 0138 FFF7FEFF 		bl	CyExitCriticalSection
 412:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 624              		.loc 1 412 0
 625 013c 0837     		adds	r7, r7, #8
 626              		.cfi_def_cfa_offset 8
 627 013e BD46     		mov	sp, r7
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 0140 80BD     		pop	{r7, pc}
 631              	.L14:
 632 0142 00BF     		.align	2
 633              	.L13:
 634 0144 004E0040 		.word	1073761792
 635 0148 014E0040 		.word	1073761793
 636 014c F8460040 		.word	1073759992
 637 0150 F9460040 		.word	1073759993
 638 0154 91580040 		.word	1073764497
 639 0158 92580040 		.word	1073764498
 640 015c AA430040 		.word	1073759146
 641 0160 BA430040 		.word	1073759162
 642 0164 77580040 		.word	1073764471
 643 0168 A1430040 		.word	1073759137
 644 016c B1430040 		.word	1073759153
 645 0170 82580040 		.word	1073764482
 646 0174 A2430040 		.word	1073759138
 647 0178 B2430040 		.word	1073759154
 648              		.cfi_endproc
 649              	.LFE3:
 650              		.size	SIGMA_A_D_Stop, .-SIGMA_A_D_Stop
 651              		.section	.text.SIGMA_A_D_SetBufferGain,"ax",%progbits
 652              		.align	2
 653              		.global	SIGMA_A_D_SetBufferGain
 654              		.thumb
 655              		.thumb_func
 656              		.type	SIGMA_A_D_SetBufferGain, %function
 657              	SIGMA_A_D_SetBufferGain:
 658              	.LFB4:
 413:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 414:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 415:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetBufferGain
 417:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 419:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 420:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Sets input buffer gain.
 421:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 422:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 423:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 425:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 20


 426:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 427:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 428:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 429:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_SetBufferGain(uint8 gain) 
 430:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 659              		.loc 1 430 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 85B0     		sub	sp, sp, #20
 668              		.cfi_def_cfa_offset 24
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 0346     		mov	r3, r0
 672 0008 FB71     		strb	r3, [r7, #7]
 431:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 tmpReg;
 432:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpReg = SIGMA_A_D_DSM_BUF1_REG & (uint8)~SIGMA_A_D_DSM_GAIN_MASK;
 673              		.loc 1 432 0
 674 000a 0B4B     		ldr	r3, .L16
 675 000c 1B78     		ldrb	r3, [r3]
 676 000e DBB2     		uxtb	r3, r3
 677 0010 23F00C03 		bic	r3, r3, #12
 678 0014 FB73     		strb	r3, [r7, #15]
 433:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpReg |= (uint8)(gain << SIGMA_A_D_DSM_GAIN_SHIFT) & SIGMA_A_D_DSM_GAIN_MASK;
 679              		.loc 1 433 0
 680 0016 FB79     		ldrb	r3, [r7, #7]
 681 0018 9B00     		lsls	r3, r3, #2
 682 001a DBB2     		uxtb	r3, r3
 683 001c 03F00C03 		and	r3, r3, #12
 684 0020 DAB2     		uxtb	r2, r3
 685 0022 FB7B     		ldrb	r3, [r7, #15]
 686 0024 1343     		orrs	r3, r3, r2
 687 0026 FB73     		strb	r3, [r7, #15]
 434:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_BUF1_REG = tmpReg;
 688              		.loc 1 434 0
 689 0028 034A     		ldr	r2, .L16
 690 002a FB7B     		ldrb	r3, [r7, #15]
 691 002c 1370     		strb	r3, [r2]
 435:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 692              		.loc 1 435 0
 693 002e 1437     		adds	r7, r7, #20
 694              		.cfi_def_cfa_offset 4
 695 0030 BD46     		mov	sp, r7
 696              		.cfi_def_cfa_register 13
 697              		@ sp needed
 698 0032 5DF8047B 		ldr	r7, [sp], #4
 699              		.cfi_restore 7
 700              		.cfi_def_cfa_offset 0
 701 0036 7047     		bx	lr
 702              	.L17:
 703              		.align	2
 704              	.L16:
 705 0038 9B580040 		.word	1073764507
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 21


 706              		.cfi_endproc
 707              	.LFE4:
 708              		.size	SIGMA_A_D_SetBufferGain, .-SIGMA_A_D_SetBufferGain
 709              		.section	.text.SIGMA_A_D_SetCoherency,"ax",%progbits
 710              		.align	2
 711              		.global	SIGMA_A_D_SetCoherency
 712              		.thumb
 713              		.thumb_func
 714              		.type	SIGMA_A_D_SetCoherency, %function
 715              	SIGMA_A_D_SetCoherency:
 716              	.LFB5:
 436:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 437:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 438:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetCoherency
 440:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 441:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 442:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 443:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function allows the user to change which of the ADC's 3 word
 444:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  configuration for DMA data transfer.
 449:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  coherency can be set to any byte in the last word read.
 453:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 454:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 455:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  coherency:  Two bit value to set the coherency bit.
 456:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *           00-Coherency checking off
 457:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *           01-low byte is key byte
 458:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *           02-middle byte is the key byte
 459:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *           03-high byte is the key byte
 460:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 461:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 462:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 463:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 464:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_SetCoherency(uint8 coherency) 
 466:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 717              		.loc 1 466 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722 0000 80B4     		push	{r7}
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 85B0     		sub	sp, sp, #20
 726              		.cfi_def_cfa_offset 24
 727 0004 00AF     		add	r7, sp, #0
 728              		.cfi_def_cfa_register 7
 729 0006 0346     		mov	r3, r0
 730 0008 FB71     		strb	r3, [r7, #7]
 467:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 tmpReg;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 22


 468:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 469:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpReg = SIGMA_A_D_DEC_COHER_REG & (uint8)~SIGMA_A_D_DEC_SAMP_KEY_MASK;
 731              		.loc 1 469 0
 732 000a 0A4B     		ldr	r3, .L19
 733 000c 1B78     		ldrb	r3, [r3]
 734 000e DBB2     		uxtb	r3, r3
 735 0010 23F00303 		bic	r3, r3, #3
 736 0014 FB73     		strb	r3, [r7, #15]
 470:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpReg |= coherency & SIGMA_A_D_DEC_SAMP_KEY_MASK;
 737              		.loc 1 470 0
 738 0016 FB79     		ldrb	r3, [r7, #7]
 739 0018 03F00303 		and	r3, r3, #3
 740 001c DAB2     		uxtb	r2, r3
 741 001e FB7B     		ldrb	r3, [r7, #15]
 742 0020 1343     		orrs	r3, r3, r2
 743 0022 FB73     		strb	r3, [r7, #15]
 471:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_COHER_REG = tmpReg;
 744              		.loc 1 471 0
 745 0024 034A     		ldr	r2, .L19
 746 0026 FB7B     		ldrb	r3, [r7, #15]
 747 0028 1370     		strb	r3, [r2]
 472:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 748              		.loc 1 472 0
 749 002a 1437     		adds	r7, r7, #20
 750              		.cfi_def_cfa_offset 4
 751 002c BD46     		mov	sp, r7
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 002e 5DF8047B 		ldr	r7, [sp], #4
 755              		.cfi_restore 7
 756              		.cfi_def_cfa_offset 0
 757 0032 7047     		bx	lr
 758              	.L20:
 759              		.align	2
 760              	.L19:
 761 0034 144E0040 		.word	1073761812
 762              		.cfi_endproc
 763              	.LFE5:
 764              		.size	SIGMA_A_D_SetCoherency, .-SIGMA_A_D_SetCoherency
 765              		.global	__aeabi_ui2f
 766              		.global	__aeabi_fdiv
 767              		.global	__aeabi_fmul
 768              		.global	__aeabi_f2d
 769              		.global	__aeabi_dcmpgt
 770              		.global	__aeabi_f2uiz
 771              		.section	.text.SIGMA_A_D_SetGCOR,"ax",%progbits
 772              		.align	2
 773              		.global	SIGMA_A_D_SetGCOR
 774              		.thumb
 775              		.thumb_func
 776              		.type	SIGMA_A_D_SetGCOR, %function
 777              	SIGMA_A_D_SetGCOR:
 778              	.LFB6:
 473:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 474:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 475:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 476:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetGCOR
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 23


 477:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 478:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 479:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 480:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  output registers. The numerical format for the GCOR value is:
 484:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  0x0000 -> 0.000
 485:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  0x8000 -> 1.000
 486:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  0xFFFF -> 1.99997
 487:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  When executing the function, the old GCOR value is multiplied by
 488:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  gainAdjust and reloaded into the GCOR register.
 489:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 490:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 491:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 493:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 494:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *         1 - the correction value is outside GCOR value range of
 496:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *             0.00 to 1.9999.
 497:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 498:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 504:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ******************************************************************************/
 505:.\Generated_Source\PSoC5/SIGMA_A_D.c **** uint8 SIGMA_A_D_SetGCOR(float32 gainAdjust) 
 506:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 779              		.loc 1 506 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 16
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 84B0     		sub	sp, sp, #16
 788              		.cfi_def_cfa_offset 24
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 791 0006 7860     		str	r0, [r7, #4]	@ float
 507:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint16 tmpReg;
 508:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 status;
 509:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     float32 tmpValue;
 510:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 511:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpReg = SIGMA_A_D_gcor[SIGMA_A_D_Config - 1u].gcor;
 792              		.loc 1 511 0
 793 0008 274B     		ldr	r3, .L28+8
 794 000a 1B78     		ldrb	r3, [r3]
 795 000c DBB2     		uxtb	r3, r3
 796 000e 013B     		subs	r3, r3, #1
 797 0010 264A     		ldr	r2, .L28+12
 798 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 799 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 512:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpValue = ((float32)tmpReg / (float32)SIGMA_A_D_IDEAL_GAIN_CONST);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 24


 800              		.loc 1 512 0
 801 0018 BB89     		ldrh	r3, [r7, #12]
 802 001a 1846     		mov	r0, r3
 803 001c FFF7FEFF 		bl	__aeabi_ui2f
 804 0020 0346     		mov	r3, r0
 805 0022 1846     		mov	r0, r3
 806 0024 4FF08E41 		mov	r1, #1191182336
 807 0028 FFF7FEFF 		bl	__aeabi_fdiv
 808 002c 0346     		mov	r3, r0
 809 002e BB60     		str	r3, [r7, #8]	@ float
 513:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     tmpValue = tmpValue * gainAdjust;
 810              		.loc 1 513 0
 811 0030 B868     		ldr	r0, [r7, #8]	@ float
 812 0032 7968     		ldr	r1, [r7, #4]	@ float
 813 0034 FFF7FEFF 		bl	__aeabi_fmul
 814 0038 0346     		mov	r3, r0
 815 003a BB60     		str	r3, [r7, #8]	@ float
 514:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 515:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if (tmpValue > 1.9999)
 816              		.loc 1 515 0
 817 003c B868     		ldr	r0, [r7, #8]	@ float
 818 003e FFF7FEFF 		bl	__aeabi_f2d
 819 0042 0246     		mov	r2, r0
 820 0044 0B46     		mov	r3, r1
 821 0046 1046     		mov	r0, r2
 822 0048 1946     		mov	r1, r3
 823 004a 15A3     		adr	r3, .L28
 824 004c D3E90023 		ldrd	r2, [r3]
 825 0050 FFF7FEFF 		bl	__aeabi_dcmpgt
 826 0054 0346     		mov	r3, r0
 827 0056 002B     		cmp	r3, #0
 828 0058 02D0     		beq	.L27
 516:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 517:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         status = 1u;
 829              		.loc 1 517 0
 830 005a 0123     		movs	r3, #1
 831 005c FB73     		strb	r3, [r7, #15]
 832 005e 18E0     		b	.L24
 833              	.L27:
 518:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 519:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else
 520:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 521:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         tmpValue *= (float32)SIGMA_A_D_IDEAL_GAIN_CONST;
 834              		.loc 1 521 0
 835 0060 B868     		ldr	r0, [r7, #8]	@ float
 836 0062 4FF08E41 		mov	r1, #1191182336
 837 0066 FFF7FEFF 		bl	__aeabi_fmul
 838 006a 0346     		mov	r3, r0
 839 006c BB60     		str	r3, [r7, #8]	@ float
 522:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 		tmpReg = (uint16)tmpValue;
 840              		.loc 1 522 0
 841 006e B868     		ldr	r0, [r7, #8]	@ float
 842 0070 FFF7FEFF 		bl	__aeabi_f2uiz
 843 0074 0346     		mov	r3, r0
 844 0076 BB81     		strh	r3, [r7, #12]	@ movhi
 523:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CY_SET_REG16(SIGMA_A_D_DEC_GCOR_16B_PTR, tmpReg);
 845              		.loc 1 523 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 25


 846 0078 0D4A     		ldr	r2, .L28+16
 847 007a BB89     		ldrh	r3, [r7, #12]	@ movhi
 848 007c 1380     		strh	r3, [r2]	@ movhi
 524:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:.\Generated_Source\PSoC5/SIGMA_A_D.c ****        SIGMA_A_D_gcor[SIGMA_A_D_Config - 1u].gcor = tmpReg;
 849              		.loc 1 525 0
 850 007e 0A4B     		ldr	r3, .L28+8
 851 0080 1B78     		ldrb	r3, [r3]
 852 0082 DBB2     		uxtb	r3, r3
 853 0084 013B     		subs	r3, r3, #1
 854 0086 0949     		ldr	r1, .L28+12
 855 0088 BA89     		ldrh	r2, [r7, #12]	@ movhi
 856 008a 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 526:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 527:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         status = 0u;
 857              		.loc 1 527 0
 858 008e 0023     		movs	r3, #0
 859 0090 FB73     		strb	r3, [r7, #15]
 860              	.L24:
 528:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 529:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 530:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return(status);
 861              		.loc 1 530 0
 862 0092 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 531:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 863              		.loc 1 531 0
 864 0094 1846     		mov	r0, r3
 865 0096 1037     		adds	r7, r7, #16
 866              		.cfi_def_cfa_offset 8
 867 0098 BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 009a 80BD     		pop	{r7, pc}
 871              	.L29:
 872 009c AFF30080 		.align	3
 873              	.L28:
 874 00a0 8F537424 		.word	611603343
 875 00a4 97FFFF3F 		.word	1073741719
 876 00a8 00000000 		.word	SIGMA_A_D_Config
 877 00ac 04000000 		.word	SIGMA_A_D_gcor
 878 00b0 0C4E0040 		.word	1073761804
 879              		.cfi_endproc
 880              	.LFE6:
 881              		.size	SIGMA_A_D_SetGCOR, .-SIGMA_A_D_SetGCOR
 882 00b4 AFF30080 		.section	.text.SIGMA_A_D_ReadGCOR,"ax",%progbits
 883              		.align	2
 884              		.global	SIGMA_A_D_ReadGCOR
 885              		.thumb
 886              		.thumb_func
 887              		.type	SIGMA_A_D_ReadGCOR, %function
 888              	SIGMA_A_D_ReadGCOR:
 889              	.LFB7:
 532:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 533:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 534:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /******************************************************************************
 535:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_ReadGCOR
 536:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 26


 537:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 538:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 539:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This API returns the current GCOR register value, normalized based on the
 540:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  GVAL register settings.
 541:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 545:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 546:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 547:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 548:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 549:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  uint16:  Normalized GCOR value.
 550:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 551:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC5/SIGMA_A_D.c **** uint16 SIGMA_A_D_ReadGCOR(void) 
 553:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 890              		.loc 1 553 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895 0000 80B4     		push	{r7}
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
 898 0002 83B0     		sub	sp, sp, #12
 899              		.cfi_def_cfa_offset 16
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 554:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 gValue;
 555:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint16 gcorValue;
 556:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 557:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     gValue = SIGMA_A_D_DEC_GVAL_REG;
 902              		.loc 1 557 0
 903 0006 0B4B     		ldr	r3, .L33
 904 0008 1B78     		ldrb	r3, [r3]
 905 000a 7B71     		strb	r3, [r7, #5]
 558:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     gcorValue = CY_GET_REG16(SIGMA_A_D_DEC_GCOR_16B_PTR);
 906              		.loc 1 558 0
 907 000c 0A4B     		ldr	r3, .L33+4
 908 000e 1B88     		ldrh	r3, [r3]	@ movhi
 909 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 559:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 560:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if (gValue < SIGMA_A_D_MAX_GVAL)
 910              		.loc 1 560 0
 911 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 912 0014 0E2B     		cmp	r3, #14
 913 0016 05D8     		bhi	.L31
 561:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 562:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         gcorValue <<= SIGMA_A_D_MAX_GVAL - gValue;
 914              		.loc 1 562 0
 915 0018 FB88     		ldrh	r3, [r7, #6]
 916 001a 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 917 001c C2F10F02 		rsb	r2, r2, #15
 918 0020 9340     		lsls	r3, r3, r2
 919 0022 FB80     		strh	r3, [r7, #6]	@ movhi
 920              	.L31:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 27


 563:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 564:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 565:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return gcorValue;
 921              		.loc 1 565 0
 922 0024 FB88     		ldrh	r3, [r7, #6]
 566:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 923              		.loc 1 566 0
 924 0026 1846     		mov	r0, r3
 925 0028 0C37     		adds	r7, r7, #12
 926              		.cfi_def_cfa_offset 4
 927 002a BD46     		mov	sp, r7
 928              		.cfi_def_cfa_register 13
 929              		@ sp needed
 930 002c 5DF8047B 		ldr	r7, [sp], #4
 931              		.cfi_restore 7
 932              		.cfi_def_cfa_offset 0
 933 0030 7047     		bx	lr
 934              	.L34:
 935 0032 00BF     		.align	2
 936              	.L33:
 937 0034 0E4E0040 		.word	1073761806
 938 0038 0C4E0040 		.word	1073761804
 939              		.cfi_endproc
 940              	.LFE7:
 941              		.size	SIGMA_A_D_ReadGCOR, .-SIGMA_A_D_ReadGCOR
 942              		.section	.text.SIGMA_A_D_StartConvert,"ax",%progbits
 943              		.align	2
 944              		.global	SIGMA_A_D_StartConvert
 945              		.thumb
 946              		.thumb_func
 947              		.type	SIGMA_A_D_StartConvert, %function
 948              	SIGMA_A_D_StartConvert:
 949              	.LFB8:
 567:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 568:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 569:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_StartConvert
 571:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 572:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 573:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 574:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  one of the other three conversion modes, the ADC will run
 577:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 579:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 580:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 581:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 582:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 583:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 584:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 585:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 586:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_StartConvert(void) 
 587:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 950              		.loc 1 587 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 28


 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 0000 80B4     		push	{r7}
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 588:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Start the conversion */
 589:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_CR_REG |= SIGMA_A_D_DEC_START_CONV;
 960              		.loc 1 589 0
 961 0004 054A     		ldr	r2, .L36
 962 0006 054B     		ldr	r3, .L36
 963 0008 1B78     		ldrb	r3, [r3]
 964 000a DBB2     		uxtb	r3, r3
 965 000c 43F00103 		orr	r3, r3, #1
 966 0010 DBB2     		uxtb	r3, r3
 967 0012 1370     		strb	r3, [r2]
 590:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 968              		.loc 1 590 0
 969 0014 BD46     		mov	sp, r7
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 0016 5DF8047B 		ldr	r7, [sp], #4
 973              		.cfi_restore 7
 974              		.cfi_def_cfa_offset 0
 975 001a 7047     		bx	lr
 976              	.L37:
 977              		.align	2
 978              	.L36:
 979 001c 004E0040 		.word	1073761792
 980              		.cfi_endproc
 981              	.LFE8:
 982              		.size	SIGMA_A_D_StartConvert, .-SIGMA_A_D_StartConvert
 983              		.section	.text.SIGMA_A_D_StopConvert,"ax",%progbits
 984              		.align	2
 985              		.global	SIGMA_A_D_StopConvert
 986              		.thumb
 987              		.thumb_func
 988              		.type	SIGMA_A_D_StopConvert, %function
 989              	SIGMA_A_D_StopConvert:
 990              	.LFB9:
 591:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 592:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 593:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_StopConvert
 595:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 596:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 597:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 598:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversion.
 601:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 602:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 603:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 604:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 605:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 606:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 29


 607:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 608:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_StopConvert(void) 
 610:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 991              		.loc 1 610 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995              		@ link register save eliminated.
 996 0000 80B4     		push	{r7}
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 7, -4
 999 0002 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 611:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Stop all conversions */
 612:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_CR_REG &= (uint8)~SIGMA_A_D_DEC_START_CONV;
 1001              		.loc 1 612 0
 1002 0004 054A     		ldr	r2, .L39
 1003 0006 054B     		ldr	r3, .L39
 1004 0008 1B78     		ldrb	r3, [r3]
 1005 000a DBB2     		uxtb	r3, r3
 1006 000c 23F00103 		bic	r3, r3, #1
 1007 0010 DBB2     		uxtb	r3, r3
 1008 0012 1370     		strb	r3, [r2]
 613:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1009              		.loc 1 613 0
 1010 0014 BD46     		mov	sp, r7
 1011              		.cfi_def_cfa_register 13
 1012              		@ sp needed
 1013 0016 5DF8047B 		ldr	r7, [sp], #4
 1014              		.cfi_restore 7
 1015              		.cfi_def_cfa_offset 0
 1016 001a 7047     		bx	lr
 1017              	.L40:
 1018              		.align	2
 1019              	.L39:
 1020 001c 004E0040 		.word	1073761792
 1021              		.cfi_endproc
 1022              	.LFE9:
 1023              		.size	SIGMA_A_D_StopConvert, .-SIGMA_A_D_StopConvert
 1024              		.section	.text.SIGMA_A_D_IsEndConversion,"ax",%progbits
 1025              		.align	2
 1026              		.global	SIGMA_A_D_IsEndConversion
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	SIGMA_A_D_IsEndConversion, %function
 1030              	SIGMA_A_D_IsEndConversion:
 1031              	.LFB10:
 614:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 615:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 616:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_IsEndConversion
 618:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 619:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 620:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 621:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Checks the status that the most recently started conversion has completed.
 622:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 30


 623:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  ADC_GetResult32() API.
 624:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function provides the programmer with two options. In one mode this 
 625:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  function immediately returns with the conversion status. In the other mode,
 626:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  the function does not return (blocking) until the conversion has completed.
 627:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 628:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 629:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   SIGMA_A_D_RETURN_STATUS -   Immediately returns conversion result
 631:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                                      status.
 632:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   SIGMA_A_D_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                                      is complete.
 634:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 635:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 636:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 639:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 640:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_convDone:  Used to check whether conversion is complete
 641:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  or not for single sample mode with resolution is above 16
 642:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 643:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC5/SIGMA_A_D.c **** uint8 SIGMA_A_D_IsEndConversion(uint8 retMode) 
 645:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1032              		.loc 1 645 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 16
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 0002 85B0     		sub	sp, sp, #20
 1041              		.cfi_def_cfa_offset 24
 1042 0004 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 1044 0006 0346     		mov	r3, r0
 1045 0008 FB71     		strb	r3, [r7, #7]
 1046              	.L45:
 646:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 status;
 647:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 648:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     do
 649:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 650:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         *   resolution above 16 bit
 652:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         */
 653:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_stopConversion != 0u)
 1047              		.loc 1 653 0
 1048 000a 0E4B     		ldr	r3, .L47
 1049 000c 1B78     		ldrb	r3, [r3]
 1050 000e DBB2     		uxtb	r3, r3
 1051 0010 002B     		cmp	r3, #0
 1052 0012 03D0     		beq	.L42
 654:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 655:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             status = SIGMA_A_D_convDone;
 1053              		.loc 1 655 0
 1054 0014 0C4B     		ldr	r3, .L47+4
 1055 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 31


 1056 0018 FB73     		strb	r3, [r7, #15]
 1057 001a 05E0     		b	.L43
 1058              	.L42:
 656:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 657:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         else
 658:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 659:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             status = SIGMA_A_D_DEC_SR_REG & SIGMA_A_D_DEC_CONV_DONE;
 1059              		.loc 1 659 0
 1060 001c 0B4B     		ldr	r3, .L47+8
 1061 001e 1B78     		ldrb	r3, [r3]
 1062 0020 DBB2     		uxtb	r3, r3
 1063 0022 03F00103 		and	r3, r3, #1
 1064 0026 FB73     		strb	r3, [r7, #15]
 1065              	.L43:
 660:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 661:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }while((status != SIGMA_A_D_DEC_CONV_DONE) && (retMode == SIGMA_A_D_WAIT_FOR_RESULT));
 1066              		.loc 1 661 0
 1067 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1068 002a 012B     		cmp	r3, #1
 1069 002c 02D0     		beq	.L44
 1070              		.loc 1 661 0 is_stmt 0 discriminator 1
 1071 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1072 0030 002B     		cmp	r3, #0
 1073 0032 EAD0     		beq	.L45
 1074              	.L44:
 662:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 663:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return(status);
 1075              		.loc 1 663 0 is_stmt 1
 1076 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 664:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1077              		.loc 1 664 0
 1078 0036 1846     		mov	r0, r3
 1079 0038 1437     		adds	r7, r7, #20
 1080              		.cfi_def_cfa_offset 4
 1081 003a BD46     		mov	sp, r7
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 003c 5DF8047B 		ldr	r7, [sp], #4
 1085              		.cfi_restore 7
 1086              		.cfi_def_cfa_offset 0
 1087 0040 7047     		bx	lr
 1088              	.L48:
 1089 0042 00BF     		.align	2
 1090              	.L47:
 1091 0044 00000000 		.word	SIGMA_A_D_stopConversion
 1092 0048 00000000 		.word	SIGMA_A_D_convDone
 1093 004c 014E0040 		.word	1073761793
 1094              		.cfi_endproc
 1095              	.LFE10:
 1096              		.size	SIGMA_A_D_IsEndConversion, .-SIGMA_A_D_IsEndConversion
 1097              		.section	.text.SIGMA_A_D_GetResult8,"ax",%progbits
 1098              		.align	2
 1099              		.global	SIGMA_A_D_GetResult8
 1100              		.thumb
 1101              		.thumb_func
 1102              		.type	SIGMA_A_D_GetResult8, %function
 1103              	SIGMA_A_D_GetResult8:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 32


 1104              	.LFB11:
 665:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 666:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 667:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_GetResult8
 669:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 670:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 671:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 672:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function returns the result of an 8-bit conversion. If the
 673:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  the ADC_GetResult16() function should be used instead. This
 676:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  function returns only signed 8-bit values. The maximum positive
 677:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  maximum positive value is 255.
 679:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 680:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 681:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 682:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 683:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 684:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int8: The LSB of the last ADC conversion.
 685:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 686:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 687:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_convDone:  Cleared in single sample mode with resolution
 688:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                              above 16 bits
 689:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 690:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int8 SIGMA_A_D_GetResult8( void ) 
 692:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1105              		.loc 1 692 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 8
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109              		@ link register save eliminated.
 1110 0000 80B4     		push	{r7}
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 7, -4
 1113 0002 83B0     		sub	sp, sp, #12
 1114              		.cfi_def_cfa_offset 16
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_def_cfa_register 7
 693:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int8 result;
 694:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 coherency;
 695:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 696:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Read active coherency configuration */
 697:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     coherency = SIGMA_A_D_DEC_COHER_REG & SIGMA_A_D_DEC_SAMP_KEY_MASK;
 1117              		.loc 1 697 0
 1118 0006 124B     		ldr	r3, .L54
 1119 0008 1B78     		ldrb	r3, [r3]
 1120 000a DBB2     		uxtb	r3, r3
 1121 000c 03F00303 		and	r3, r3, #3
 1122 0010 FB71     		strb	r3, [r7, #7]
 698:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 699:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     result = (int8)SIGMA_A_D_DEC_SAMP_REG;
 1123              		.loc 1 699 0
 1124 0012 104B     		ldr	r3, .L54+4
 1125 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 33


 1126 0016 DBB2     		uxtb	r3, r3
 1127 0018 BB71     		strb	r3, [r7, #6]
 700:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 701:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(coherency == SIGMA_A_D_DEC_SAMP_KEY_MID)
 1128              		.loc 1 701 0
 1129 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1130 001c 022B     		cmp	r3, #2
 1131 001e 02D1     		bne	.L50
 702:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         (void)SIGMA_A_D_DEC_SAMPM_REG;
 1132              		.loc 1 703 0
 1133 0020 0D4B     		ldr	r3, .L54+8
 1134 0022 1B78     		ldrb	r3, [r3]
 1135 0024 04E0     		b	.L51
 1136              	.L50:
 704:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 705:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else  if(coherency == SIGMA_A_D_DEC_SAMP_KEY_HIGH)
 1137              		.loc 1 705 0
 1138 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1139 0028 032B     		cmp	r3, #3
 1140 002a 01D1     		bne	.L51
 706:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         (void)SIGMA_A_D_DEC_SAMPH_REG;
 1141              		.loc 1 707 0
 1142 002c 0B4B     		ldr	r3, .L54+12
 1143 002e 1B78     		ldrb	r3, [r3]
 1144              	.L51:
 708:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 709:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else /*No action required for other coherency */
 710:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 711:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 712:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(SIGMA_A_D_stopConversion != 0u)
 1145              		.loc 1 713 0
 1146 0030 0B4B     		ldr	r3, .L54+16
 1147 0032 1B78     		ldrb	r3, [r3]
 1148 0034 DBB2     		uxtb	r3, r3
 1149 0036 002B     		cmp	r3, #0
 1150 0038 02D0     		beq	.L52
 714:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 715:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_convDone = 0u;
 1151              		.loc 1 715 0
 1152 003a 0A4B     		ldr	r3, .L54+20
 1153 003c 0022     		movs	r2, #0
 1154 003e 1A70     		strb	r2, [r3]
 1155              	.L52:
 716:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 717:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return (result);
 1156              		.loc 1 717 0
 1157 0040 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1158 0042 5BB2     		sxtb	r3, r3
 718:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1159              		.loc 1 718 0
 1160 0044 1846     		mov	r0, r3
 1161 0046 0C37     		adds	r7, r7, #12
 1162              		.cfi_def_cfa_offset 4
 1163 0048 BD46     		mov	sp, r7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 34


 1164              		.cfi_def_cfa_register 13
 1165              		@ sp needed
 1166 004a 5DF8047B 		ldr	r7, [sp], #4
 1167              		.cfi_restore 7
 1168              		.cfi_def_cfa_offset 0
 1169 004e 7047     		bx	lr
 1170              	.L55:
 1171              		.align	2
 1172              	.L54:
 1173 0050 144E0040 		.word	1073761812
 1174 0054 104E0040 		.word	1073761808
 1175 0058 114E0040 		.word	1073761809
 1176 005c 124E0040 		.word	1073761810
 1177 0060 00000000 		.word	SIGMA_A_D_stopConversion
 1178 0064 00000000 		.word	SIGMA_A_D_convDone
 1179              		.cfi_endproc
 1180              	.LFE11:
 1181              		.size	SIGMA_A_D_GetResult8, .-SIGMA_A_D_GetResult8
 1182              		.section	.text.SIGMA_A_D_GetResult16,"ax",%progbits
 1183              		.align	2
 1184              		.global	SIGMA_A_D_GetResult16
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	SIGMA_A_D_GetResult16, %function
 1188              	SIGMA_A_D_GetResult16:
 1189              	.LFB12:
 719:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 720:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 721:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_GetResult16
 723:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 725:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 726:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  function should be used instead. This function returns only signed
 731:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function supports different coherency settings.
 733:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 734:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 735:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   void
 736:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 737:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 738:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int16:  ADC result.
 739:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 740:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 741:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_convDone:  Cleared in single sample mode with resolution
 742:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                              above 16 bits
 743:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 744:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 745:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int16 SIGMA_A_D_GetResult16(void) 
 746:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1190              		.loc 1 746 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 35


 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194              		@ link register save eliminated.
 1195 0000 80B4     		push	{r7}
 1196              		.cfi_def_cfa_offset 4
 1197              		.cfi_offset 7, -4
 1198 0002 83B0     		sub	sp, sp, #12
 1199              		.cfi_def_cfa_offset 16
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 747:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint16 result;
 748:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 coherency;
 749:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 750:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Read active coherency configuration */
 751:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     coherency = SIGMA_A_D_DEC_COHER_REG & SIGMA_A_D_DEC_SAMP_KEY_MASK;
 1202              		.loc 1 751 0
 1203 0006 174B     		ldr	r3, .L61
 1204 0008 1B78     		ldrb	r3, [r3]
 1205 000a DBB2     		uxtb	r3, r3
 1206 000c 03F00303 		and	r3, r3, #3
 1207 0010 7B71     		strb	r3, [r7, #5]
 752:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 753:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(coherency <= SIGMA_A_D_DEC_SAMP_KEY_LOW)
 1208              		.loc 1 753 0
 1209 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1210 0014 012B     		cmp	r3, #1
 1211 0016 03D8     		bhi	.L57
 754:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if (CY_PSOC3)
 756:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = SIGMA_A_D_DEC_SAMPM_REG;
 757:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 8u) | SIGMA_A_D_DEC_SAMP_REG;
 758:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #else
 759:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR));
 1212              		.loc 1 759 0
 1213 0018 134B     		ldr	r3, .L61+4
 1214 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1215 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1216 001e 11E0     		b	.L58
 1217              	.L57:
 760:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* CY_PSOC3 */
 761:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 762:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else /* MID or HIGH */
 763:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /* Read middle byte at the end */
 764:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if (CY_PSOC3)
 765:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR));
 766:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #else
 767:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = SIGMA_A_D_DEC_SAMP_REG;
 1218              		.loc 1 767 0
 1219 0020 114B     		ldr	r3, .L61+4
 1220 0022 1B78     		ldrb	r3, [r3]
 1221 0024 DBB2     		uxtb	r3, r3
 1222 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 768:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result |=  (uint16)((uint16)SIGMA_A_D_DEC_SAMPM_REG << 8u);
 1223              		.loc 1 768 0
 1224 0028 104B     		ldr	r3, .L61+8
 1225 002a 1B78     		ldrb	r3, [r3]
 1226 002c DBB2     		uxtb	r3, r3
 1227 002e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 36


 1228 0030 1B02     		lsls	r3, r3, #8
 1229 0032 9AB2     		uxth	r2, r3
 1230 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1231 0036 1343     		orrs	r3, r3, r2
 1232 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 769:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* CY_PSOC3 */
 770:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(coherency == SIGMA_A_D_DEC_SAMP_KEY_HIGH)
 1233              		.loc 1 770 0
 1234 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1235 003c 032B     		cmp	r3, #3
 1236 003e 01D1     		bne	.L58
 771:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             (void)SIGMA_A_D_DEC_SAMPH_REG;
 1237              		.loc 1 772 0
 1238 0040 0B4B     		ldr	r3, .L61+12
 1239 0042 1B78     		ldrb	r3, [r3]
 1240              	.L58:
 773:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 774:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 775:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(SIGMA_A_D_stopConversion != 0u)
 1241              		.loc 1 776 0
 1242 0044 0B4B     		ldr	r3, .L61+16
 1243 0046 1B78     		ldrb	r3, [r3]
 1244 0048 DBB2     		uxtb	r3, r3
 1245 004a 002B     		cmp	r3, #0
 1246 004c 02D0     		beq	.L59
 777:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 778:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_convDone = 0u;
 1247              		.loc 1 778 0
 1248 004e 0A4B     		ldr	r3, .L61+20
 1249 0050 0022     		movs	r2, #0
 1250 0052 1A70     		strb	r2, [r3]
 1251              	.L59:
 779:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 780:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 781:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return ((int16)result);
 1252              		.loc 1 781 0
 1253 0054 FB88     		ldrh	r3, [r7, #6]
 1254 0056 1BB2     		sxth	r3, r3
 782:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1255              		.loc 1 782 0
 1256 0058 1846     		mov	r0, r3
 1257 005a 0C37     		adds	r7, r7, #12
 1258              		.cfi_def_cfa_offset 4
 1259 005c BD46     		mov	sp, r7
 1260              		.cfi_def_cfa_register 13
 1261              		@ sp needed
 1262 005e 5DF8047B 		ldr	r7, [sp], #4
 1263              		.cfi_restore 7
 1264              		.cfi_def_cfa_offset 0
 1265 0062 7047     		bx	lr
 1266              	.L62:
 1267              		.align	2
 1268              	.L61:
 1269 0064 144E0040 		.word	1073761812
 1270 0068 104E0040 		.word	1073761808
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 37


 1271 006c 114E0040 		.word	1073761809
 1272 0070 124E0040 		.word	1073761810
 1273 0074 00000000 		.word	SIGMA_A_D_stopConversion
 1274 0078 00000000 		.word	SIGMA_A_D_convDone
 1275              		.cfi_endproc
 1276              	.LFE12:
 1277              		.size	SIGMA_A_D_GetResult16, .-SIGMA_A_D_GetResult16
 1278              		.section	.text.SIGMA_A_D_GetResult32,"ax",%progbits
 1279              		.align	2
 1280              		.global	SIGMA_A_D_GetResult32
 1281              		.thumb
 1282              		.thumb_func
 1283              		.type	SIGMA_A_D_GetResult32, %function
 1284              	SIGMA_A_D_GetResult32:
 1285              	.LFB13:
 783:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 784:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 785:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 786:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_GetResult32
 787:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 788:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 789:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 790:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  resolution of 8 to 20 bits.
 792:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function supports different coherency settings.
 793:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 794:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 795:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 796:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 797:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 798:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32: Result of the last ADC conversion.
 799:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 800:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 801:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_convDone:  Cleared in single sample mode with resolution
 802:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                              above 16 bits
 803:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 804:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 805:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int32 SIGMA_A_D_GetResult32(void) 
 806:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1286              		.loc 1 806 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291 0000 80B4     		push	{r7}
 1292              		.cfi_def_cfa_offset 4
 1293              		.cfi_offset 7, -4
 1294 0002 83B0     		sub	sp, sp, #12
 1295              		.cfi_def_cfa_offset 16
 1296 0004 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
 807:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint32 result;
 808:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 coherency;
 809:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if (CY_PSOC3)
 810:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 	    uint16 tmp;
 811:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* CY_PSOC3 */
 812:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 38


 813:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Read active coherency configuration */
 814:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     coherency = SIGMA_A_D_DEC_COHER_REG & SIGMA_A_D_DEC_SAMP_KEY_MASK;
 1298              		.loc 1 814 0
 1299 0006 224B     		ldr	r3, .L69
 1300 0008 1B78     		ldrb	r3, [r3]
 1301 000a DBB2     		uxtb	r3, r3
 1302 000c 03F00303 		and	r3, r3, #3
 1303 0010 FB70     		strb	r3, [r7, #3]
 815:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 816:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(coherency <= SIGMA_A_D_DEC_SAMP_KEY_LOW)
 1304              		.loc 1 816 0
 1305 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1306 0014 012B     		cmp	r3, #1
 1307 0016 0BD8     		bhi	.L64
 817:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if (CY_PSOC3)
 819:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = SIGMA_A_D_DEC_SAMPH_REG;
 820:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             if((result & 0x80u) != 0u)
 821:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             {   /* Sign extend */
 822:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 result |= 0xFF00u;
 823:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             }
 824:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 8u) | SIGMA_A_D_DEC_SAMPM_REG;
 825:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 8u) | SIGMA_A_D_DEC_SAMP_REG;
 826:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #else
 827:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = CY_GET_REG16(SIGMA_A_D_DEC_SAMPH_16B_PTR);
 1308              		.loc 1 827 0
 1309 0018 1E4B     		ldr	r3, .L69+4
 1310 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1311 001c 9BB2     		uxth	r3, r3
 1312 001e 7B60     		str	r3, [r7, #4]
 828:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 16u) | (CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR));
 1313              		.loc 1 828 0
 1314 0020 7B68     		ldr	r3, [r7, #4]
 1315 0022 1B04     		lsls	r3, r3, #16
 1316 0024 1C4A     		ldr	r2, .L69+8
 1317 0026 1288     		ldrh	r2, [r2]	@ movhi
 1318 0028 92B2     		uxth	r2, r2
 1319 002a 1343     		orrs	r3, r3, r2
 1320 002c 7B60     		str	r3, [r7, #4]
 1321 002e 20E0     		b	.L65
 1322              	.L64:
 829:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* CY_PSOC3 */
 830:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 831:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else if(coherency == SIGMA_A_D_DEC_SAMP_KEY_MID)
 1323              		.loc 1 831 0
 1324 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1325 0032 022B     		cmp	r3, #2
 1326 0034 12D1     		bne	.L66
 832:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {   /* Read middle byte at the end */
 833:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if (CY_PSOC3)
 834:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = SIGMA_A_D_DEC_SAMPH_REG;
 835:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             if((result & 0x80u) != 0u)
 836:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             {   /* Sign extend */
 837:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 result |= 0xFF00u;
 838:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             }
 839:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 16u) | (CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR));
 840:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #else
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 39


 841:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = CY_GET_REG16(SIGMA_A_D_DEC_SAMPH_16B_PTR);
 1327              		.loc 1 841 0
 1328 0036 174B     		ldr	r3, .L69+4
 1329 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1330 003a 9BB2     		uxth	r3, r3
 1331 003c 7B60     		str	r3, [r7, #4]
 842:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = (result << 16u) | SIGMA_A_D_DEC_SAMP_REG;
 1332              		.loc 1 842 0
 1333 003e 7B68     		ldr	r3, [r7, #4]
 1334 0040 1B04     		lsls	r3, r3, #16
 1335 0042 154A     		ldr	r2, .L69+8
 1336 0044 1278     		ldrb	r2, [r2]
 1337 0046 D2B2     		uxtb	r2, r2
 1338 0048 1343     		orrs	r3, r3, r2
 1339 004a 7B60     		str	r3, [r7, #4]
 843:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result |=  (uint32)((uint32)SIGMA_A_D_DEC_SAMPM_REG << 8u);
 1340              		.loc 1 843 0
 1341 004c 134B     		ldr	r3, .L69+12
 1342 004e 1B78     		ldrb	r3, [r3]
 1343 0050 DBB2     		uxtb	r3, r3
 1344 0052 1B02     		lsls	r3, r3, #8
 1345 0054 7A68     		ldr	r2, [r7, #4]
 1346 0056 1343     		orrs	r3, r3, r2
 1347 0058 7B60     		str	r3, [r7, #4]
 1348 005a 0AE0     		b	.L65
 1349              	.L66:
 844:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* CY_PSOC3 */
 845:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 846:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else /*SIGMA_A_D_DEC_SAMP_KEY_HIGH */
 847:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 848:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Read MSB byte at the end */
 849:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if (CY_PSOC3)
 850:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR);
 851:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 			tmp = SIGMA_A_D_DEC_SAMPH_REG;
 852:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             if((tmp & 0x80u) != 0u)
 853:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             {   /* Sign extend */
 854:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 tmp |= 0xFF00u;
 855:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             }
 856:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result |= (uint32)tmp << 16u;
 857:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #else
 858:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result = CY_GET_REG16(SIGMA_A_D_DEC_SAMP_16B_PTR);
 1350              		.loc 1 858 0
 1351 005c 0E4B     		ldr	r3, .L69+8
 1352 005e 1B88     		ldrh	r3, [r3]	@ movhi
 1353 0060 9BB2     		uxth	r3, r3
 1354 0062 7B60     		str	r3, [r7, #4]
 859:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             result |= (uint32)((uint32)CY_GET_REG16(SIGMA_A_D_DEC_SAMPH_16B_PTR) << 16u);
 1355              		.loc 1 859 0
 1356 0064 0B4B     		ldr	r3, .L69+4
 1357 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1358 0068 9BB2     		uxth	r3, r3
 1359 006a 1B04     		lsls	r3, r3, #16
 1360 006c 7A68     		ldr	r2, [r7, #4]
 1361 006e 1343     		orrs	r3, r3, r2
 1362 0070 7B60     		str	r3, [r7, #4]
 1363              	.L65:
 860:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* CY_PSOC3 */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 40


 861:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 862:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if(SIGMA_A_D_stopConversion != 0u)
 1364              		.loc 1 863 0
 1365 0072 0B4B     		ldr	r3, .L69+16
 1366 0074 1B78     		ldrb	r3, [r3]
 1367 0076 DBB2     		uxtb	r3, r3
 1368 0078 002B     		cmp	r3, #0
 1369 007a 02D0     		beq	.L67
 864:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
 865:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_convDone = 0u;
 1370              		.loc 1 865 0
 1371 007c 094B     		ldr	r3, .L69+20
 1372 007e 0022     		movs	r2, #0
 1373 0080 1A70     		strb	r2, [r3]
 1374              	.L67:
 866:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
 867:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 868:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return ((int32)result);
 1375              		.loc 1 868 0
 1376 0082 7B68     		ldr	r3, [r7, #4]
 869:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1377              		.loc 1 869 0
 1378 0084 1846     		mov	r0, r3
 1379 0086 0C37     		adds	r7, r7, #12
 1380              		.cfi_def_cfa_offset 4
 1381 0088 BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 008a 5DF8047B 		ldr	r7, [sp], #4
 1385              		.cfi_restore 7
 1386              		.cfi_def_cfa_offset 0
 1387 008e 7047     		bx	lr
 1388              	.L70:
 1389              		.align	2
 1390              	.L69:
 1391 0090 144E0040 		.word	1073761812
 1392 0094 124E0040 		.word	1073761810
 1393 0098 104E0040 		.word	1073761808
 1394 009c 114E0040 		.word	1073761809
 1395 00a0 00000000 		.word	SIGMA_A_D_stopConversion
 1396 00a4 00000000 		.word	SIGMA_A_D_convDone
 1397              		.cfi_endproc
 1398              	.LFE13:
 1399              		.size	SIGMA_A_D_GetResult32, .-SIGMA_A_D_GetResult32
 1400              		.section	.text.SIGMA_A_D_SetOffset,"ax",%progbits
 1401              		.align	2
 1402              		.global	SIGMA_A_D_SetOffset
 1403              		.thumb
 1404              		.thumb_func
 1405              		.type	SIGMA_A_D_SetOffset, %function
 1406              	SIGMA_A_D_SetOffset:
 1407              	.LFB14:
 870:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 871:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 872:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 873:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetOffset
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 41


 874:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 875:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 876:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 877:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  given reading before calculating the voltage conversion.
 880:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 881:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 882:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *          connected to the same input voltage.
 884:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 885:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 886:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 887:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 888:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 889:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_Offset:  Modified to set the user provided offset. This
 890:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  variable is used for offset calibration purpose.
 891:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 892:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Side Effects:
 893:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Affects the SIGMA_A_D_CountsTo_Volts,
 894:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsTo_mVolts, SIGMA_A_D_CountsTo_uVolts functions
 895:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  by subtracting the given offset.
 896:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 897:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 898:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_SetOffset(int32 offset) 
 899:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1408              		.loc 1 899 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 8
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413 0000 80B4     		push	{r7}
 1414              		.cfi_def_cfa_offset 4
 1415              		.cfi_offset 7, -4
 1416 0002 83B0     		sub	sp, sp, #12
 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 900:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 901:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_Offset = offset;
 1421              		.loc 1 901 0
 1422 0008 034A     		ldr	r2, .L72
 1423 000a 7B68     		ldr	r3, [r7, #4]
 1424 000c 1360     		str	r3, [r2]
 902:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1425              		.loc 1 902 0
 1426 000e 0C37     		adds	r7, r7, #12
 1427              		.cfi_def_cfa_offset 4
 1428 0010 BD46     		mov	sp, r7
 1429              		.cfi_def_cfa_register 13
 1430              		@ sp needed
 1431 0012 5DF8047B 		ldr	r7, [sp], #4
 1432              		.cfi_restore 7
 1433              		.cfi_def_cfa_offset 0
 1434 0016 7047     		bx	lr
 1435              	.L73:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 42


 1436              		.align	2
 1437              	.L72:
 1438 0018 00000000 		.word	SIGMA_A_D_Offset
 1439              		.cfi_endproc
 1440              	.LFE14:
 1441              		.size	SIGMA_A_D_SetOffset, .-SIGMA_A_D_SetOffset
 1442              		.section	.text.SIGMA_A_D_SetGain,"ax",%progbits
 1443              		.align	2
 1444              		.global	SIGMA_A_D_SetGain
 1445              		.thumb
 1446              		.thumb_func
 1447              		.type	SIGMA_A_D_SetGain, %function
 1448              	SIGMA_A_D_SetGain:
 1449              	.LFB15:
 903:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 904:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 905:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 906:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetGain
 907:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 908:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 909:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 910:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  functions below. This value is set by default by the reference and
 912:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  input range settings. It should only be used to further calibrate the
 913:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  ADC with a known input or if an external reference is used. This
 914:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  function may also be used to calibrate an entire signal chain, not
 915:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  just the ADC.
 916:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 917:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 918:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32: ADC gain in counts per volt.
 919:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 920:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 921:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
 922:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 923:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 924:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsPerVolt:  modified to set the ADC gain in counts
 925:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   per volt.
 926:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 927:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Side Effects:
 928:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Affects the SIGMA_A_D_CountsTo_Volts,
 929:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsTo_mVolts, SIGMA_A_D_CountsTo_uVolts functions
 930:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 932:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 933:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_SetGain(int32 adcGain) 
 934:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1450              		.loc 1 934 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 8
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 1455 0000 80B4     		push	{r7}
 1456              		.cfi_def_cfa_offset 4
 1457              		.cfi_offset 7, -4
 1458 0002 83B0     		sub	sp, sp, #12
 1459              		.cfi_def_cfa_offset 16
 1460 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 43


 1461              		.cfi_def_cfa_register 7
 1462 0006 7860     		str	r0, [r7, #4]
 935:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_CountsPerVolt = adcGain;
 1463              		.loc 1 935 0
 1464 0008 034A     		ldr	r2, .L75
 1465 000a 7B68     		ldr	r3, [r7, #4]
 1466 000c 1360     		str	r3, [r2]
 936:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1467              		.loc 1 936 0
 1468 000e 0C37     		adds	r7, r7, #12
 1469              		.cfi_def_cfa_offset 4
 1470 0010 BD46     		mov	sp, r7
 1471              		.cfi_def_cfa_register 13
 1472              		@ sp needed
 1473 0012 5DF8047B 		ldr	r7, [sp], #4
 1474              		.cfi_restore 7
 1475              		.cfi_def_cfa_offset 0
 1476 0016 7047     		bx	lr
 1477              	.L76:
 1478              		.align	2
 1479              	.L75:
 1480 0018 00000000 		.word	SIGMA_A_D_CountsPerVolt
 1481              		.cfi_endproc
 1482              	.LFE15:
 1483              		.size	SIGMA_A_D_SetGain, .-SIGMA_A_D_SetGain
 1484              		.section	.text.SIGMA_A_D_CountsTo_mVolts,"ax",%progbits
 1485              		.align	2
 1486              		.global	SIGMA_A_D_CountsTo_mVolts
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	SIGMA_A_D_CountsTo_mVolts, %function
 1490              	SIGMA_A_D_CountsTo_mVolts:
 1491              	.LFB16:
 937:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 938:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 939:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_CountsTo_mVolts
 941:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
 942:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 943:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
 944:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 945:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  be 534 mVolts.
 947:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 948:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
 949:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32: adcCounts Result from the ADC conversion.
 950:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 951:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
 952:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int16:  Result in mVolts
 953:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 954:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
 955:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_Offset:  Used as the offset while converting ADC counts
 957:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   to mVolts.
 958:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
 959:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
 960:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int16 SIGMA_A_D_CountsTo_mVolts(int32 adcCounts) 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 44


 961:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1492              		.loc 1 961 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 16
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496              		@ link register save eliminated.
 1497 0000 80B4     		push	{r7}
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 7, -4
 1500 0002 85B0     		sub	sp, sp, #20
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]
 962:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 963:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int16 mVolts;
 964:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 965:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Convert adcCounts to the right align if left option selected */
 966:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_CFG1_DEC_DIV != 0)
 967:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG1)
 968:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 969:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG1_DEC_DIV;
 970:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 971:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG1_DEC_DIV */
 972:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG2_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1))
 973:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG2)
 974:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 975:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG2_DEC_DIV;
 976:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 977:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
 978:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG3_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2))
 979:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG3)
 980:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 981:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG3_DEC_DIV;
 982:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 983:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
 984:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG4_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3))
 985:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG4)
 986:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 987:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG4_DEC_DIV;
 988:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
 989:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
 990:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 991:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Subtract ADC offset */
 992:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     adcCounts -= SIGMA_A_D_Offset;
 1505              		.loc 1 992 0
 1506 0008 0B4B     		ldr	r3, .L79
 1507 000a 1B68     		ldr	r3, [r3]
 1508 000c 7A68     		ldr	r2, [r7, #4]
 1509 000e D31A     		subs	r3, r2, r3
 1510 0010 7B60     		str	r3, [r7, #4]
 993:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 994:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     mVolts = (int16)(( adcCounts * SIGMA_A_D_1MV_COUNTS ) / SIGMA_A_D_CountsPerVolt) ;
 1511              		.loc 1 994 0
 1512 0012 7B68     		ldr	r3, [r7, #4]
 1513 0014 4FF47A72 		mov	r2, #1000
 1514 0018 02FB03F2 		mul	r2, r2, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 45


 1515 001c 074B     		ldr	r3, .L79+4
 1516 001e 1B68     		ldr	r3, [r3]
 1517 0020 92FBF3F3 		sdiv	r3, r2, r3
 1518 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 995:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 996:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return(mVolts);
 1519              		.loc 1 996 0
 1520 0026 FB89     		ldrh	r3, [r7, #14]
 1521 0028 1BB2     		sxth	r3, r3
 997:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1522              		.loc 1 997 0
 1523 002a 1846     		mov	r0, r3
 1524 002c 1437     		adds	r7, r7, #20
 1525              		.cfi_def_cfa_offset 4
 1526 002e BD46     		mov	sp, r7
 1527              		.cfi_def_cfa_register 13
 1528              		@ sp needed
 1529 0030 5DF8047B 		ldr	r7, [sp], #4
 1530              		.cfi_restore 7
 1531              		.cfi_def_cfa_offset 0
 1532 0034 7047     		bx	lr
 1533              	.L80:
 1534 0036 00BF     		.align	2
 1535              	.L79:
 1536 0038 00000000 		.word	SIGMA_A_D_Offset
 1537 003c 00000000 		.word	SIGMA_A_D_CountsPerVolt
 1538              		.cfi_endproc
 1539              	.LFE16:
 1540              		.size	SIGMA_A_D_CountsTo_mVolts, .-SIGMA_A_D_CountsTo_mVolts
 1541              		.global	__aeabi_i2f
 1542              		.section	.text.SIGMA_A_D_CountsTo_Volts,"ax",%progbits
 1543              		.align	2
 1544              		.global	SIGMA_A_D_CountsTo_Volts
 1545              		.thumb
 1546              		.thumb_func
 1547              		.type	SIGMA_A_D_CountsTo_Volts, %function
 1548              	SIGMA_A_D_CountsTo_Volts:
 1549              	.LFB17:
 998:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
 999:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1000:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1001:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_CountsTo_Volts
1002:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1003:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1004:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1005:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  returned result would be +1.2345 Volts.
1008:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1009:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1010:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1012:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1013:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  float32: Result in Volts
1014:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1015:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
1016:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsPerVolt:  used to convert to Volts.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 46


1017:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_Offset:  Used as the offset while converting ADC counts
1018:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   to Volts.
1019:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1020:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1021:.\Generated_Source\PSoC5/SIGMA_A_D.c **** float32 SIGMA_A_D_CountsTo_Volts(int32 adcCounts) 
1022:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1550              		.loc 1 1022 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 16
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554 0000 90B5     		push	{r4, r7, lr}
 1555              		.cfi_def_cfa_offset 12
 1556              		.cfi_offset 4, -12
 1557              		.cfi_offset 7, -8
 1558              		.cfi_offset 14, -4
 1559 0002 85B0     		sub	sp, sp, #20
 1560              		.cfi_def_cfa_offset 32
 1561 0004 00AF     		add	r7, sp, #0
 1562              		.cfi_def_cfa_register 7
 1563 0006 7860     		str	r0, [r7, #4]
1023:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1024:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     float32 Volts;
1025:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1026:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Convert adcCounts to the right align if left option selected */
1027:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_CFG1_DEC_DIV != 0)
1028:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG1)
1029:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1030:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG1_DEC_DIV;
1031:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1032:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG1_DEC_DIV */
1033:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG2_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1))
1034:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG2)
1035:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1036:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG2_DEC_DIV;
1037:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1038:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
1039:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG3_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2))
1040:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG3)
1041:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1042:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG3_DEC_DIV;
1043:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1044:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
1045:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if((SIGMA_A_D_CFG4_DEC_DIV != 0) && (SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3))
1046:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_Config == SIGMA_A_D_CFG4)
1047:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1048:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG4_DEC_DIV;
1049:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1050:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_CFG2_DEC_DIV */
1051:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1052:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Subtract ADC offset */
1053:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     adcCounts -= SIGMA_A_D_Offset;
 1564              		.loc 1 1053 0
 1565 0008 0C4B     		ldr	r3, .L83
 1566 000a 1B68     		ldr	r3, [r3]
 1567 000c 7A68     		ldr	r2, [r7, #4]
 1568 000e D31A     		subs	r3, r2, r3
 1569 0010 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 47


1054:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1055:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     Volts = (float32)adcCounts / (float32)SIGMA_A_D_CountsPerVolt;
 1570              		.loc 1 1055 0
 1571 0012 7868     		ldr	r0, [r7, #4]
 1572 0014 FFF7FEFF 		bl	__aeabi_i2f
 1573 0018 0446     		mov	r4, r0
 1574 001a 094B     		ldr	r3, .L83+4
 1575 001c 1B68     		ldr	r3, [r3]
 1576 001e 1846     		mov	r0, r3
 1577 0020 FFF7FEFF 		bl	__aeabi_i2f
 1578 0024 0346     		mov	r3, r0
 1579 0026 2046     		mov	r0, r4
 1580 0028 1946     		mov	r1, r3
 1581 002a FFF7FEFF 		bl	__aeabi_fdiv
 1582 002e 0346     		mov	r3, r0
 1583 0030 FB60     		str	r3, [r7, #12]	@ float
1056:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1057:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return( Volts );
 1584              		.loc 1 1057 0
 1585 0032 FB68     		ldr	r3, [r7, #12]	@ float
1058:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1586              		.loc 1 1058 0
 1587 0034 1846     		mov	r0, r3
 1588 0036 1437     		adds	r7, r7, #20
 1589              		.cfi_def_cfa_offset 12
 1590 0038 BD46     		mov	sp, r7
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 003a 90BD     		pop	{r4, r7, pc}
 1594              	.L84:
 1595              		.align	2
 1596              	.L83:
 1597 003c 00000000 		.word	SIGMA_A_D_Offset
 1598 0040 00000000 		.word	SIGMA_A_D_CountsPerVolt
 1599              		.cfi_endproc
 1600              	.LFE17:
 1601              		.size	SIGMA_A_D_CountsTo_Volts, .-SIGMA_A_D_CountsTo_Volts
 1602              		.section	.text.SIGMA_A_D_CountsTo_uVolts,"ax",%progbits
 1603              		.align	2
 1604              		.global	SIGMA_A_D_CountsTo_uVolts
 1605              		.thumb
 1606              		.thumb_func
 1607              		.type	SIGMA_A_D_CountsTo_uVolts, %function
 1608              	SIGMA_A_D_CountsTo_uVolts:
 1609              	.LFB18:
1059:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1060:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1061:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_CountsTo_uVolts
1063:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1064:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1065:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1066:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1069:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1070:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32 adcCounts: Result from the ADC conversion.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 48


1071:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1072:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1073:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32:  Result in uVolts
1074:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1075:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
1076:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_Offset:  Used as the offset while converting ADC counts
1078:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   to mVolts.
1079:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1080:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Theory:
1081:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1084:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  uVolts = ((A * adcCounts) / ((int32)SIGMA_A_D_CountsPerVolt / B));
1085:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1086:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1087:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int32 SIGMA_A_D_CountsTo_uVolts(int32 adcCounts) 
1088:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1610              		.loc 1 1088 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 24
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614              		@ link register save eliminated.
 1615 0000 80B4     		push	{r7}
 1616              		.cfi_def_cfa_offset 4
 1617              		.cfi_offset 7, -4
 1618 0002 87B0     		sub	sp, sp, #28
 1619              		.cfi_def_cfa_offset 32
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 7860     		str	r0, [r7, #4]
1089:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1090:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int32 uVolts;
1091:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int32 coefA;
1092:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int32 coefB;
1093:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 resolution;
1094:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1095:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Set the resolution based on the configuration */
1096:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Convert adcCounts to the right align if left option selected */
1097:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if (SIGMA_A_D_Config == SIGMA_A_D_CFG1)
 1623              		.loc 1 1097 0
 1624 0008 274B     		ldr	r3, .L96
 1625 000a 1B78     		ldrb	r3, [r3]
 1626 000c DBB2     		uxtb	r3, r3
 1627 000e 012B     		cmp	r3, #1
 1628 0010 02D1     		bne	.L86
1098:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1099:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         resolution = SIGMA_A_D_CFG1_RESOLUTION;
 1629              		.loc 1 1099 0
 1630 0012 1323     		movs	r3, #19
 1631 0014 FB73     		strb	r3, [r7, #15]
 1632 0016 11E0     		b	.L87
 1633              	.L86:
1100:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_CFG1_DEC_DIV != 0)
1101:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG1_DEC_DIV;
1102:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_CFG1_DEC_DIV */
1103:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 49


1104:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else if (SIGMA_A_D_Config == SIGMA_A_D_CFG2)
 1634              		.loc 1 1104 0
 1635 0018 234B     		ldr	r3, .L96
 1636 001a 1B78     		ldrb	r3, [r3]
 1637 001c DBB2     		uxtb	r3, r3
 1638 001e 022B     		cmp	r3, #2
 1639 0020 02D1     		bne	.L88
1105:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1106:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         resolution = SIGMA_A_D_CFG2_RESOLUTION;
 1640              		.loc 1 1106 0
 1641 0022 1023     		movs	r3, #16
 1642 0024 FB73     		strb	r3, [r7, #15]
 1643 0026 09E0     		b	.L87
 1644              	.L88:
1107:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_CFG2_DEC_DIV != 0)
1108:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG2_DEC_DIV;
1109:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_CFG2_DEC_DIV */
1110:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1111:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else if (SIGMA_A_D_Config == SIGMA_A_D_CFG3)
 1645              		.loc 1 1111 0
 1646 0028 1F4B     		ldr	r3, .L96
 1647 002a 1B78     		ldrb	r3, [r3]
 1648 002c DBB2     		uxtb	r3, r3
 1649 002e 032B     		cmp	r3, #3
 1650 0030 02D1     		bne	.L89
1112:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1113:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         resolution = SIGMA_A_D_CFG3_RESOLUTION;
 1651              		.loc 1 1113 0
 1652 0032 1023     		movs	r3, #16
 1653 0034 FB73     		strb	r3, [r7, #15]
 1654 0036 01E0     		b	.L87
 1655              	.L89:
1114:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_CFG3_DEC_DIV != 0)
1115:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG3_DEC_DIV;
1116:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_CFG3_DEC_DIV */
1117:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1118:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else
1119:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1120:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         resolution = SIGMA_A_D_CFG4_RESOLUTION;
 1656              		.loc 1 1120 0
 1657 0038 1023     		movs	r3, #16
 1658 003a FB73     		strb	r3, [r7, #15]
 1659              	.L87:
1121:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_CFG4_DEC_DIV != 0)
1122:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             adcCounts /= SIGMA_A_D_CFG4_DEC_DIV;
1123:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_CFG4_DEC_DIV */
1124:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1125:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1126:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     switch (resolution)
 1660              		.loc 1 1126 0
 1661 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1662 003e 102B     		cmp	r3, #16
 1663 0040 02D0     		beq	.L91
 1664 0042 132B     		cmp	r3, #19
 1665 0044 06D0     		beq	.L92
 1666 0046 0BE0     		b	.L95
 1667              	.L91:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 50


1127:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1128:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_12) || \
1129:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_12) || \
1130:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_12) || \
1131:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_12) )
1132:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_12:
1133:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_2;
1134:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_2;
1135:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1136:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_12 */    
1137:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_13) || \
1138:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_13) || \
1139:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_13) || \
1140:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_13) )
1141:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_13:
1142:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_4;
1143:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_4;
1144:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1145:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_13 */    
1146:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_14) || \
1147:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_14) || \
1148:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_14) || \
1149:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_14) )
1150:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_14:
1151:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_8;
1152:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_8;
1153:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1154:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_14 */    
1155:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_15) || \
1156:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_15) || \
1157:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_15) || \
1158:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_15) )
1159:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_15:
1160:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_16;
1161:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_16;
1162:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1163:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_15 */    
1164:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_16) || \
1165:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_16) || \
1166:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_16) || \
1167:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_16) )
1168:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_16:
1169:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_32;
 1668              		.loc 1 1169 0
 1669 0048 47F61223 		movw	r3, #31250
 1670 004c 7B61     		str	r3, [r7, #20]
1170:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_32;
 1671              		.loc 1 1170 0
 1672 004e 2023     		movs	r3, #32
 1673 0050 3B61     		str	r3, [r7, #16]
1171:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 1674              		.loc 1 1171 0
 1675 0052 0AE0     		b	.L93
 1676              	.L92:
1172:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_16 */    
1173:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_17) || \
1174:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_17) || \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 51


1175:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_17) || \
1176:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_17) )
1177:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_17:
1178:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_64;
1179:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_64;
1180:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1181:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_17 */    
1182:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_18) || \
1183:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_18) || \
1184:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_18) || \
1185:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_18) )
1186:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_18:
1187:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_125;
1188:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_125;
1189:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1190:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_18 */    
1191:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_19) || \
1192:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_19) || \
1193:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_19) || \
1194:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_19) )
1195:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_19:
1196:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_250;
 1677              		.loc 1 1196 0
 1678 0054 4FF47A63 		mov	r3, #4000
 1679 0058 7B61     		str	r3, [r7, #20]
1197:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_250;
 1680              		.loc 1 1197 0
 1681 005a FA23     		movs	r3, #250
 1682 005c 3B61     		str	r3, [r7, #16]
1198:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 1683              		.loc 1 1198 0
 1684 005e 04E0     		b	.L93
 1685              	.L95:
1199:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_19 */    
1200:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if( (SIGMA_A_D_CFG1_RESOLUTION == SIGMA_A_D__BITS_20) || \
1201:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG2_RESOLUTION == SIGMA_A_D__BITS_20) || \
1202:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG3_RESOLUTION == SIGMA_A_D__BITS_20) || \
1203:.\Generated_Source\PSoC5/SIGMA_A_D.c ****              (SIGMA_A_D_CFG4_RESOLUTION == SIGMA_A_D__BITS_20) )
1204:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case (uint8)SIGMA_A_D__BITS_20:
1205:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefA = SIGMA_A_D_1UV_COUNTS / SIGMA_A_D_DIVISOR_500;
1206:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 coefB = SIGMA_A_D_DIVISOR_500;
1207:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
1208:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D__BITS_20 */    
1209:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         default:    /* resolution < 12 */
1210:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             coefA = SIGMA_A_D_1UV_COUNTS;
 1686              		.loc 1 1211 0
 1687 0060 124B     		ldr	r3, .L96+4
 1688 0062 7B61     		str	r3, [r7, #20]
1212:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             coefB = SIGMA_A_D_DIVISOR_1;
 1689              		.loc 1 1212 0
 1690 0064 0123     		movs	r3, #1
 1691 0066 3B61     		str	r3, [r7, #16]
1213:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             break;
 1692              		.loc 1 1213 0
 1693 0068 00BF     		nop
 1694              	.L93:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 52


1214:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1215:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     coefB = SIGMA_A_D_CountsPerVolt / coefB;
 1695              		.loc 1 1215 0
 1696 006a 114B     		ldr	r3, .L96+8
 1697 006c 1A68     		ldr	r2, [r3]
 1698 006e 3B69     		ldr	r3, [r7, #16]
 1699 0070 92FBF3F3 		sdiv	r3, r2, r3
 1700 0074 3B61     		str	r3, [r7, #16]
1216:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * SIGMA_A_D_Offset) / coefB);
 1701              		.loc 1 1216 0
 1702 0076 7B69     		ldr	r3, [r7, #20]
 1703 0078 7A68     		ldr	r2, [r7, #4]
 1704 007a 02FB03F2 		mul	r2, r2, r3
 1705 007e 3B69     		ldr	r3, [r7, #16]
 1706 0080 92FBF3F2 		sdiv	r2, r2, r3
 1707 0084 0B4B     		ldr	r3, .L96+12
 1708 0086 1B68     		ldr	r3, [r3]
 1709 0088 7969     		ldr	r1, [r7, #20]
 1710 008a 01FB03F1 		mul	r1, r1, r3
 1711 008e 3B69     		ldr	r3, [r7, #16]
 1712 0090 91FBF3F3 		sdiv	r3, r1, r3
 1713 0094 D31A     		subs	r3, r2, r3
 1714 0096 BB60     		str	r3, [r7, #8]
1217:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1218:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     return( uVolts );
 1715              		.loc 1 1218 0
 1716 0098 BB68     		ldr	r3, [r7, #8]
1219:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1717              		.loc 1 1219 0
 1718 009a 1846     		mov	r0, r3
 1719 009c 1C37     		adds	r7, r7, #28
 1720              		.cfi_def_cfa_offset 4
 1721 009e BD46     		mov	sp, r7
 1722              		.cfi_def_cfa_register 13
 1723              		@ sp needed
 1724 00a0 5DF8047B 		ldr	r7, [sp], #4
 1725              		.cfi_restore 7
 1726              		.cfi_def_cfa_offset 0
 1727 00a4 7047     		bx	lr
 1728              	.L97:
 1729 00a6 00BF     		.align	2
 1730              	.L96:
 1731 00a8 00000000 		.word	SIGMA_A_D_Config
 1732 00ac 40420F00 		.word	1000000
 1733 00b0 00000000 		.word	SIGMA_A_D_CountsPerVolt
 1734 00b4 00000000 		.word	SIGMA_A_D_Offset
 1735              		.cfi_endproc
 1736              	.LFE18:
 1737              		.size	SIGMA_A_D_CountsTo_uVolts, .-SIGMA_A_D_CountsTo_uVolts
 1738              		.section	.text.SIGMA_A_D_InitConfig,"ax",%progbits
 1739              		.align	2
 1740              		.thumb
 1741              		.thumb_func
 1742              		.type	SIGMA_A_D_InitConfig, %function
 1743              	SIGMA_A_D_InitConfig:
 1744              	.LFB19:
1220:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 53


1221:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1222:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_InitConfig(uint8 config)
1224:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1225:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1226:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1227:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Initializes all registers based on customizer settings
1228:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1229:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1230:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   void
1231:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1232:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1233:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1234:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1235:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Global variables:
1236:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  SIGMA_A_D_CountsPerVolt:  Used to set the default counts per volt.
1237:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1238:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Side Effects: Rewrites the coherency set by SIGMA_A_D_SetCoherency()
1239:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   API to the default value.
1240:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1241:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1242:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_InitConfig(uint8 config) 
1243:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1745              		.loc 1 1243 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 8
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749 0000 80B5     		push	{r7, lr}
 1750              		.cfi_def_cfa_offset 8
 1751              		.cfi_offset 7, -8
 1752              		.cfi_offset 14, -4
 1753 0002 82B0     		sub	sp, sp, #8
 1754              		.cfi_def_cfa_offset 16
 1755 0004 00AF     		add	r7, sp, #0
 1756              		.cfi_def_cfa_register 7
 1757 0006 0346     		mov	r3, r0
 1758 0008 FB71     		strb	r3, [r7, #7]
1244:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_stopConversion = 0u;
 1759              		.loc 1 1244 0
 1760 000a 374B     		ldr	r3, .L100
 1761 000c 0022     		movs	r2, #0
 1762 000e 1A70     		strb	r2, [r3]
1245:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1246:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if (config == 1u)
 1763              		.loc 1 1246 0
 1764 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1765 0012 012B     		cmp	r3, #1
 1766 0014 65D1     		bne	.L98
1247:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1248:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Default Config */
1249:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_CR_REG      = SIGMA_A_D_CFG1_DEC_CR;
 1767              		.loc 1 1249 0
 1768 0016 354B     		ldr	r3, .L100+4
 1769 0018 7822     		movs	r2, #120
 1770 001a 1A70     		strb	r2, [r3]
1250:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_SHIFT1_REG  = SIGMA_A_D_CFG1_DEC_SHIFT1;
 1771              		.loc 1 1250 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 54


 1772 001c 344B     		ldr	r3, .L100+8
 1773 001e 0022     		movs	r2, #0
 1774 0020 1A70     		strb	r2, [r3]
1251:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_SHIFT2_REG  = SIGMA_A_D_CFG1_DEC_SHIFT2;
 1775              		.loc 1 1251 0
 1776 0022 344B     		ldr	r3, .L100+12
 1777 0024 0922     		movs	r2, #9
 1778 0026 1A70     		strb	r2, [r3]
1252:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_DR2_REG     = SIGMA_A_D_CFG1_DEC_DR2;
 1779              		.loc 1 1252 0
 1780 0028 334B     		ldr	r3, .L100+16
 1781 002a 3F22     		movs	r2, #63
 1782 002c 1A70     		strb	r2, [r3]
1253:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_DR2H_REG    = SIGMA_A_D_CFG1_DEC_DR2H;
 1783              		.loc 1 1253 0
 1784 002e 334B     		ldr	r3, .L100+20
 1785 0030 0022     		movs	r2, #0
 1786 0032 1A70     		strb	r2, [r3]
1254:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_DR1_REG     = SIGMA_A_D_CFG1_DEC_DR1;
 1787              		.loc 1 1254 0
 1788 0034 324B     		ldr	r3, .L100+24
 1789 0036 7F22     		movs	r2, #127
 1790 0038 1A70     		strb	r2, [r3]
1255:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_OCOR_REG    = SIGMA_A_D_CFG1_DEC_OCOR;
 1791              		.loc 1 1255 0
 1792 003a 324B     		ldr	r3, .L100+28
 1793 003c 0022     		movs	r2, #0
 1794 003e 1A70     		strb	r2, [r3]
1256:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_OCORM_REG   = SIGMA_A_D_CFG1_DEC_OCORM;
 1795              		.loc 1 1256 0
 1796 0040 314B     		ldr	r3, .L100+32
 1797 0042 0022     		movs	r2, #0
 1798 0044 1A70     		strb	r2, [r3]
1257:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_OCORH_REG   = SIGMA_A_D_CFG1_DEC_OCORH;
 1799              		.loc 1 1257 0
 1800 0046 314B     		ldr	r3, .L100+36
 1801 0048 0022     		movs	r2, #0
 1802 004a 1A70     		strb	r2, [r3]
1258:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_COHER_REG   = SIGMA_A_D_CFG1_DEC_COHER;
 1803              		.loc 1 1258 0
 1804 004c 304B     		ldr	r3, .L100+40
 1805 004e 0122     		movs	r2, #1
 1806 0050 1A70     		strb	r2, [r3]
1259:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1260:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR4_REG     = SIGMA_A_D_CFG1_DSM_CR4;
 1807              		.loc 1 1260 0
 1808 0052 304B     		ldr	r3, .L100+44
 1809 0054 5022     		movs	r2, #80
 1810 0056 1A70     		strb	r2, [r3]
1261:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR5_REG     = SIGMA_A_D_CFG1_DSM_CR5;
 1811              		.loc 1 1261 0
 1812 0058 2F4B     		ldr	r3, .L100+48
 1813 005a 0722     		movs	r2, #7
 1814 005c 1A70     		strb	r2, [r3]
1262:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR6_REG     = SIGMA_A_D_CFG1_DSM_CR6;
 1815              		.loc 1 1262 0
 1816 005e 2F4B     		ldr	r3, .L100+52
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 55


 1817 0060 2922     		movs	r2, #41
 1818 0062 1A70     		strb	r2, [r3]
1263:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR7_REG     = SIGMA_A_D_CFG1_DSM_CR7;
 1819              		.loc 1 1263 0
 1820 0064 2E4B     		ldr	r3, .L100+56
 1821 0066 0022     		movs	r2, #0
 1822 0068 1A70     		strb	r2, [r3]
1264:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR10_REG    = SIGMA_A_D_CFG1_DSM_CR10;
 1823              		.loc 1 1264 0
 1824 006a 2E4B     		ldr	r3, .L100+60
 1825 006c 5522     		movs	r2, #85
 1826 006e 1A70     		strb	r2, [r3]
1265:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR11_REG    = SIGMA_A_D_CFG1_DSM_CR11;
 1827              		.loc 1 1265 0
 1828 0070 2D4B     		ldr	r3, .L100+64
 1829 0072 5A22     		movs	r2, #90
 1830 0074 1A70     		strb	r2, [r3]
1266:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR12_REG    = SIGMA_A_D_CFG1_DSM_CR12;
 1831              		.loc 1 1266 0
 1832 0076 2D4B     		ldr	r3, .L100+68
 1833 0078 0022     		movs	r2, #0
 1834 007a 1A70     		strb	r2, [r3]
1267:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR14_REG    = SIGMA_A_D_CFG1_DSM_CR14;
 1835              		.loc 1 1267 0
 1836 007c 2C4B     		ldr	r3, .L100+72
 1837 007e 0222     		movs	r2, #2
 1838 0080 1A70     		strb	r2, [r3]
1268:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR15_REG    = SIGMA_A_D_CFG1_DSM_CR15;
 1839              		.loc 1 1268 0
 1840 0082 2C4B     		ldr	r3, .L100+76
 1841 0084 1222     		movs	r2, #18
 1842 0086 1A70     		strb	r2, [r3]
1269:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR16_REG    = SIGMA_A_D_CFG1_DSM_CR16;
 1843              		.loc 1 1269 0
 1844 0088 2B4B     		ldr	r3, .L100+80
 1845 008a 2822     		movs	r2, #40
 1846 008c 1A70     		strb	r2, [r3]
1270:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_CR17_REG    = SIGMA_A_D_CFG1_DSM_CR17;
 1847              		.loc 1 1270 0
 1848 008e 2B4B     		ldr	r3, .L100+84
 1849 0090 EB22     		movs	r2, #235
 1850 0092 1A70     		strb	r2, [r3]
1271:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_SetDSMRef0Reg(SIGMA_A_D_CFG1_DSM_REF0);
 1851              		.loc 1 1272 0
 1852 0094 4420     		movs	r0, #68
 1853 0096 FFF7FEFF 		bl	SIGMA_A_D_SetDSMRef0Reg
1273:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_REF2_REG    = SIGMA_A_D_CFG1_DSM_REF2;
 1854              		.loc 1 1273 0
 1855 009a 294B     		ldr	r3, .L100+88
 1856 009c 5822     		movs	r2, #88
 1857 009e 1A70     		strb	r2, [r3]
1274:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_REF3_REG    = SIGMA_A_D_CFG1_DSM_REF3;
 1858              		.loc 1 1274 0
 1859 00a0 284B     		ldr	r3, .L100+92
 1860 00a2 0022     		movs	r2, #0
 1861 00a4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 56


1275:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1276:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_BUF0_REG    = SIGMA_A_D_CFG1_DSM_BUF0;
 1862              		.loc 1 1276 0
 1863 00a6 284B     		ldr	r3, .L100+96
 1864 00a8 0522     		movs	r2, #5
 1865 00aa 1A70     		strb	r2, [r3]
1277:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_BUF1_REG    = SIGMA_A_D_CFG1_DSM_BUF1;
 1866              		.loc 1 1277 0
 1867 00ac 274B     		ldr	r3, .L100+100
 1868 00ae 0222     		movs	r2, #2
 1869 00b0 1A70     		strb	r2, [r3]
1278:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_BUF2_REG    = SIGMA_A_D_CFG1_DSM_BUF2;
 1870              		.loc 1 1278 0
 1871 00b2 274B     		ldr	r3, .L100+104
 1872 00b4 0022     		movs	r2, #0
 1873 00b6 1A70     		strb	r2, [r3]
1279:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DSM_BUF3_REG    = SIGMA_A_D_CFG1_DSM_BUF3;
 1874              		.loc 1 1279 0
 1875 00b8 264B     		ldr	r3, .L100+108
 1876 00ba 0022     		movs	r2, #0
 1877 00bc 1A70     		strb	r2, [r3]
1280:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1281:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         *  the input  range selected.
1283:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         */
1284:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_DEFAULT_INPUT_MODE)
1285:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if (SIGMA_A_D_CFG1_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)
1286:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_AMux_Select(1u);
1287:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #else
1288:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_AMux_Select(0u);
 1878              		.loc 1 1288 0
 1879 00be 0020     		movs	r0, #0
 1880 00c0 FFF7FEFF 		bl	SIGMA_A_D_AMux_Select
1289:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_IR_VSSA_TO_2VREF) */
1290:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_DEFAULT_INPUT_MODE */
1291:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1292:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         *   mode is Single sample
1294:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         */
1295:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_CFG1_RESOLUTION > 16 && \
1296:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_CFG1_CONV_MODE == SIGMA_A_D_MODE_SINGLE_SAMPLE)
1297:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_stopConversion = 1u;
1298:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1300:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_CountsPerVolt = (int32)SIGMA_A_D_CFG1_COUNTS_PER_VOLT;
 1881              		.loc 1 1300 0
 1882 00c4 244B     		ldr	r3, .L100+112
 1883 00c6 254A     		ldr	r2, .L100+116
 1884 00c8 1A60     		str	r2, [r3]
1301:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1302:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_Ext_CP_Clk_SetDividerRegister(SIGMA_A_D_CFG1_CP_CLK_DIVIDER, 1u);
 1885              		.loc 1 1302 0
 1886 00ca 0520     		movs	r0, #5
 1887 00cc 0121     		movs	r1, #1
 1888 00ce FFF7FEFF 		bl	SIGMA_A_D_Ext_CP_Clk_SetDividerRegister
1303:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1304:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 57


1305:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
1306:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_theACLK_SetDividerRegister(SIGMA_A_D_CFG1_ADC_CLK_DIVIDER, 1u);
 1889              		.loc 1 1306 0
 1890 00d2 1420     		movs	r0, #20
 1891 00d4 0121     		movs	r1, #1
 1892 00d6 FFF7FEFF 		bl	SIGMA_A_D_theACLK_SetDividerRegister
1307:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
1308:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1309:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #if(SIGMA_A_D_IRQ_REMOVE == 0u)
1310:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set interrupt vector */
1311:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             (void)CyIntSetVector(SIGMA_A_D_INTC_NUMBER, &SIGMA_A_D_ISR1);
 1893              		.loc 1 1311 0
 1894 00da 1D20     		movs	r0, #29
 1895 00dc 2049     		ldr	r1, .L100+120
 1896 00de FFF7FEFF 		bl	CyIntSetVector
 1897              	.L98:
1312:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         #endif   /* End SIGMA_A_D_IRQ_REMOVE */
1313:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1314:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1315:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1)
1316:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(config == 2u)
1317:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1318:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Second Config */
1319:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_CR_REG      = SIGMA_A_D_CFG2_DEC_CR;
1320:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT1_REG  = SIGMA_A_D_CFG2_DEC_SHIFT1;
1321:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT2_REG  = SIGMA_A_D_CFG2_DEC_SHIFT2;
1322:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2_REG     = SIGMA_A_D_CFG2_DEC_DR2;
1323:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2H_REG    = SIGMA_A_D_CFG2_DEC_DR2H;
1324:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR1_REG     = SIGMA_A_D_CFG2_DEC_DR1;
1325:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCOR_REG    = SIGMA_A_D_CFG2_DEC_OCOR;
1326:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORM_REG   = SIGMA_A_D_CFG2_DEC_OCORM;
1327:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORH_REG   = SIGMA_A_D_CFG2_DEC_OCORH;
1328:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_COHER_REG   = SIGMA_A_D_CFG2_DEC_COHER;
1329:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1330:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR4_REG     = SIGMA_A_D_CFG2_DSM_CR4;
1331:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR5_REG     = SIGMA_A_D_CFG2_DSM_CR5;
1332:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR6_REG     = SIGMA_A_D_CFG2_DSM_CR6;
1333:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR7_REG     = SIGMA_A_D_CFG2_DSM_CR7;
1334:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR10_REG    = SIGMA_A_D_CFG2_DSM_CR10;
1335:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR11_REG    = SIGMA_A_D_CFG2_DSM_CR11;
1336:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR12_REG    = SIGMA_A_D_CFG2_DSM_CR12;
1337:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR14_REG    = SIGMA_A_D_CFG2_DSM_CR14;
1338:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR15_REG    = SIGMA_A_D_CFG2_DSM_CR15;
1339:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR16_REG    = SIGMA_A_D_CFG2_DSM_CR16;
1340:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR17_REG    = SIGMA_A_D_CFG2_DSM_CR17;
1341:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_SetDSMRef0Reg(SIGMA_A_D_CFG2_DSM_REF0);
1343:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF2_REG    = SIGMA_A_D_CFG2_DSM_REF2;
1344:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF3_REG    = SIGMA_A_D_CFG2_DSM_REF3;
1345:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1346:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF0_REG    = SIGMA_A_D_CFG2_DSM_BUF0;
1347:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF1_REG    = SIGMA_A_D_CFG2_DSM_BUF1;
1348:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF2_REG    = SIGMA_A_D_CFG2_DSM_BUF2;
1349:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF3_REG    = SIGMA_A_D_CFG2_DSM_BUF3;
1350:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1351:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             *  the input range selected.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 58


1353:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             */
1354:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1355:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INPUT_MODE)
1356:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #if (SIGMA_A_D_CFG2_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)
1357:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(1u);
1358:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #else
1359:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(0u);
1360:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #endif /* SIGMA_A_D_IR_VSSA_TO_2VREF) */
1361:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INPUT_MODE */
1362:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1363:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             *   conversion mode is Single sample
1365:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             */
1366:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_CFG2_RESOLUTION > 16 && \
1367:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_CFG2_CONV_MODE == SIGMA_A_D_MODE_SINGLE_SAMPLE)
1368:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_stopConversion = 1u;
1369:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1371:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_CountsPerVolt = (int32)SIGMA_A_D_CFG2_COUNTS_PER_VOLT;
1372:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1373:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_Ext_CP_Clk_SetDividerRegister(SIGMA_A_D_CFG2_CP_CLK_DIVIDER, 1u);
1374:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1375:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* This is only valid if there is an internal clock */
1376:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
1377:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_theACLK_SetDividerRegister(SIGMA_A_D_CFG2_ADC_CLK_DIVIDER, 1u);
1378:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
1379:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1380:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_IRQ_REMOVE == 0u)
1381:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Set interrupt vector */
1382:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 (void)CyIntSetVector(SIGMA_A_D_INTC_NUMBER, &SIGMA_A_D_ISR2);
1383:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif   /* End SIGMA_A_D_IRQ_REMOVE */
1384:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1385:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 1 */
1386:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1387:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2)
1388:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(config == 3u)
1389:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1390:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Third Config */
1391:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_CR_REG      = SIGMA_A_D_CFG3_DEC_CR;
1392:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT1_REG  = SIGMA_A_D_CFG3_DEC_SHIFT1;
1393:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT2_REG  = SIGMA_A_D_CFG3_DEC_SHIFT2;
1394:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2_REG     = SIGMA_A_D_CFG3_DEC_DR2;
1395:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2H_REG    = SIGMA_A_D_CFG3_DEC_DR2H;
1396:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR1_REG     = SIGMA_A_D_CFG3_DEC_DR1;
1397:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCOR_REG    = SIGMA_A_D_CFG3_DEC_OCOR;
1398:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORM_REG   = SIGMA_A_D_CFG3_DEC_OCORM;
1399:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORH_REG   = SIGMA_A_D_CFG3_DEC_OCORH;
1400:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_COHER_REG   = SIGMA_A_D_CFG3_DEC_COHER;
1401:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1402:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR4_REG     = SIGMA_A_D_CFG3_DSM_CR4;
1403:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR5_REG     = SIGMA_A_D_CFG3_DSM_CR5;
1404:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR6_REG     = SIGMA_A_D_CFG3_DSM_CR6;
1405:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR7_REG     = SIGMA_A_D_CFG3_DSM_CR7;
1406:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR10_REG    = SIGMA_A_D_CFG3_DSM_CR10;
1407:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR11_REG    = SIGMA_A_D_CFG3_DSM_CR11;
1408:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR12_REG    = SIGMA_A_D_CFG3_DSM_CR12;
1409:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR14_REG    = SIGMA_A_D_CFG3_DSM_CR14;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 59


1410:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR15_REG    = SIGMA_A_D_CFG3_DSM_CR15;
1411:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR16_REG    = SIGMA_A_D_CFG3_DSM_CR16;
1412:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR17_REG    = SIGMA_A_D_CFG3_DSM_CR17;
1413:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_SetDSMRef0Reg(SIGMA_A_D_CFG3_DSM_REF0);
1415:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF2_REG    = SIGMA_A_D_CFG3_DSM_REF2;
1416:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF3_REG    = SIGMA_A_D_CFG3_DSM_REF3;
1417:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1418:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF0_REG    = SIGMA_A_D_CFG3_DSM_BUF0;
1419:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF1_REG    = SIGMA_A_D_CFG3_DSM_BUF1;
1420:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF2_REG    = SIGMA_A_D_CFG3_DSM_BUF2;
1421:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF3_REG    = SIGMA_A_D_CFG3_DSM_BUF3;
1422:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1423:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             *  the input range selected.
1425:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             */
1426:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INPUT_MODE)
1427:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #if (SIGMA_A_D_CFG3_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)
1428:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(1u);
1429:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #else
1430:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(0u);
1431:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #endif /* SIGMA_A_D_IR_VSSA_TO_2VREF) */
1432:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INPUT_MODE */
1433:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1434:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                conversion  mode is Single sample */
1436:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_CFG3_RESOLUTION > 16 && \
1437:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_CFG3_CONV_MODE == SIGMA_A_D_MODE_SINGLE_SAMPLE)
1438:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_stopConversion = 1u;
1439:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* Single sample with resolution above 16 bits */
1440:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1441:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_CountsPerVolt = (int32)SIGMA_A_D_CFG3_COUNTS_PER_VOLT;
1442:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1443:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_Ext_CP_Clk_SetDividerRegister(SIGMA_A_D_CFG3_CP_CLK_DIVIDER, 1u);
1444:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1445:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* This is only valid if there is an internal clock */
1446:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
1447:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_theACLK_SetDividerRegister(SIGMA_A_D_CFG3_ADC_CLK_DIVIDER, 1u);
1448:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
1449:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1450:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_IRQ_REMOVE == 0u)
1451:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Set interrupt vector */
1452:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 (void)CyIntSetVector(SIGMA_A_D_INTC_NUMBER, &SIGMA_A_D_ISR3);
1453:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif   /* End SIGMA_A_D_IRQ_REMOVE */
1454:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1455:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 2 */
1456:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1457:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #if(SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3)
1458:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if (config == 4u)
1459:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1460:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Fourth Config */
1461:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_CR_REG      = SIGMA_A_D_CFG4_DEC_CR;
1462:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT1_REG  = SIGMA_A_D_CFG4_DEC_SHIFT1;
1463:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_SHIFT2_REG  = SIGMA_A_D_CFG4_DEC_SHIFT2;
1464:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2_REG     = SIGMA_A_D_CFG4_DEC_DR2;
1465:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR2H_REG    = SIGMA_A_D_CFG4_DEC_DR2H;
1466:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_DR1_REG     = SIGMA_A_D_CFG4_DEC_DR1;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 60


1467:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCOR_REG    = SIGMA_A_D_CFG4_DEC_OCOR;
1468:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORM_REG   = SIGMA_A_D_CFG4_DEC_OCORM;
1469:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_OCORH_REG   = SIGMA_A_D_CFG4_DEC_OCORH;
1470:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DEC_COHER_REG   = SIGMA_A_D_CFG4_DEC_COHER;
1471:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1472:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR4_REG     = SIGMA_A_D_CFG4_DSM_CR4;
1473:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR5_REG     = SIGMA_A_D_CFG4_DSM_CR5;
1474:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR6_REG     = SIGMA_A_D_CFG4_DSM_CR6;
1475:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR7_REG     = SIGMA_A_D_CFG4_DSM_CR7;
1476:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR10_REG    = SIGMA_A_D_CFG4_DSM_CR10;
1477:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR11_REG    = SIGMA_A_D_CFG4_DSM_CR11;
1478:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR12_REG    = SIGMA_A_D_CFG4_DSM_CR12;
1479:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR14_REG    = SIGMA_A_D_CFG4_DSM_CR14;
1480:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR15_REG    = SIGMA_A_D_CFG4_DSM_CR15;
1481:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR16_REG    = SIGMA_A_D_CFG4_DSM_CR16;
1482:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_CR17_REG    = SIGMA_A_D_CFG4_DSM_CR17;
1483:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_SetDSMRef0Reg(SIGMA_A_D_CFG4_DSM_REF0);
1485:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF2_REG    = SIGMA_A_D_CFG4_DSM_REF2;
1486:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_REF3_REG    = SIGMA_A_D_CFG4_DSM_REF3;
1487:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1488:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF0_REG    = SIGMA_A_D_CFG4_DSM_BUF0;
1489:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF1_REG    = SIGMA_A_D_CFG4_DSM_BUF1;
1490:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF2_REG    = SIGMA_A_D_CFG4_DSM_BUF2;
1491:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_DSM_BUF3_REG    = SIGMA_A_D_CFG4_DSM_BUF3;
1492:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1493:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             *  the input range selected.
1495:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             */
1496:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INPUT_MODE)
1497:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #if (SIGMA_A_D_CFG4_INPUT_RANGE == SIGMA_A_D_IR_VSSA_TO_2VREF)
1498:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(1u);
1499:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #else
1500:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     SIGMA_A_D_AMux_Select(0u);
1501:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 #endif /* SIGMA_A_D_IR_VSSA_TO_2VREF) */
1502:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INPUT_MODE */
1503:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1504:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                conversion mode is Single sample */
1506:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_CFG4_RESOLUTION > 16 && \
1507:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_CFG4_CONV_MODE == SIGMA_A_D_MODE_SINGLE_SAMPLE)
1508:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_stopConversion = 1u;
1509:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* Single sample with resolution above 16 bits */
1510:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1511:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_CountsPerVolt = (int32)SIGMA_A_D_CFG4_COUNTS_PER_VOLT;
1512:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1513:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_Ext_CP_Clk_SetDividerRegister(SIGMA_A_D_CFG4_CP_CLK_DIVIDER, 1u);
1514:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1515:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* This is only valid if there is an internal clock */
1516:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_DEFAULT_INTERNAL_CLK)
1517:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 SIGMA_A_D_theACLK_SetDividerRegister(SIGMA_A_D_CFG4_ADC_CLK_DIVIDER, 1u);
1518:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif /* SIGMA_A_D_DEFAULT_INTERNAL_CLK */
1519:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1520:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #if(SIGMA_A_D_IRQ_REMOVE == 0u)
1521:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Set interrupt vector */
1522:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 (void)CyIntSetVector(SIGMA_A_D_INTC_NUMBER, &SIGMA_A_D_ISR4);
1523:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             #endif   /* End SIGMA_A_D_IRQ_REMOVE */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 61


1524:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1525:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     #endif /* SIGMA_A_D_DEFAULT_NUM_CONFIGS > 3 */
1526:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 1898              		.loc 1 1526 0
 1899 00e2 0837     		adds	r7, r7, #8
 1900              		.cfi_def_cfa_offset 8
 1901 00e4 BD46     		mov	sp, r7
 1902              		.cfi_def_cfa_register 13
 1903              		@ sp needed
 1904 00e6 80BD     		pop	{r7, pc}
 1905              	.L101:
 1906              		.align	2
 1907              	.L100:
 1908 00e8 00000000 		.word	SIGMA_A_D_stopConversion
 1909 00ec 004E0040 		.word	1073761792
 1910 00f0 024E0040 		.word	1073761794
 1911 00f4 034E0040 		.word	1073761795
 1912 00f8 044E0040 		.word	1073761796
 1913 00fc 054E0040 		.word	1073761797
 1914 0100 064E0040 		.word	1073761798
 1915 0104 084E0040 		.word	1073761800
 1916 0108 094E0040 		.word	1073761801
 1917 010c 0A4E0040 		.word	1073761802
 1918 0110 144E0040 		.word	1073761812
 1919 0114 84580040 		.word	1073764484
 1920 0118 85580040 		.word	1073764485
 1921 011c 86580040 		.word	1073764486
 1922 0120 87580040 		.word	1073764487
 1923 0124 8A580040 		.word	1073764490
 1924 0128 8B580040 		.word	1073764491
 1925 012c 8C580040 		.word	1073764492
 1926 0130 8E580040 		.word	1073764494
 1927 0134 8F580040 		.word	1073764495
 1928 0138 90580040 		.word	1073764496
 1929 013c 91580040 		.word	1073764497
 1930 0140 94580040 		.word	1073764500
 1931 0144 95580040 		.word	1073764501
 1932 0148 9A580040 		.word	1073764506
 1933 014c 9B580040 		.word	1073764507
 1934 0150 9C580040 		.word	1073764508
 1935 0154 9D580040 		.word	1073764509
 1936 0158 00000000 		.word	SIGMA_A_D_CountsPerVolt
 1937 015c 554D0100 		.word	85333
 1938 0160 00000000 		.word	SIGMA_A_D_ISR1
 1939              		.cfi_endproc
 1940              	.LFE19:
 1941              		.size	SIGMA_A_D_InitConfig, .-SIGMA_A_D_InitConfig
 1942              		.section	.text.SIGMA_A_D_SelectConfiguration,"ax",%progbits
 1943              		.align	2
 1944              		.global	SIGMA_A_D_SelectConfiguration
 1945              		.thumb
 1946              		.thumb_func
 1947              		.type	SIGMA_A_D_SelectConfiguration, %function
 1948              	SIGMA_A_D_SelectConfiguration:
 1949              	.LFB20:
1527:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1528:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 62


1529:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1530:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SelectCofiguration
1531:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1532:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1533:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1534:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  the new configuration, the ADC can be powered and conversion
1537:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  can be restarted depending up on the value of second parameter
1538:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  restarted. If this value is zero, then user must call SIGMA_A_D_Start
1540:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  and SIGMA_A_D_StartConvert() to restart the conversion.
1541:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1542:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1543:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  config:  configuration user wants to select.
1544:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *           Valid range: 1..4
1545:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                            0 means do not start the ADC and conversion.
1547:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1548:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1549:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1550:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1551:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1552:.\Generated_Source\PSoC5/SIGMA_A_D.c **** void SIGMA_A_D_SelectConfiguration(uint8 config, uint8 restart)
1553:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                                               
1554:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 1950              		.loc 1 1554 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 8
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 80B5     		push	{r7, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 82B0     		sub	sp, sp, #8
 1959              		.cfi_def_cfa_offset 16
 1960 0004 00AF     		add	r7, sp, #0
 1961              		.cfi_def_cfa_register 7
 1962 0006 0346     		mov	r3, r0
 1963 0008 0A46     		mov	r2, r1
 1964 000a FB71     		strb	r3, [r7, #7]
 1965 000c 1346     		mov	r3, r2
 1966 000e BB71     		strb	r3, [r7, #6]
1555:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Check whether the configuration number is valid or not */
1556:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if((config > 0u) && (config <= SIGMA_A_D_DEFAULT_NUM_CONFIGS))
 1967              		.loc 1 1556 0
 1968 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1969 0012 002B     		cmp	r3, #0
 1970 0014 2AD0     		beq	.L103
 1971              		.loc 1 1556 0 is_stmt 0 discriminator 1
 1972 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1973 0018 012B     		cmp	r3, #1
 1974 001a 27D8     		bhi	.L103
1557:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1558:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 		*  selected configuration
1560:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 		*/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 63


1561:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(SIGMA_A_D_initVar == 0u)
 1975              		.loc 1 1561 0 is_stmt 1
 1976 001c 164B     		ldr	r3, .L107
 1977 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0020 002B     		cmp	r3, #0
 1979 0022 02D1     		bne	.L104
1562:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1563:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_started = 1u;
 1980              		.loc 1 1563 0
 1981 0024 154B     		ldr	r3, .L107+4
 1982 0026 0122     		movs	r2, #1
 1983 0028 1A70     		strb	r2, [r3]
 1984              	.L104:
1564:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1565:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1566:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Update the config flag */
1567:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_Config = config;
 1985              		.loc 1 1567 0
 1986 002a 154A     		ldr	r2, .L107+8
 1987 002c FB79     		ldrb	r3, [r7, #7]
 1988 002e 1370     		strb	r3, [r2]
1568:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1569:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Stop the ADC  */
1570:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_Stop();
 1989              		.loc 1 1570 0
 1990 0030 FFF7FEFF 		bl	SIGMA_A_D_Stop
1571:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1572:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Set the  ADC registers based on the configuration */
1573:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_InitConfig(config);
 1991              		.loc 1 1573 0
 1992 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1993 0036 1846     		mov	r0, r3
 1994 0038 FFF7FEFF 		bl	SIGMA_A_D_InitConfig
1574:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1575:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Compensate the gain */
1576:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_DEC_GVAL_REG = SIGMA_A_D_gcor[config - 1u].gval;
 1995              		.loc 1 1576 0
 1996 003c 114A     		ldr	r2, .L107+12
 1997 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1998 0040 013B     		subs	r3, r3, #1
 1999 0042 1149     		ldr	r1, .L107+16
 2000 0044 9B00     		lsls	r3, r3, #2
 2001 0046 0B44     		add	r3, r3, r1
 2002 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2003 004a 1370     		strb	r3, [r2]
1577:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CY_SET_REG16(SIGMA_A_D_DEC_GCOR_16B_PTR, SIGMA_A_D_gcor[config - 1u].gcor);
 2004              		.loc 1 1577 0
 2005 004c 0F4A     		ldr	r2, .L107+20
 2006 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2007 0050 013B     		subs	r3, r3, #1
 2008 0052 0D49     		ldr	r1, .L107+16
 2009 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2010 0058 1380     		strh	r3, [r2]	@ movhi
1578:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1579:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if(restart == 1u)
 2011              		.loc 1 1579 0
 2012 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 64


 2013 005c 012B     		cmp	r3, #1
 2014 005e 04D1     		bne	.L105
1580:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1581:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Restart the ADC */
1582:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_Start();
 2015              		.loc 1 1582 0
 2016 0060 FFF7FEFF 		bl	SIGMA_A_D_Start
1583:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1584:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Restart the ADC conversion */
1585:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_StartConvert();
 2017              		.loc 1 1585 0
 2018 0064 FFF7FEFF 		bl	SIGMA_A_D_StartConvert
1579:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
 2019              		.loc 1 1579 0
 2020 0068 03E0     		b	.L102
 2021              	.L105:
 2022 006a 02E0     		b	.L102
 2023              	.L103:
1586:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1587:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1588:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else
1589:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1590:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CYASSERT(0u != 0u);
 2024              		.loc 1 1591 0 discriminator 1
 2025 006c 0020     		movs	r0, #0
 2026 006e FFF7FEFF 		bl	CyHalt
 2027              	.L102:
1592:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1593:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2028              		.loc 1 1593 0
 2029 0072 0837     		adds	r7, r7, #8
 2030              		.cfi_def_cfa_offset 8
 2031 0074 BD46     		mov	sp, r7
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 0076 80BD     		pop	{r7, pc}
 2035              	.L108:
 2036              		.align	2
 2037              	.L107:
 2038 0078 00000000 		.word	SIGMA_A_D_initVar
 2039 007c 00000000 		.word	SIGMA_A_D_started
 2040 0080 00000000 		.word	SIGMA_A_D_Config
 2041 0084 0E4E0040 		.word	1073761806
 2042 0088 04000000 		.word	SIGMA_A_D_gcor
 2043 008c 0C4E0040 		.word	1073761804
 2044              		.cfi_endproc
 2045              	.LFE20:
 2046              		.size	SIGMA_A_D_SelectConfiguration, .-SIGMA_A_D_SelectConfiguration
 2047              		.section	.text.SIGMA_A_D_GainCompensation,"ax",%progbits
 2048              		.align	2
 2049              		.thumb
 2050              		.thumb_func
 2051              		.type	SIGMA_A_D_GainCompensation, %function
 2052              	SIGMA_A_D_GainCompensation:
 2053              	.LFB21:
1594:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 65


1595:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1596:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1597:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_GainCompensation
1598:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1599:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1600:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1601:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1603:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1604:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *                 conversion  mode.
1607:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                      conversion mode.
1609:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  config:      Specifies the configuration number
1611:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *               Valid range: 1..4
1612:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1613:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1614:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1615:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1616:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1617:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGai
1618:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                               uint8 resolution, uint8 config) 
1619:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 2054              		.loc 1 1619 0
 2055              		.cfi_startproc
 2056              		@ args = 4, pretend = 0, frame = 24
 2057              		@ frame_needed = 1, uses_anonymous_args = 0
 2058 0000 90B5     		push	{r4, r7, lr}
 2059              		.cfi_def_cfa_offset 12
 2060              		.cfi_offset 4, -12
 2061              		.cfi_offset 7, -8
 2062              		.cfi_offset 14, -4
 2063 0002 87B0     		sub	sp, sp, #28
 2064              		.cfi_def_cfa_offset 40
 2065 0004 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
 2067 0006 0446     		mov	r4, r0
 2068 0008 0846     		mov	r0, r1
 2069 000a 1146     		mov	r1, r2
 2070 000c 1A46     		mov	r2, r3
 2071 000e 2346     		mov	r3, r4
 2072 0010 FB71     		strb	r3, [r7, #7]
 2073 0012 0346     		mov	r3, r0	@ movhi
 2074 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2075 0016 0B46     		mov	r3, r1	@ movhi
 2076 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2077 001a 1346     		mov	r3, r2
 2078 001c BB71     		strb	r3, [r7, #6]
1620:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int8 flash;
1621:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 	int32 normalised;
1622:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 	uint16 gcorValue;
1623:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint32 gcorTmp;
1624:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1625:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     if((config > 0u) && (config <= SIGMA_A_D_DEFAULT_NUM_CONFIGS))
 2079              		.loc 1 1625 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 66


 2080 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2081 0022 002B     		cmp	r3, #0
 2082 0024 00F08A80 		beq	.L110
 2083              		.loc 1 1625 0 is_stmt 0 discriminator 1
 2084 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2085 002c 012B     		cmp	r3, #1
 2086 002e 00F28580 		bhi	.L110
1626:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1627:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         switch(inputRange)
 2087              		.loc 1 1627 0 is_stmt 1
 2088 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2089 0034 013B     		subs	r3, r3, #1
 2090 0036 092B     		cmp	r3, #9
 2091 0038 4AD8     		bhi	.L111
 2092 003a 01A2     		adr	r2, .L113
 2093 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2094              		.p2align 2
 2095              	.L113:
 2096 0040 69000000 		.word	.L112+1
 2097 0044 D1000000 		.word	.L111+1
 2098 0048 D1000000 		.word	.L111+1
 2099 004c 69000000 		.word	.L112+1
 2100 0050 D1000000 		.word	.L111+1
 2101 0054 D1000000 		.word	.L111+1
 2102 0058 83000000 		.word	.L114+1
 2103 005c 9D000000 		.word	.L115+1
 2104 0060 D1000000 		.word	.L111+1
 2105 0064 B7000000 		.word	.L116+1
 2106              		.p2align 1
 2107              	.L112:
1628:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1629:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case SIGMA_A_D_IR_VNEG_VREF_DIFF:
1630:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case SIGMA_A_D_IR_VSSA_TO_2VREF:
1631:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Normalize the flash Value */
1632:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 if(resolution > 15u)
 2108              		.loc 1 1632 0
 2109 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2110 006a 0F2B     		cmp	r3, #15
 2111 006c 04D9     		bls	.L117
1633:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1634:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_DIFF_16_20;
 2112              		.loc 1 1634 0
 2113 006e 364B     		ldr	r3, .L129
 2114 0070 1B78     		ldrb	r3, [r3]
 2115 0072 DBB2     		uxtb	r3, r3
 2116 0074 FB75     		strb	r3, [r7, #23]
1635:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1636:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 else
1637:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1638:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_DIFF_8_15;
1639:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1640:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 2117              		.loc 1 1640 0
 2118 0076 2EE0     		b	.L119
 2119              	.L117:
1638:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
 2120              		.loc 1 1638 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 67


 2121 0078 344B     		ldr	r3, .L129+4
 2122 007a 1B78     		ldrb	r3, [r3]
 2123 007c DBB2     		uxtb	r3, r3
 2124 007e FB75     		strb	r3, [r7, #23]
 2125              		.loc 1 1640 0
 2126 0080 29E0     		b	.L119
 2127              	.L114:
1641:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1642:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case SIGMA_A_D_IR_VNEG_VREF_2_DIFF:
1643:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Normalize the flash Value */
1644:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 if(resolution > 15u)
 2128              		.loc 1 1644 0
 2129 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2130 0084 0F2B     		cmp	r3, #15
 2131 0086 04D9     		bls	.L120
1645:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1646:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_2_DIFF_16_20;
 2132              		.loc 1 1646 0
 2133 0088 314B     		ldr	r3, .L129+8
 2134 008a 1B78     		ldrb	r3, [r3]
 2135 008c DBB2     		uxtb	r3, r3
 2136 008e FB75     		strb	r3, [r7, #23]
1647:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1648:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 else
1649:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1650:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_2_DIFF_8_15;
1651:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1652:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 2137              		.loc 1 1652 0
 2138 0090 21E0     		b	.L119
 2139              	.L120:
1650:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
 2140              		.loc 1 1650 0
 2141 0092 304B     		ldr	r3, .L129+12
 2142 0094 1B78     		ldrb	r3, [r3]
 2143 0096 DBB2     		uxtb	r3, r3
 2144 0098 FB75     		strb	r3, [r7, #23]
 2145              		.loc 1 1652 0
 2146 009a 1CE0     		b	.L119
 2147              	.L115:
1653:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1654:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case SIGMA_A_D_IR_VNEG_VREF_4_DIFF:
1655:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Normalize the flash Value */
1656:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 if(resolution > 15u)
 2148              		.loc 1 1656 0
 2149 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2150 009e 0F2B     		cmp	r3, #15
 2151 00a0 04D9     		bls	.L122
1657:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1658:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_4_DIFF_16_20;
 2152              		.loc 1 1658 0
 2153 00a2 2D4B     		ldr	r3, .L129+16
 2154 00a4 1B78     		ldrb	r3, [r3]
 2155 00a6 DBB2     		uxtb	r3, r3
 2156 00a8 FB75     		strb	r3, [r7, #23]
1659:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1660:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 else
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 68


1661:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1662:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_4_DIFF_8_15;
1663:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1664:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 2157              		.loc 1 1664 0
 2158 00aa 14E0     		b	.L119
 2159              	.L122:
1662:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
 2160              		.loc 1 1662 0
 2161 00ac 2B4B     		ldr	r3, .L129+20
 2162 00ae 1B78     		ldrb	r3, [r3]
 2163 00b0 DBB2     		uxtb	r3, r3
 2164 00b2 FB75     		strb	r3, [r7, #23]
 2165              		.loc 1 1664 0
 2166 00b4 0FE0     		b	.L119
 2167              	.L116:
1665:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1666:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             case SIGMA_A_D_IR_VNEG_VREF_16_DIFF:
1667:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 /* Normalize the flash Value */
1668:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 if(resolution > 15u)
 2168              		.loc 1 1668 0
 2169 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2170 00b8 0F2B     		cmp	r3, #15
 2171 00ba 04D9     		bls	.L124
1669:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1670:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_16_DIFF_16_20;
 2172              		.loc 1 1670 0
 2173 00bc 284B     		ldr	r3, .L129+24
 2174 00be 1B78     		ldrb	r3, [r3]
 2175 00c0 DBB2     		uxtb	r3, r3
 2176 00c2 FB75     		strb	r3, [r7, #23]
1671:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1672:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 else
1673:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 {
1674:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                     flash = SIGMA_A_D_DEC_TRIM_VREF_16_DIFF_8_15;
1675:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
1676:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 2177              		.loc 1 1676 0
 2178 00c4 07E0     		b	.L119
 2179              	.L124:
1674:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 }
 2180              		.loc 1 1674 0
 2181 00c6 274B     		ldr	r3, .L129+28
 2182 00c8 1B78     		ldrb	r3, [r3]
 2183 00ca DBB2     		uxtb	r3, r3
 2184 00cc FB75     		strb	r3, [r7, #23]
 2185              		.loc 1 1676 0
 2186 00ce 02E0     		b	.L119
 2187              	.L111:
1677:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1678:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             default:
1679:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 flash = 0;
 2188              		.loc 1 1679 0
 2189 00d0 0023     		movs	r3, #0
 2190 00d2 FB75     		strb	r3, [r7, #23]
1680:.\Generated_Source\PSoC5/SIGMA_A_D.c ****                 break;
 2191              		.loc 1 1680 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 69


 2192 00d4 00BF     		nop
 2193              	.L119:
1681:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1682:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1683:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Add two values */
1684:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2194              		.loc 1 1684 0
 2195 00d6 BA88     		ldrh	r2, [r7, #4]
 2196 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2197 00dc 5B01     		lsls	r3, r3, #5
 2198 00de 1344     		add	r3, r3, r2
 2199 00e0 3B61     		str	r3, [r7, #16]
1685:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2200              		.loc 1 1685 0
 2201 00e2 7B88     		ldrh	r3, [r7, #2]
 2202 00e4 3A69     		ldr	r2, [r7, #16]
 2203 00e6 02FB03F3 		mul	r3, r2, r3
 2204 00ea FB60     		str	r3, [r7, #12]
1686:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         gcorValue = (uint16)(gcorTmp / SIGMA_A_D_IDEAL_GAIN_CONST);
 2205              		.loc 1 1686 0
 2206 00ec FB68     		ldr	r3, [r7, #12]
 2207 00ee DB0B     		lsrs	r3, r3, #15
 2208 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1687:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1688:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         if (resolution < (SIGMA_A_D_MAX_GVAL - 1u))
 2209              		.loc 1 1688 0
 2210 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2211 00f4 0D2B     		cmp	r3, #13
 2212 00f6 11D8     		bhi	.L126
1689:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1690:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             gcorValue = (gcorValue >> (SIGMA_A_D_MAX_GVAL - (resolution + 1u)));
 2213              		.loc 1 1690 0
 2214 00f8 BB8A     		ldrh	r3, [r7, #20]
 2215 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2216 00fc C2F10E02 		rsb	r2, r2, #14
 2217 0100 1341     		asrs	r3, r3, r2
 2218 0102 BB82     		strh	r3, [r7, #20]	@ movhi
1691:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_gcor[config - 1u].gval = (resolution + 1u);
 2219              		.loc 1 1691 0
 2220 0104 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2221 0108 013B     		subs	r3, r3, #1
 2222 010a BA79     		ldrb	r2, [r7, #6]
 2223 010c 0132     		adds	r2, r2, #1
 2224 010e D1B2     		uxtb	r1, r2
 2225 0110 154A     		ldr	r2, .L129+32
 2226 0112 9B00     		lsls	r3, r3, #2
 2227 0114 1344     		add	r3, r3, r2
 2228 0116 0A46     		mov	r2, r1
 2229 0118 9A70     		strb	r2, [r3, #2]
 2230 011a 07E0     		b	.L127
 2231              	.L126:
1692:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1693:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         else
1694:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         {
1695:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             /* Use all 16 bits */
1696:.\Generated_Source\PSoC5/SIGMA_A_D.c ****             SIGMA_A_D_gcor[config - 1u].gval = SIGMA_A_D_MAX_GVAL;
 2232              		.loc 1 1696 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 70


 2233 011c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2234 0120 013B     		subs	r3, r3, #1
 2235 0122 114A     		ldr	r2, .L129+32
 2236 0124 9B00     		lsls	r3, r3, #2
 2237 0126 1344     		add	r3, r3, r2
 2238 0128 0F22     		movs	r2, #15
 2239 012a 9A70     		strb	r2, [r3, #2]
 2240              	.L127:
1697:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         }
1698:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1699:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Save the gain correction register value */
1700:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         SIGMA_A_D_gcor[config - 1u].gcor = gcorValue;
 2241              		.loc 1 1700 0
 2242 012c 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2243 0130 013B     		subs	r3, r3, #1
 2244 0132 0D49     		ldr	r1, .L129+32
 2245 0134 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2246 0136 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2247 013a 02E0     		b	.L109
 2248              	.L110:
1701:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1702:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     else
1703:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     {
1704:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:.\Generated_Source\PSoC5/SIGMA_A_D.c ****         CYASSERT(0u != 0u);
 2249              		.loc 1 1705 0 discriminator 1
 2250 013c 0020     		movs	r0, #0
 2251 013e FFF7FEFF 		bl	CyHalt
 2252              	.L109:
1706:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     }
1707:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2253              		.loc 1 1707 0
 2254 0142 1C37     		adds	r7, r7, #28
 2255              		.cfi_def_cfa_offset 12
 2256 0144 BD46     		mov	sp, r7
 2257              		.cfi_def_cfa_register 13
 2258              		@ sp needed
 2259 0146 90BD     		pop	{r4, r7, pc}
 2260              	.L130:
 2261              		.align	2
 2262              	.L129:
 2263 0148 18010049 		.word	1224737048
 2264 014c 1C010049 		.word	1224737052
 2265 0150 19010049 		.word	1224737049
 2266 0154 1D010049 		.word	1224737053
 2267 0158 1A010049 		.word	1224737050
 2268 015c 1E010049 		.word	1224737054
 2269 0160 1B010049 		.word	1224737051
 2270 0164 1F010049 		.word	1224737055
 2271 0168 04000000 		.word	SIGMA_A_D_gcor
 2272              		.cfi_endproc
 2273              	.LFE21:
 2274              		.size	SIGMA_A_D_GainCompensation, .-SIGMA_A_D_GainCompensation
 2275              		.section	.text.SIGMA_A_D_SetDSMRef0Reg,"ax",%progbits
 2276              		.align	2
 2277              		.thumb
 2278              		.thumb_func
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 71


 2279              		.type	SIGMA_A_D_SetDSMRef0Reg, %function
 2280              	SIGMA_A_D_SetDSMRef0Reg:
 2281              	.LFB22:
1708:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1709:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1710:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /******************************************************************************
1711:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_SetDSMRef0Reg(uint8)
1712:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ******************************************************************************
1713:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1714:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1715:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1717:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1718:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  value:  Value to be written to DSM_REF0 register.
1719:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1720:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1721:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1722:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1723:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ******************************************************************************/
1724:.\Generated_Source\PSoC5/SIGMA_A_D.c **** static void SIGMA_A_D_SetDSMRef0Reg(uint8 value) 
1725:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 2282              		.loc 1 1725 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 16
 2285              		@ frame_needed = 1, uses_anonymous_args = 0
 2286 0000 80B5     		push	{r7, lr}
 2287              		.cfi_def_cfa_offset 8
 2288              		.cfi_offset 7, -8
 2289              		.cfi_offset 14, -4
 2290 0002 84B0     		sub	sp, sp, #16
 2291              		.cfi_def_cfa_offset 24
 2292 0004 00AF     		add	r7, sp, #0
 2293              		.cfi_def_cfa_register 7
 2294 0006 0346     		mov	r3, r0
 2295 0008 FB71     		strb	r3, [r7, #7]
1726:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     uint8 enableInterrupts;
1727:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     enableInterrupts = CyEnterCriticalSection();
 2296              		.loc 1 1727 0
 2297 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2298 000e 0346     		mov	r3, r0
 2299 0010 FB73     		strb	r3, [r7, #15]
1728:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1729:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG |= (SIGMA_A_D_IGNORE_PRESA1 | SIGMA_A_D_IGNORE_PRESD1);
 2300              		.loc 1 1730 0
 2301 0012 164A     		ldr	r2, .L132
 2302 0014 154B     		ldr	r3, .L132
 2303 0016 1B78     		ldrb	r3, [r3]
 2304 0018 DBB2     		uxtb	r3, r3
 2305 001a 43F00303 		orr	r3, r3, #3
 2306 001e DBB2     		uxtb	r3, r3
 2307 0020 1370     		strb	r3, [r2]
1731:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG |= (SIGMA_A_D_IGNORE_PRESA2 | SIGMA_A_D_IGNORE_PRESD2);
 2308              		.loc 1 1731 0
 2309 0022 134A     		ldr	r2, .L132+4
 2310 0024 124B     		ldr	r3, .L132+4
 2311 0026 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 72


 2312 0028 DBB2     		uxtb	r3, r3
 2313 002a 43F00303 		orr	r3, r3, #3
 2314 002e DBB2     		uxtb	r3, r3
 2315 0030 1370     		strb	r3, [r2]
1732:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DSM_REF0_REG = value;
 2316              		.loc 1 1732 0
 2317 0032 104A     		ldr	r2, .L132+8
 2318 0034 FB79     		ldrb	r3, [r7, #7]
 2319 0036 1370     		strb	r3, [r2]
1733:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1734:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Wait for 3 microseconds */
1735:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyDelayUs(SIGMA_A_D_PRES_DELAY_TIME);
 2320              		.loc 1 1735 0
 2321 0038 0320     		movs	r0, #3
 2322 003a FFF7FEFF 		bl	CyDelayUs
1736:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Enable the press circuit */
1737:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR4_REG &= (uint8)~(SIGMA_A_D_IGNORE_PRESA1 | SIGMA_A_D_IGNORE_PRESD1);
 2323              		.loc 1 1737 0
 2324 003e 0B4A     		ldr	r2, .L132
 2325 0040 0A4B     		ldr	r3, .L132
 2326 0042 1B78     		ldrb	r3, [r3]
 2327 0044 DBB2     		uxtb	r3, r3
 2328 0046 23F00303 		bic	r3, r3, #3
 2329 004a DBB2     		uxtb	r3, r3
 2330 004c 1370     		strb	r3, [r2]
1738:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_RESET_CR5_REG &= (uint8)~(SIGMA_A_D_IGNORE_PRESA2 | SIGMA_A_D_IGNORE_PRESD2);
 2331              		.loc 1 1738 0
 2332 004e 084A     		ldr	r2, .L132+4
 2333 0050 074B     		ldr	r3, .L132+4
 2334 0052 1B78     		ldrb	r3, [r3]
 2335 0054 DBB2     		uxtb	r3, r3
 2336 0056 23F00303 		bic	r3, r3, #3
 2337 005a DBB2     		uxtb	r3, r3
 2338 005c 1370     		strb	r3, [r2]
1739:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1740:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     CyExitCriticalSection(enableInterrupts);
 2339              		.loc 1 1740 0
 2340 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2341 0060 1846     		mov	r0, r3
 2342 0062 FFF7FEFF 		bl	CyExitCriticalSection
1741:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2343              		.loc 1 1741 0
 2344 0066 1037     		adds	r7, r7, #16
 2345              		.cfi_def_cfa_offset 8
 2346 0068 BD46     		mov	sp, r7
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 006a 80BD     		pop	{r7, pc}
 2350              	.L133:
 2351              		.align	2
 2352              	.L132:
 2353 006c F8460040 		.word	1073759992
 2354 0070 F9460040 		.word	1073759993
 2355 0074 92580040 		.word	1073764498
 2356              		.cfi_endproc
 2357              	.LFE22:
 2358              		.size	SIGMA_A_D_SetDSMRef0Reg, .-SIGMA_A_D_SetDSMRef0Reg
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 73


 2359              		.section	.text.SIGMA_A_D_Read8,"ax",%progbits
 2360              		.align	2
 2361              		.global	SIGMA_A_D_Read8
 2362              		.thumb
 2363              		.thumb_func
 2364              		.type	SIGMA_A_D_Read8, %function
 2365              	SIGMA_A_D_Read8:
 2366              	.LFB23:
1742:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1743:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1744:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1745:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Read8
1746:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1747:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1748:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1749:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function simplifies getting results from the ADC when only a
1750:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  single reading is required. When called, it will start ADC
1751:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversion and return the result. This is a blocking function and will
1753:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  not return until the result is ready.
1754:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1755:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1756:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1757:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1758:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1759:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int8:  ADC result.
1760:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1761:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1762:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int8 SIGMA_A_D_Read8(void) 
1763:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 2367              		.loc 1 1763 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 8
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 0000 80B5     		push	{r7, lr}
 2372              		.cfi_def_cfa_offset 8
 2373              		.cfi_offset 7, -8
 2374              		.cfi_offset 14, -4
 2375 0002 82B0     		sub	sp, sp, #8
 2376              		.cfi_def_cfa_offset 16
 2377 0004 00AF     		add	r7, sp, #0
 2378              		.cfi_def_cfa_register 7
1764:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int8 result;
1765:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1766:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear pending conversion done status */
1767:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_SR_REG |= SIGMA_A_D_DEC_INTR_CLEAR;
 2379              		.loc 1 1767 0
 2380 0006 0C4A     		ldr	r2, .L136
 2381 0008 0B4B     		ldr	r3, .L136
 2382 000a 1B78     		ldrb	r3, [r3]
 2383 000c DBB2     		uxtb	r3, r3
 2384 000e 43F00403 		orr	r3, r3, #4
 2385 0012 DBB2     		uxtb	r3, r3
 2386 0014 1370     		strb	r3, [r2]
1768:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StartConvert();
 2387              		.loc 1 1768 0
 2388 0016 FFF7FEFF 		bl	SIGMA_A_D_StartConvert
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 74


1769:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     (void)SIGMA_A_D_IsEndConversion(SIGMA_A_D_WAIT_FOR_RESULT);
 2389              		.loc 1 1769 0
 2390 001a 0020     		movs	r0, #0
 2391 001c FFF7FEFF 		bl	SIGMA_A_D_IsEndConversion
1770:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      result = SIGMA_A_D_GetResult8();
 2392              		.loc 1 1770 0
 2393 0020 FFF7FEFF 		bl	SIGMA_A_D_GetResult8
 2394 0024 0346     		mov	r3, r0
 2395 0026 FB71     		strb	r3, [r7, #7]
1771:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StopConvert();
 2396              		.loc 1 1771 0
 2397 0028 FFF7FEFF 		bl	SIGMA_A_D_StopConvert
1772:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
1773:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      return(result);
 2398              		.loc 1 1773 0
 2399 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2400 002e 5BB2     		sxtb	r3, r3
1774:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2401              		.loc 1 1774 0
 2402 0030 1846     		mov	r0, r3
 2403 0032 0837     		adds	r7, r7, #8
 2404              		.cfi_def_cfa_offset 8
 2405 0034 BD46     		mov	sp, r7
 2406              		.cfi_def_cfa_register 13
 2407              		@ sp needed
 2408 0036 80BD     		pop	{r7, pc}
 2409              	.L137:
 2410              		.align	2
 2411              	.L136:
 2412 0038 014E0040 		.word	1073761793
 2413              		.cfi_endproc
 2414              	.LFE23:
 2415              		.size	SIGMA_A_D_Read8, .-SIGMA_A_D_Read8
 2416              		.section	.text.SIGMA_A_D_Read16,"ax",%progbits
 2417              		.align	2
 2418              		.global	SIGMA_A_D_Read16
 2419              		.thumb
 2420              		.thumb_func
 2421              		.type	SIGMA_A_D_Read16, %function
 2422              	SIGMA_A_D_Read16:
 2423              	.LFB24:
1775:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1776:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1777:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1778:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Read16
1779:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1780:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1781:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1782:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function simplifies getting results from the ADC when only a
1783:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  single reading is required. When called, it will start ADC
1784:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversion and return the result. This is a blocking function and will
1786:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  not return until the result is ready.
1787:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1788:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1789:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *   void
1790:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 75


1791:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1792:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int16:  ADC result.
1793:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1794:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1795:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int16 SIGMA_A_D_Read16(void) 
1796:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 2424              		.loc 1 1796 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 8
 2427              		@ frame_needed = 1, uses_anonymous_args = 0
 2428 0000 80B5     		push	{r7, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 7, -8
 2431              		.cfi_offset 14, -4
 2432 0002 82B0     		sub	sp, sp, #8
 2433              		.cfi_def_cfa_offset 16
 2434 0004 00AF     		add	r7, sp, #0
 2435              		.cfi_def_cfa_register 7
1797:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int16 result;
1798:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1799:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear pending conversion done status */
1800:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_SR_REG |= SIGMA_A_D_DEC_INTR_CLEAR;
 2436              		.loc 1 1800 0
 2437 0006 0C4A     		ldr	r2, .L140
 2438 0008 0B4B     		ldr	r3, .L140
 2439 000a 1B78     		ldrb	r3, [r3]
 2440 000c DBB2     		uxtb	r3, r3
 2441 000e 43F00403 		orr	r3, r3, #4
 2442 0012 DBB2     		uxtb	r3, r3
 2443 0014 1370     		strb	r3, [r2]
1801:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StartConvert();
 2444              		.loc 1 1801 0
 2445 0016 FFF7FEFF 		bl	SIGMA_A_D_StartConvert
1802:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     (void)SIGMA_A_D_IsEndConversion(SIGMA_A_D_WAIT_FOR_RESULT);
 2446              		.loc 1 1802 0
 2447 001a 0020     		movs	r0, #0
 2448 001c FFF7FEFF 		bl	SIGMA_A_D_IsEndConversion
1803:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      result = SIGMA_A_D_GetResult16();
 2449              		.loc 1 1803 0
 2450 0020 FFF7FEFF 		bl	SIGMA_A_D_GetResult16
 2451 0024 0346     		mov	r3, r0
 2452 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1804:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StopConvert();
 2453              		.loc 1 1804 0
 2454 0028 FFF7FEFF 		bl	SIGMA_A_D_StopConvert
1805:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
1806:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      return(result);
 2455              		.loc 1 1806 0
 2456 002c FB88     		ldrh	r3, [r7, #6]
 2457 002e 1BB2     		sxth	r3, r3
1807:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2458              		.loc 1 1807 0
 2459 0030 1846     		mov	r0, r3
 2460 0032 0837     		adds	r7, r7, #8
 2461              		.cfi_def_cfa_offset 8
 2462 0034 BD46     		mov	sp, r7
 2463              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 76


 2464              		@ sp needed
 2465 0036 80BD     		pop	{r7, pc}
 2466              	.L141:
 2467              		.align	2
 2468              	.L140:
 2469 0038 014E0040 		.word	1073761793
 2470              		.cfi_endproc
 2471              	.LFE24:
 2472              		.size	SIGMA_A_D_Read16, .-SIGMA_A_D_Read16
 2473              		.section	.text.SIGMA_A_D_Read32,"ax",%progbits
 2474              		.align	2
 2475              		.global	SIGMA_A_D_Read32
 2476              		.thumb
 2477              		.thumb_func
 2478              		.type	SIGMA_A_D_Read32, %function
 2479              	SIGMA_A_D_Read32:
 2480              	.LFB25:
1808:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1809:.\Generated_Source\PSoC5/SIGMA_A_D.c **** 
1810:.\Generated_Source\PSoC5/SIGMA_A_D.c **** /*******************************************************************************
1811:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Function Name: SIGMA_A_D_Read32
1812:.\Generated_Source\PSoC5/SIGMA_A_D.c **** ********************************************************************************
1813:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1814:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Summary:
1815:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  This function simplifies getting results from the ADC when only a
1816:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  single reading is required. When called, it will start ADC
1817:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  conversion and return the result. This is a blocking function and will
1819:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  not return until the result is ready.
1820:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1821:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Parameters:
1822:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  None
1823:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1824:.\Generated_Source\PSoC5/SIGMA_A_D.c **** * Return:
1825:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *  int32: ADC result.
1826:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *
1827:.\Generated_Source\PSoC5/SIGMA_A_D.c **** *******************************************************************************/
1828:.\Generated_Source\PSoC5/SIGMA_A_D.c **** int32 SIGMA_A_D_Read32(void) 
1829:.\Generated_Source\PSoC5/SIGMA_A_D.c **** {
 2481              		.loc 1 1829 0
 2482              		.cfi_startproc
 2483              		@ args = 0, pretend = 0, frame = 8
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485 0000 80B5     		push	{r7, lr}
 2486              		.cfi_def_cfa_offset 8
 2487              		.cfi_offset 7, -8
 2488              		.cfi_offset 14, -4
 2489 0002 82B0     		sub	sp, sp, #8
 2490              		.cfi_def_cfa_offset 16
 2491 0004 00AF     		add	r7, sp, #0
 2492              		.cfi_def_cfa_register 7
1830:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     int32 result;
1831:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
1832:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     /* Clear pending conversion done status */
1833:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_DEC_SR_REG |= SIGMA_A_D_DEC_INTR_CLEAR;
 2493              		.loc 1 1833 0
 2494 0006 0B4A     		ldr	r2, .L144
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 77


 2495 0008 0A4B     		ldr	r3, .L144
 2496 000a 1B78     		ldrb	r3, [r3]
 2497 000c DBB2     		uxtb	r3, r3
 2498 000e 43F00403 		orr	r3, r3, #4
 2499 0012 DBB2     		uxtb	r3, r3
 2500 0014 1370     		strb	r3, [r2]
1834:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StartConvert();
 2501              		.loc 1 1834 0
 2502 0016 FFF7FEFF 		bl	SIGMA_A_D_StartConvert
1835:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     (void)SIGMA_A_D_IsEndConversion(SIGMA_A_D_WAIT_FOR_RESULT);
 2503              		.loc 1 1835 0
 2504 001a 0020     		movs	r0, #0
 2505 001c FFF7FEFF 		bl	SIGMA_A_D_IsEndConversion
1836:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      result = SIGMA_A_D_GetResult32();
 2506              		.loc 1 1836 0
 2507 0020 FFF7FEFF 		bl	SIGMA_A_D_GetResult32
 2508 0024 7860     		str	r0, [r7, #4]
1837:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     SIGMA_A_D_StopConvert();
 2509              		.loc 1 1837 0
 2510 0026 FFF7FEFF 		bl	SIGMA_A_D_StopConvert
1838:.\Generated_Source\PSoC5/SIGMA_A_D.c ****     
1839:.\Generated_Source\PSoC5/SIGMA_A_D.c ****      return(result);
 2511              		.loc 1 1839 0
 2512 002a 7B68     		ldr	r3, [r7, #4]
1840:.\Generated_Source\PSoC5/SIGMA_A_D.c **** }
 2513              		.loc 1 1840 0
 2514 002c 1846     		mov	r0, r3
 2515 002e 0837     		adds	r7, r7, #8
 2516              		.cfi_def_cfa_offset 8
 2517 0030 BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0032 80BD     		pop	{r7, pc}
 2521              	.L145:
 2522              		.align	2
 2523              	.L144:
 2524 0034 014E0040 		.word	1073761793
 2525              		.cfi_endproc
 2526              	.LFE25:
 2527              		.size	SIGMA_A_D_Read32, .-SIGMA_A_D_Read32
 2528              		.text
 2529              	.Letext0:
 2530              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 2531              		.file 3 ".\\Generated_Source\\PSoC5\\SIGMA_A_D.h"
 2532              		.section	.debug_info,"",%progbits
 2533              	.Ldebug_info0:
 2534 0000 21070000 		.4byte	0x721
 2535 0004 0400     		.2byte	0x4
 2536 0006 00000000 		.4byte	.Ldebug_abbrev0
 2537 000a 04       		.byte	0x4
 2538 000b 01       		.uleb128 0x1
 2539 000c EF020000 		.4byte	.LASF89
 2540 0010 01       		.byte	0x1
 2541 0011 69040000 		.4byte	.LASF90
 2542 0015 34020000 		.4byte	.LASF91
 2543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2544 001d 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 78


 2545 0021 00000000 		.4byte	.Ldebug_line0
 2546 0025 02       		.uleb128 0x2
 2547 0026 01       		.byte	0x1
 2548 0027 06       		.byte	0x6
 2549 0028 AD000000 		.4byte	.LASF0
 2550 002c 02       		.uleb128 0x2
 2551 002d 01       		.byte	0x1
 2552 002e 08       		.byte	0x8
 2553 002f C6030000 		.4byte	.LASF1
 2554 0033 02       		.uleb128 0x2
 2555 0034 02       		.byte	0x2
 2556 0035 05       		.byte	0x5
 2557 0036 D4030000 		.4byte	.LASF2
 2558 003a 02       		.uleb128 0x2
 2559 003b 02       		.byte	0x2
 2560 003c 07       		.byte	0x7
 2561 003d E2010000 		.4byte	.LASF3
 2562 0041 02       		.uleb128 0x2
 2563 0042 04       		.byte	0x4
 2564 0043 05       		.byte	0x5
 2565 0044 08010000 		.4byte	.LASF4
 2566 0048 02       		.uleb128 0x2
 2567 0049 04       		.byte	0x4
 2568 004a 07       		.byte	0x7
 2569 004b A2010000 		.4byte	.LASF5
 2570 004f 02       		.uleb128 0x2
 2571 0050 08       		.byte	0x8
 2572 0051 05       		.byte	0x5
 2573 0052 9F000000 		.4byte	.LASF6
 2574 0056 02       		.uleb128 0x2
 2575 0057 08       		.byte	0x8
 2576 0058 07       		.byte	0x7
 2577 0059 5F000000 		.4byte	.LASF7
 2578 005d 03       		.uleb128 0x3
 2579 005e 04       		.byte	0x4
 2580 005f 05       		.byte	0x5
 2581 0060 696E7400 		.ascii	"int\000"
 2582 0064 02       		.uleb128 0x2
 2583 0065 04       		.byte	0x4
 2584 0066 07       		.byte	0x7
 2585 0067 8E010000 		.4byte	.LASF8
 2586 006b 04       		.uleb128 0x4
 2587 006c 17010000 		.4byte	.LASF9
 2588 0070 02       		.byte	0x2
 2589 0071 9201     		.2byte	0x192
 2590 0073 2C000000 		.4byte	0x2c
 2591 0077 04       		.uleb128 0x4
 2592 0078 00000000 		.4byte	.LASF10
 2593 007c 02       		.byte	0x2
 2594 007d 9301     		.2byte	0x193
 2595 007f 3A000000 		.4byte	0x3a
 2596 0083 04       		.uleb128 0x4
 2597 0084 50010000 		.4byte	.LASF11
 2598 0088 02       		.byte	0x2
 2599 0089 9401     		.2byte	0x194
 2600 008b 48000000 		.4byte	0x48
 2601 008f 04       		.uleb128 0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 79


 2602 0090 1E020000 		.4byte	.LASF12
 2603 0094 02       		.byte	0x2
 2604 0095 9501     		.2byte	0x195
 2605 0097 25000000 		.4byte	0x25
 2606 009b 04       		.uleb128 0x4
 2607 009c 5F050000 		.4byte	.LASF13
 2608 00a0 02       		.byte	0x2
 2609 00a1 9601     		.2byte	0x196
 2610 00a3 33000000 		.4byte	0x33
 2611 00a7 04       		.uleb128 0x4
 2612 00a8 D9000000 		.4byte	.LASF14
 2613 00ac 02       		.byte	0x2
 2614 00ad 9701     		.2byte	0x197
 2615 00af 41000000 		.4byte	0x41
 2616 00b3 04       		.uleb128 0x4
 2617 00b4 B0020000 		.4byte	.LASF15
 2618 00b8 02       		.byte	0x2
 2619 00b9 9801     		.2byte	0x198
 2620 00bb BF000000 		.4byte	0xbf
 2621 00bf 02       		.uleb128 0x2
 2622 00c0 04       		.byte	0x4
 2623 00c1 04       		.byte	0x4
 2624 00c2 8C030000 		.4byte	.LASF16
 2625 00c6 02       		.uleb128 0x2
 2626 00c7 08       		.byte	0x8
 2627 00c8 04       		.byte	0x4
 2628 00c9 43010000 		.4byte	.LASF17
 2629 00cd 02       		.uleb128 0x2
 2630 00ce 01       		.byte	0x1
 2631 00cf 08       		.byte	0x8
 2632 00d0 51040000 		.4byte	.LASF18
 2633 00d4 04       		.uleb128 0x4
 2634 00d5 A3030000 		.4byte	.LASF19
 2635 00d9 02       		.byte	0x2
 2636 00da 3C02     		.2byte	0x23c
 2637 00dc E0000000 		.4byte	0xe0
 2638 00e0 05       		.uleb128 0x5
 2639 00e1 6B000000 		.4byte	0x6b
 2640 00e5 04       		.uleb128 0x4
 2641 00e6 11010000 		.4byte	.LASF20
 2642 00ea 02       		.byte	0x2
 2643 00eb 3D02     		.2byte	0x23d
 2644 00ed F1000000 		.4byte	0xf1
 2645 00f1 05       		.uleb128 0x5
 2646 00f2 77000000 		.4byte	0x77
 2647 00f6 04       		.uleb128 0x4
 2648 00f7 AA020000 		.4byte	.LASF21
 2649 00fb 02       		.byte	0x2
 2650 00fc 3E02     		.2byte	0x23e
 2651 00fe 02010000 		.4byte	0x102
 2652 0102 05       		.uleb128 0x5
 2653 0103 83000000 		.4byte	0x83
 2654 0107 02       		.uleb128 0x2
 2655 0108 04       		.byte	0x4
 2656 0109 07       		.byte	0x7
 2657 010a B8020000 		.4byte	.LASF22
 2658 010e 06       		.uleb128 0x6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 80


 2659 010f 04       		.byte	0x4
 2660 0110 03       		.byte	0x3
 2661 0111 2F       		.byte	0x2f
 2662 0112 2F010000 		.4byte	0x12f
 2663 0116 07       		.uleb128 0x7
 2664 0117 5A000000 		.4byte	.LASF23
 2665 011b 03       		.byte	0x3
 2666 011c 31       		.byte	0x31
 2667 011d 77000000 		.4byte	0x77
 2668 0121 00       		.byte	0
 2669 0122 07       		.uleb128 0x7
 2670 0123 64040000 		.4byte	.LASF24
 2671 0127 03       		.byte	0x3
 2672 0128 32       		.byte	0x32
 2673 0129 6B000000 		.4byte	0x6b
 2674 012d 02       		.byte	0x2
 2675 012e 00       		.byte	0
 2676 012f 08       		.uleb128 0x8
 2677 0130 8E020000 		.4byte	.LASF25
 2678 0134 03       		.byte	0x3
 2679 0135 33       		.byte	0x33
 2680 0136 0E010000 		.4byte	0x10e
 2681 013a 09       		.uleb128 0x9
 2682 013b 1D010000 		.4byte	.LASF28
 2683 013f 01       		.byte	0x1
 2684 0140 5B       		.byte	0x5b
 2685 0141 00000000 		.4byte	.LFB0
 2686 0145 1C010000 		.4byte	.LFE0-.LFB0
 2687 0149 01       		.uleb128 0x1
 2688 014a 9C       		.byte	0x9c
 2689 014b 0A       		.uleb128 0xa
 2690 014c E6030000 		.4byte	.LASF30
 2691 0150 01       		.byte	0x1
 2692 0151 B8       		.byte	0xb8
 2693 0152 00000000 		.4byte	.LFB1
 2694 0156 58010000 		.4byte	.LFE1-.LFB1
 2695 015a 01       		.uleb128 0x1
 2696 015b 9C       		.byte	0x9c
 2697 015c 7D010000 		.4byte	0x17d
 2698 0160 0B       		.uleb128 0xb
 2699 0161 5D040000 		.4byte	.LASF26
 2700 0165 01       		.byte	0x1
 2701 0166 BA       		.byte	0xba
 2702 0167 6B000000 		.4byte	0x6b
 2703 016b 02       		.uleb128 0x2
 2704 016c 91       		.byte	0x91
 2705 016d 76       		.sleb128 -10
 2706 016e 0B       		.uleb128 0xb
 2707 016f 09050000 		.4byte	.LASF27
 2708 0173 01       		.byte	0x1
 2709 0174 BB       		.byte	0xbb
 2710 0175 6B000000 		.4byte	0x6b
 2711 0179 02       		.uleb128 0x2
 2712 017a 91       		.byte	0x91
 2713 017b 77       		.sleb128 -9
 2714 017c 00       		.byte	0
 2715 017d 0C       		.uleb128 0xc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 81


 2716 017e 92050000 		.4byte	.LASF29
 2717 0182 01       		.byte	0x1
 2718 0183 4901     		.2byte	0x149
 2719 0185 00000000 		.4byte	.LFB2
 2720 0189 30000000 		.4byte	.LFE2-.LFB2
 2721 018d 01       		.uleb128 0x1
 2722 018e 9C       		.byte	0x9c
 2723 018f 0D       		.uleb128 0xd
 2724 0190 DF040000 		.4byte	.LASF31
 2725 0194 01       		.byte	0x1
 2726 0195 6A01     		.2byte	0x16a
 2727 0197 00000000 		.4byte	.LFB3
 2728 019b 7C010000 		.4byte	.LFE3-.LFB3
 2729 019f 01       		.uleb128 0x1
 2730 01a0 9C       		.byte	0x9c
 2731 01a1 B5010000 		.4byte	0x1b5
 2732 01a5 0E       		.uleb128 0xe
 2733 01a6 09050000 		.4byte	.LASF27
 2734 01aa 01       		.byte	0x1
 2735 01ab 6C01     		.2byte	0x16c
 2736 01ad 6B000000 		.4byte	0x6b
 2737 01b1 02       		.uleb128 0x2
 2738 01b2 91       		.byte	0x91
 2739 01b3 77       		.sleb128 -9
 2740 01b4 00       		.byte	0
 2741 01b5 0F       		.uleb128 0xf
 2742 01b6 C1020000 		.4byte	.LASF32
 2743 01ba 01       		.byte	0x1
 2744 01bb AD01     		.2byte	0x1ad
 2745 01bd 00000000 		.4byte	.LFB4
 2746 01c1 3C000000 		.4byte	.LFE4-.LFB4
 2747 01c5 01       		.uleb128 0x1
 2748 01c6 9C       		.byte	0x9c
 2749 01c7 EA010000 		.4byte	0x1ea
 2750 01cb 10       		.uleb128 0x10
 2751 01cc 87030000 		.4byte	.LASF35
 2752 01d0 01       		.byte	0x1
 2753 01d1 AD01     		.2byte	0x1ad
 2754 01d3 6B000000 		.4byte	0x6b
 2755 01d7 02       		.uleb128 0x2
 2756 01d8 91       		.byte	0x91
 2757 01d9 6F       		.sleb128 -17
 2758 01da 0E       		.uleb128 0xe
 2759 01db 23020000 		.4byte	.LASF33
 2760 01df 01       		.byte	0x1
 2761 01e0 AF01     		.2byte	0x1af
 2762 01e2 6B000000 		.4byte	0x6b
 2763 01e6 02       		.uleb128 0x2
 2764 01e7 91       		.byte	0x91
 2765 01e8 77       		.sleb128 -9
 2766 01e9 00       		.byte	0
 2767 01ea 0F       		.uleb128 0xf
 2768 01eb 2C010000 		.4byte	.LASF34
 2769 01ef 01       		.byte	0x1
 2770 01f0 D101     		.2byte	0x1d1
 2771 01f2 00000000 		.4byte	.LFB5
 2772 01f6 38000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 82


 2773 01fa 01       		.uleb128 0x1
 2774 01fb 9C       		.byte	0x9c
 2775 01fc 1F020000 		.4byte	0x21f
 2776 0200 10       		.uleb128 0x10
 2777 0201 7D030000 		.4byte	.LASF36
 2778 0205 01       		.byte	0x1
 2779 0206 D101     		.2byte	0x1d1
 2780 0208 6B000000 		.4byte	0x6b
 2781 020c 02       		.uleb128 0x2
 2782 020d 91       		.byte	0x91
 2783 020e 6F       		.sleb128 -17
 2784 020f 0E       		.uleb128 0xe
 2785 0210 23020000 		.4byte	.LASF33
 2786 0214 01       		.byte	0x1
 2787 0215 D301     		.2byte	0x1d3
 2788 0217 6B000000 		.4byte	0x6b
 2789 021b 02       		.uleb128 0x2
 2790 021c 91       		.byte	0x91
 2791 021d 77       		.sleb128 -9
 2792 021e 00       		.byte	0
 2793 021f 11       		.uleb128 0x11
 2794 0220 80050000 		.4byte	.LASF40
 2795 0224 01       		.byte	0x1
 2796 0225 F901     		.2byte	0x1f9
 2797 0227 6B000000 		.4byte	0x6b
 2798 022b 00000000 		.4byte	.LFB6
 2799 022f B4000000 		.4byte	.LFE6-.LFB6
 2800 0233 01       		.uleb128 0x1
 2801 0234 9C       		.byte	0x9c
 2802 0235 76020000 		.4byte	0x276
 2803 0239 10       		.uleb128 0x10
 2804 023a 3B050000 		.4byte	.LASF37
 2805 023e 01       		.byte	0x1
 2806 023f F901     		.2byte	0x1f9
 2807 0241 B3000000 		.4byte	0xb3
 2808 0245 02       		.uleb128 0x2
 2809 0246 91       		.byte	0x91
 2810 0247 6C       		.sleb128 -20
 2811 0248 0E       		.uleb128 0xe
 2812 0249 23020000 		.4byte	.LASF33
 2813 024d 01       		.byte	0x1
 2814 024e FB01     		.2byte	0x1fb
 2815 0250 77000000 		.4byte	0x77
 2816 0254 02       		.uleb128 0x2
 2817 0255 91       		.byte	0x91
 2818 0256 74       		.sleb128 -12
 2819 0257 0E       		.uleb128 0xe
 2820 0258 1A050000 		.4byte	.LASF38
 2821 025c 01       		.byte	0x1
 2822 025d FC01     		.2byte	0x1fc
 2823 025f 6B000000 		.4byte	0x6b
 2824 0263 02       		.uleb128 0x2
 2825 0264 91       		.byte	0x91
 2826 0265 77       		.sleb128 -9
 2827 0266 0E       		.uleb128 0xe
 2828 0267 AC040000 		.4byte	.LASF39
 2829 026b 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 83


 2830 026c FD01     		.2byte	0x1fd
 2831 026e B3000000 		.4byte	0xb3
 2832 0272 02       		.uleb128 0x2
 2833 0273 91       		.byte	0x91
 2834 0274 70       		.sleb128 -16
 2835 0275 00       		.byte	0
 2836 0276 12       		.uleb128 0x12
 2837 0277 A8030000 		.4byte	.LASF41
 2838 027b 01       		.byte	0x1
 2839 027c 2802     		.2byte	0x228
 2840 027e 77000000 		.4byte	0x77
 2841 0282 00000000 		.4byte	.LFB7
 2842 0286 3C000000 		.4byte	.LFE7-.LFB7
 2843 028a 01       		.uleb128 0x1
 2844 028b 9C       		.byte	0x9c
 2845 028c AF020000 		.4byte	0x2af
 2846 0290 0E       		.uleb128 0xe
 2847 0291 56040000 		.4byte	.LASF42
 2848 0295 01       		.byte	0x1
 2849 0296 2A02     		.2byte	0x22a
 2850 0298 6B000000 		.4byte	0x6b
 2851 029c 02       		.uleb128 0x2
 2852 029d 91       		.byte	0x91
 2853 029e 75       		.sleb128 -11
 2854 029f 0E       		.uleb128 0xe
 2855 02a0 2A020000 		.4byte	.LASF43
 2856 02a4 01       		.byte	0x1
 2857 02a5 2B02     		.2byte	0x22b
 2858 02a7 77000000 		.4byte	0x77
 2859 02ab 02       		.uleb128 0x2
 2860 02ac 91       		.byte	0x91
 2861 02ad 76       		.sleb128 -10
 2862 02ae 00       		.byte	0
 2863 02af 13       		.uleb128 0x13
 2864 02b0 DF000000 		.4byte	.LASF44
 2865 02b4 01       		.byte	0x1
 2866 02b5 4A02     		.2byte	0x24a
 2867 02b7 00000000 		.4byte	.LFB8
 2868 02bb 20000000 		.4byte	.LFE8-.LFB8
 2869 02bf 01       		.uleb128 0x1
 2870 02c0 9C       		.byte	0x9c
 2871 02c1 13       		.uleb128 0x13
 2872 02c2 8E040000 		.4byte	.LASF45
 2873 02c6 01       		.byte	0x1
 2874 02c7 6102     		.2byte	0x261
 2875 02c9 00000000 		.4byte	.LFB9
 2876 02cd 20000000 		.4byte	.LFE9-.LFB9
 2877 02d1 01       		.uleb128 0x1
 2878 02d2 9C       		.byte	0x9c
 2879 02d3 12       		.uleb128 0x12
 2880 02d4 21050000 		.4byte	.LASF46
 2881 02d8 01       		.byte	0x1
 2882 02d9 8402     		.2byte	0x284
 2883 02db 6B000000 		.4byte	0x6b
 2884 02df 00000000 		.4byte	.LFB10
 2885 02e3 50000000 		.4byte	.LFE10-.LFB10
 2886 02e7 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 84


 2887 02e8 9C       		.byte	0x9c
 2888 02e9 0C030000 		.4byte	0x30c
 2889 02ed 10       		.uleb128 0x10
 2890 02ee 6E010000 		.4byte	.LASF47
 2891 02f2 01       		.byte	0x1
 2892 02f3 8402     		.2byte	0x284
 2893 02f5 6B000000 		.4byte	0x6b
 2894 02f9 02       		.uleb128 0x2
 2895 02fa 91       		.byte	0x91
 2896 02fb 6F       		.sleb128 -17
 2897 02fc 0E       		.uleb128 0xe
 2898 02fd 1A050000 		.4byte	.LASF38
 2899 0301 01       		.byte	0x1
 2900 0302 8602     		.2byte	0x286
 2901 0304 6B000000 		.4byte	0x6b
 2902 0308 02       		.uleb128 0x2
 2903 0309 91       		.byte	0x91
 2904 030a 77       		.sleb128 -9
 2905 030b 00       		.byte	0
 2906 030c 12       		.uleb128 0x12
 2907 030d 09020000 		.4byte	.LASF48
 2908 0311 01       		.byte	0x1
 2909 0312 B302     		.2byte	0x2b3
 2910 0314 8F000000 		.4byte	0x8f
 2911 0318 00000000 		.4byte	.LFB11
 2912 031c 68000000 		.4byte	.LFE11-.LFB11
 2913 0320 01       		.uleb128 0x1
 2914 0321 9C       		.byte	0x9c
 2915 0322 45030000 		.4byte	0x345
 2916 0326 0E       		.uleb128 0xe
 2917 0327 A2050000 		.4byte	.LASF49
 2918 032b 01       		.byte	0x1
 2919 032c B502     		.2byte	0x2b5
 2920 032e 8F000000 		.4byte	0x8f
 2921 0332 02       		.uleb128 0x2
 2922 0333 91       		.byte	0x91
 2923 0334 76       		.sleb128 -10
 2924 0335 0E       		.uleb128 0xe
 2925 0336 7D030000 		.4byte	.LASF36
 2926 033a 01       		.byte	0x1
 2927 033b B602     		.2byte	0x2b6
 2928 033d 6B000000 		.4byte	0x6b
 2929 0341 02       		.uleb128 0x2
 2930 0342 91       		.byte	0x91
 2931 0343 77       		.sleb128 -9
 2932 0344 00       		.byte	0
 2933 0345 12       		.uleb128 0x12
 2934 0346 CC010000 		.4byte	.LASF50
 2935 034a 01       		.byte	0x1
 2936 034b E902     		.2byte	0x2e9
 2937 034d 9B000000 		.4byte	0x9b
 2938 0351 00000000 		.4byte	.LFB12
 2939 0355 7C000000 		.4byte	.LFE12-.LFB12
 2940 0359 01       		.uleb128 0x1
 2941 035a 9C       		.byte	0x9c
 2942 035b 7E030000 		.4byte	0x37e
 2943 035f 0E       		.uleb128 0xe
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 85


 2944 0360 A2050000 		.4byte	.LASF49
 2945 0364 01       		.byte	0x1
 2946 0365 EB02     		.2byte	0x2eb
 2947 0367 77000000 		.4byte	0x77
 2948 036b 02       		.uleb128 0x2
 2949 036c 91       		.byte	0x91
 2950 036d 76       		.sleb128 -10
 2951 036e 0E       		.uleb128 0xe
 2952 036f 7D030000 		.4byte	.LASF36
 2953 0373 01       		.byte	0x1
 2954 0374 EC02     		.2byte	0x2ec
 2955 0376 6B000000 		.4byte	0x6b
 2956 037a 02       		.uleb128 0x2
 2957 037b 91       		.byte	0x91
 2958 037c 75       		.sleb128 -11
 2959 037d 00       		.byte	0
 2960 037e 12       		.uleb128 0x12
 2961 037f D9020000 		.4byte	.LASF51
 2962 0383 01       		.byte	0x1
 2963 0384 2503     		.2byte	0x325
 2964 0386 A7000000 		.4byte	0xa7
 2965 038a 00000000 		.4byte	.LFB13
 2966 038e A8000000 		.4byte	.LFE13-.LFB13
 2967 0392 01       		.uleb128 0x1
 2968 0393 9C       		.byte	0x9c
 2969 0394 B7030000 		.4byte	0x3b7
 2970 0398 0E       		.uleb128 0xe
 2971 0399 A2050000 		.4byte	.LASF49
 2972 039d 01       		.byte	0x1
 2973 039e 2703     		.2byte	0x327
 2974 03a0 83000000 		.4byte	0x83
 2975 03a4 02       		.uleb128 0x2
 2976 03a5 91       		.byte	0x91
 2977 03a6 74       		.sleb128 -12
 2978 03a7 0E       		.uleb128 0xe
 2979 03a8 7D030000 		.4byte	.LASF36
 2980 03ac 01       		.byte	0x1
 2981 03ad 2803     		.2byte	0x328
 2982 03af 6B000000 		.4byte	0x6b
 2983 03b3 02       		.uleb128 0x2
 2984 03b4 91       		.byte	0x91
 2985 03b5 73       		.sleb128 -13
 2986 03b6 00       		.byte	0
 2987 03b7 0F       		.uleb128 0xf
 2988 03b8 F5010000 		.4byte	.LASF52
 2989 03bc 01       		.byte	0x1
 2990 03bd 8203     		.2byte	0x382
 2991 03bf 00000000 		.4byte	.LFB14
 2992 03c3 1C000000 		.4byte	.LFE14-.LFB14
 2993 03c7 01       		.uleb128 0x1
 2994 03c8 9C       		.byte	0x9c
 2995 03c9 DD030000 		.4byte	0x3dd
 2996 03cd 10       		.uleb128 0x10
 2997 03ce B5040000 		.4byte	.LASF53
 2998 03d2 01       		.byte	0x1
 2999 03d3 8203     		.2byte	0x382
 3000 03d5 A7000000 		.4byte	0xa7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 86


 3001 03d9 02       		.uleb128 0x2
 3002 03da 91       		.byte	0x91
 3003 03db 74       		.sleb128 -12
 3004 03dc 00       		.byte	0
 3005 03dd 0F       		.uleb128 0xf
 3006 03de 48000000 		.4byte	.LASF54
 3007 03e2 01       		.byte	0x1
 3008 03e3 A503     		.2byte	0x3a5
 3009 03e5 00000000 		.4byte	.LFB15
 3010 03e9 1C000000 		.4byte	.LFE15-.LFB15
 3011 03ed 01       		.uleb128 0x1
 3012 03ee 9C       		.byte	0x9c
 3013 03ef 03040000 		.4byte	0x403
 3014 03f3 10       		.uleb128 0x10
 3015 03f4 07000000 		.4byte	.LASF55
 3016 03f8 01       		.byte	0x1
 3017 03f9 A503     		.2byte	0x3a5
 3018 03fb A7000000 		.4byte	0xa7
 3019 03ff 02       		.uleb128 0x2
 3020 0400 91       		.byte	0x91
 3021 0401 74       		.sleb128 -12
 3022 0402 00       		.byte	0
 3023 0403 12       		.uleb128 0x12
 3024 0404 11040000 		.4byte	.LASF56
 3025 0408 01       		.byte	0x1
 3026 0409 C003     		.2byte	0x3c0
 3027 040b 9B000000 		.4byte	0x9b
 3028 040f 00000000 		.4byte	.LFB16
 3029 0413 40000000 		.4byte	.LFE16-.LFB16
 3030 0417 01       		.uleb128 0x1
 3031 0418 9C       		.byte	0x9c
 3032 0419 3C040000 		.4byte	0x43c
 3033 041d 10       		.uleb128 0x10
 3034 041e EE040000 		.4byte	.LASF57
 3035 0422 01       		.byte	0x1
 3036 0423 C003     		.2byte	0x3c0
 3037 0425 A7000000 		.4byte	0xa7
 3038 0429 02       		.uleb128 0x2
 3039 042a 91       		.byte	0x91
 3040 042b 6C       		.sleb128 -20
 3041 042c 0E       		.uleb128 0xe
 3042 042d 87020000 		.4byte	.LASF58
 3043 0431 01       		.byte	0x1
 3044 0432 C303     		.2byte	0x3c3
 3045 0434 9B000000 		.4byte	0x9b
 3046 0438 02       		.uleb128 0x2
 3047 0439 91       		.byte	0x91
 3048 043a 76       		.sleb128 -10
 3049 043b 00       		.byte	0
 3050 043c 11       		.uleb128 0x11
 3051 043d 46050000 		.4byte	.LASF59
 3052 0441 01       		.byte	0x1
 3053 0442 FD03     		.2byte	0x3fd
 3054 0444 B3000000 		.4byte	0xb3
 3055 0448 00000000 		.4byte	.LFB17
 3056 044c 44000000 		.4byte	.LFE17-.LFB17
 3057 0450 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 87


 3058 0451 9C       		.byte	0x9c
 3059 0452 75040000 		.4byte	0x475
 3060 0456 10       		.uleb128 0x10
 3061 0457 EE040000 		.4byte	.LASF57
 3062 045b 01       		.byte	0x1
 3063 045c FD03     		.2byte	0x3fd
 3064 045e A7000000 		.4byte	0xa7
 3065 0462 02       		.uleb128 0x2
 3066 0463 91       		.byte	0x91
 3067 0464 64       		.sleb128 -28
 3068 0465 0E       		.uleb128 0xe
 3069 0466 4A010000 		.4byte	.LASF60
 3070 046a 01       		.byte	0x1
 3071 046b 0004     		.2byte	0x400
 3072 046d B3000000 		.4byte	0xb3
 3073 0471 02       		.uleb128 0x2
 3074 0472 91       		.byte	0x91
 3075 0473 6C       		.sleb128 -20
 3076 0474 00       		.byte	0
 3077 0475 12       		.uleb128 0x12
 3078 0476 37040000 		.4byte	.LASF61
 3079 047a 01       		.byte	0x1
 3080 047b 3F04     		.2byte	0x43f
 3081 047d A7000000 		.4byte	0xa7
 3082 0481 00000000 		.4byte	.LFB18
 3083 0485 B8000000 		.4byte	.LFE18-.LFB18
 3084 0489 01       		.uleb128 0x1
 3085 048a 9C       		.byte	0x9c
 3086 048b DB040000 		.4byte	0x4db
 3087 048f 10       		.uleb128 0x10
 3088 0490 EE040000 		.4byte	.LASF57
 3089 0494 01       		.byte	0x1
 3090 0495 3F04     		.2byte	0x43f
 3091 0497 A7000000 		.4byte	0xa7
 3092 049b 02       		.uleb128 0x2
 3093 049c 91       		.byte	0x91
 3094 049d 64       		.sleb128 -28
 3095 049e 0E       		.uleb128 0xe
 3096 049f 9B010000 		.4byte	.LASF62
 3097 04a3 01       		.byte	0x1
 3098 04a4 4204     		.2byte	0x442
 3099 04a6 A7000000 		.4byte	0xa7
 3100 04aa 02       		.uleb128 0x2
 3101 04ab 91       		.byte	0x91
 3102 04ac 68       		.sleb128 -24
 3103 04ad 0E       		.uleb128 0xe
 3104 04ae 2B040000 		.4byte	.LASF63
 3105 04b2 01       		.byte	0x1
 3106 04b3 4304     		.2byte	0x443
 3107 04b5 A7000000 		.4byte	0xa7
 3108 04b9 02       		.uleb128 0x2
 3109 04ba 91       		.byte	0x91
 3110 04bb 74       		.sleb128 -12
 3111 04bc 0E       		.uleb128 0xe
 3112 04bd 31040000 		.4byte	.LASF64
 3113 04c1 01       		.byte	0x1
 3114 04c2 4404     		.2byte	0x444
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 88


 3115 04c4 A7000000 		.4byte	0xa7
 3116 04c8 02       		.uleb128 0x2
 3117 04c9 91       		.byte	0x91
 3118 04ca 70       		.sleb128 -16
 3119 04cb 0E       		.uleb128 0xe
 3120 04cc 06040000 		.4byte	.LASF65
 3121 04d0 01       		.byte	0x1
 3122 04d1 4504     		.2byte	0x445
 3123 04d3 6B000000 		.4byte	0x6b
 3124 04d7 02       		.uleb128 0x2
 3125 04d8 91       		.byte	0x91
 3126 04d9 6F       		.sleb128 -17
 3127 04da 00       		.byte	0
 3128 04db 14       		.uleb128 0x14
 3129 04dc 72020000 		.4byte	.LASF68
 3130 04e0 01       		.byte	0x1
 3131 04e1 DA04     		.2byte	0x4da
 3132 04e3 00000000 		.4byte	.LFB19
 3133 04e7 64010000 		.4byte	.LFE19-.LFB19
 3134 04eb 01       		.uleb128 0x1
 3135 04ec 9C       		.byte	0x9c
 3136 04ed 01050000 		.4byte	0x501
 3137 04f1 10       		.uleb128 0x10
 3138 04f2 5D040000 		.4byte	.LASF26
 3139 04f6 01       		.byte	0x1
 3140 04f7 DA04     		.2byte	0x4da
 3141 04f9 6B000000 		.4byte	0x6b
 3142 04fd 02       		.uleb128 0x2
 3143 04fe 91       		.byte	0x91
 3144 04ff 77       		.sleb128 -9
 3145 0500 00       		.byte	0
 3146 0501 0D       		.uleb128 0xd
 3147 0502 2A000000 		.4byte	.LASF66
 3148 0506 01       		.byte	0x1
 3149 0507 1006     		.2byte	0x610
 3150 0509 00000000 		.4byte	.LFB20
 3151 050d 90000000 		.4byte	.LFE20-.LFB20
 3152 0511 01       		.uleb128 0x1
 3153 0512 9C       		.byte	0x9c
 3154 0513 36050000 		.4byte	0x536
 3155 0517 10       		.uleb128 0x10
 3156 0518 5D040000 		.4byte	.LASF26
 3157 051c 01       		.byte	0x1
 3158 051d 1006     		.2byte	0x610
 3159 051f 6B000000 		.4byte	0x6b
 3160 0523 02       		.uleb128 0x2
 3161 0524 91       		.byte	0x91
 3162 0525 77       		.sleb128 -9
 3163 0526 10       		.uleb128 0x10
 3164 0527 A4040000 		.4byte	.LASF67
 3165 052b 01       		.byte	0x1
 3166 052c 1006     		.2byte	0x610
 3167 052e 6B000000 		.4byte	0x6b
 3168 0532 02       		.uleb128 0x2
 3169 0533 91       		.byte	0x91
 3170 0534 76       		.sleb128 -10
 3171 0535 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 89


 3172 0536 14       		.uleb128 0x14
 3173 0537 65050000 		.4byte	.LASF69
 3174 053b 01       		.byte	0x1
 3175 053c 5106     		.2byte	0x651
 3176 053e 00000000 		.4byte	.LFB21
 3177 0542 6C010000 		.4byte	.LFE21-.LFB21
 3178 0546 01       		.uleb128 0x1
 3179 0547 9C       		.byte	0x9c
 3180 0548 D4050000 		.4byte	0x5d4
 3181 054c 10       		.uleb128 0x10
 3182 054d 0F000000 		.4byte	.LASF70
 3183 0551 01       		.byte	0x1
 3184 0552 5106     		.2byte	0x651
 3185 0554 6B000000 		.4byte	0x6b
 3186 0558 02       		.uleb128 0x2
 3187 0559 91       		.byte	0x91
 3188 055a 5F       		.sleb128 -33
 3189 055b 10       		.uleb128 0x10
 3190 055c CC000000 		.4byte	.LASF71
 3191 0560 01       		.byte	0x1
 3192 0561 5106     		.2byte	0x651
 3193 0563 77000000 		.4byte	0x77
 3194 0567 02       		.uleb128 0x2
 3195 0568 91       		.byte	0x91
 3196 0569 5C       		.sleb128 -36
 3197 056a 10       		.uleb128 0x10
 3198 056b 8F000000 		.4byte	.LASF72
 3199 056f 01       		.byte	0x1
 3200 0570 5106     		.2byte	0x651
 3201 0572 77000000 		.4byte	0x77
 3202 0576 02       		.uleb128 0x2
 3203 0577 91       		.byte	0x91
 3204 0578 5A       		.sleb128 -38
 3205 0579 10       		.uleb128 0x10
 3206 057a 06040000 		.4byte	.LASF65
 3207 057e 01       		.byte	0x1
 3208 057f 5206     		.2byte	0x652
 3209 0581 6B000000 		.4byte	0x6b
 3210 0585 02       		.uleb128 0x2
 3211 0586 91       		.byte	0x91
 3212 0587 5E       		.sleb128 -34
 3213 0588 10       		.uleb128 0x10
 3214 0589 5D040000 		.4byte	.LASF26
 3215 058d 01       		.byte	0x1
 3216 058e 5206     		.2byte	0x652
 3217 0590 6B000000 		.4byte	0x6b
 3218 0594 02       		.uleb128 0x2
 3219 0595 91       		.byte	0x91
 3220 0596 00       		.sleb128 0
 3221 0597 0E       		.uleb128 0xe
 3222 0598 A4020000 		.4byte	.LASF73
 3223 059c 01       		.byte	0x1
 3224 059d 5406     		.2byte	0x654
 3225 059f 8F000000 		.4byte	0x8f
 3226 05a3 02       		.uleb128 0x2
 3227 05a4 91       		.byte	0x91
 3228 05a5 6F       		.sleb128 -17
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 90


 3229 05a6 0E       		.uleb128 0xe
 3230 05a7 BB030000 		.4byte	.LASF74
 3231 05ab 01       		.byte	0x1
 3232 05ac 5506     		.2byte	0x655
 3233 05ae A7000000 		.4byte	0xa7
 3234 05b2 02       		.uleb128 0x2
 3235 05b3 91       		.byte	0x91
 3236 05b4 68       		.sleb128 -24
 3237 05b5 0E       		.uleb128 0xe
 3238 05b6 2A020000 		.4byte	.LASF43
 3239 05ba 01       		.byte	0x1
 3240 05bb 5606     		.2byte	0x656
 3241 05bd 77000000 		.4byte	0x77
 3242 05c1 02       		.uleb128 0x2
 3243 05c2 91       		.byte	0x91
 3244 05c3 6C       		.sleb128 -20
 3245 05c4 0E       		.uleb128 0xe
 3246 05c5 DE030000 		.4byte	.LASF75
 3247 05c9 01       		.byte	0x1
 3248 05ca 5706     		.2byte	0x657
 3249 05cc 83000000 		.4byte	0x83
 3250 05d0 02       		.uleb128 0x2
 3251 05d1 91       		.byte	0x91
 3252 05d2 64       		.sleb128 -28
 3253 05d3 00       		.byte	0
 3254 05d4 14       		.uleb128 0x14
 3255 05d5 B4010000 		.4byte	.LASF76
 3256 05d9 01       		.byte	0x1
 3257 05da BC06     		.2byte	0x6bc
 3258 05dc 00000000 		.4byte	.LFB22
 3259 05e0 78000000 		.4byte	.LFE22-.LFB22
 3260 05e4 01       		.uleb128 0x1
 3261 05e5 9C       		.byte	0x9c
 3262 05e6 09060000 		.4byte	0x609
 3263 05ea 10       		.uleb128 0x10
 3264 05eb 68010000 		.4byte	.LASF77
 3265 05ef 01       		.byte	0x1
 3266 05f0 BC06     		.2byte	0x6bc
 3267 05f2 6B000000 		.4byte	0x6b
 3268 05f6 02       		.uleb128 0x2
 3269 05f7 91       		.byte	0x91
 3270 05f8 6F       		.sleb128 -17
 3271 05f9 0E       		.uleb128 0xe
 3272 05fa 09050000 		.4byte	.LASF27
 3273 05fe 01       		.byte	0x1
 3274 05ff BE06     		.2byte	0x6be
 3275 0601 6B000000 		.4byte	0x6b
 3276 0605 02       		.uleb128 0x2
 3277 0606 91       		.byte	0x91
 3278 0607 77       		.sleb128 -9
 3279 0608 00       		.byte	0
 3280 0609 11       		.uleb128 0x11
 3281 060a 1A000000 		.4byte	.LASF78
 3282 060e 01       		.byte	0x1
 3283 060f E206     		.2byte	0x6e2
 3284 0611 8F000000 		.4byte	0x8f
 3285 0615 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 91


 3286 0619 3C000000 		.4byte	.LFE23-.LFB23
 3287 061d 01       		.uleb128 0x1
 3288 061e 9C       		.byte	0x9c
 3289 061f 33060000 		.4byte	0x633
 3290 0623 0E       		.uleb128 0xe
 3291 0624 A2050000 		.4byte	.LASF49
 3292 0628 01       		.byte	0x1
 3293 0629 E406     		.2byte	0x6e4
 3294 062b 8F000000 		.4byte	0x8f
 3295 062f 02       		.uleb128 0x2
 3296 0630 91       		.byte	0x91
 3297 0631 77       		.sleb128 -9
 3298 0632 00       		.byte	0
 3299 0633 11       		.uleb128 0x11
 3300 0634 92030000 		.4byte	.LASF79
 3301 0638 01       		.byte	0x1
 3302 0639 0307     		.2byte	0x703
 3303 063b 9B000000 		.4byte	0x9b
 3304 063f 00000000 		.4byte	.LFB24
 3305 0643 3C000000 		.4byte	.LFE24-.LFB24
 3306 0647 01       		.uleb128 0x1
 3307 0648 9C       		.byte	0x9c
 3308 0649 5D060000 		.4byte	0x65d
 3309 064d 0E       		.uleb128 0xe
 3310 064e A2050000 		.4byte	.LASF49
 3311 0652 01       		.byte	0x1
 3312 0653 0507     		.2byte	0x705
 3313 0655 9B000000 		.4byte	0x9b
 3314 0659 02       		.uleb128 0x2
 3315 065a 91       		.byte	0x91
 3316 065b 76       		.sleb128 -10
 3317 065c 00       		.byte	0
 3318 065d 11       		.uleb128 0x11
 3319 065e F8040000 		.4byte	.LASF80
 3320 0662 01       		.byte	0x1
 3321 0663 2407     		.2byte	0x724
 3322 0665 A7000000 		.4byte	0xa7
 3323 0669 00000000 		.4byte	.LFB25
 3324 066d 38000000 		.4byte	.LFE25-.LFB25
 3325 0671 01       		.uleb128 0x1
 3326 0672 9C       		.byte	0x9c
 3327 0673 87060000 		.4byte	0x687
 3328 0677 0E       		.uleb128 0xe
 3329 0678 A2050000 		.4byte	.LASF49
 3330 067c 01       		.byte	0x1
 3331 067d 2607     		.2byte	0x726
 3332 067f A7000000 		.4byte	0xa7
 3333 0683 02       		.uleb128 0x2
 3334 0684 91       		.byte	0x91
 3335 0685 74       		.sleb128 -12
 3336 0686 00       		.byte	0
 3337 0687 15       		.uleb128 0x15
 3338 0688 2F010000 		.4byte	0x12f
 3339 068c 97060000 		.4byte	0x697
 3340 0690 16       		.uleb128 0x16
 3341 0691 07010000 		.4byte	0x107
 3342 0695 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 92


 3343 0696 00       		.byte	0
 3344 0697 0B       		.uleb128 0xb
 3345 0698 F7030000 		.4byte	.LASF81
 3346 069c 01       		.byte	0x1
 3347 069d 3D       		.byte	0x3d
 3348 069e 87060000 		.4byte	0x687
 3349 06a2 05       		.uleb128 0x5
 3350 06a3 03       		.byte	0x3
 3351 06a4 04000000 		.4byte	SIGMA_A_D_gcor
 3352 06a8 17       		.uleb128 0x17
 3353 06a9 F6000000 		.4byte	.LASF82
 3354 06ad 01       		.byte	0x1
 3355 06ae 2C       		.byte	0x2c
 3356 06af 6B000000 		.4byte	0x6b
 3357 06b3 05       		.uleb128 0x5
 3358 06b4 03       		.byte	0x3
 3359 06b5 00000000 		.4byte	SIGMA_A_D_initVar
 3360 06b9 17       		.uleb128 0x17
 3361 06ba B9000000 		.4byte	.LASF83
 3362 06be 01       		.byte	0x1
 3363 06bf 24       		.byte	0x24
 3364 06c0 E0000000 		.4byte	0xe0
 3365 06c4 05       		.uleb128 0x5
 3366 06c5 03       		.byte	0x3
 3367 06c6 00000000 		.4byte	SIGMA_A_D_convDone
 3368 06ca 17       		.uleb128 0x17
 3369 06cb 76000000 		.4byte	.LASF84
 3370 06cf 01       		.byte	0x1
 3371 06d0 29       		.byte	0x29
 3372 06d1 E0000000 		.4byte	0xe0
 3373 06d5 05       		.uleb128 0x5
 3374 06d6 03       		.byte	0x3
 3375 06d7 00000000 		.4byte	SIGMA_A_D_stopConversion
 3376 06db 17       		.uleb128 0x17
 3377 06dc CD040000 		.4byte	.LASF85
 3378 06e0 01       		.byte	0x1
 3379 06e1 2F       		.byte	0x2f
 3380 06e2 E0000000 		.4byte	0xe0
 3381 06e6 05       		.uleb128 0x5
 3382 06e7 03       		.byte	0x3
 3383 06e8 00000000 		.4byte	SIGMA_A_D_started
 3384 06ec 17       		.uleb128 0x17
 3385 06ed BC040000 		.4byte	.LASF86
 3386 06f1 01       		.byte	0x1
 3387 06f2 32       		.byte	0x32
 3388 06f3 E0000000 		.4byte	0xe0
 3389 06f7 05       		.uleb128 0x5
 3390 06f8 03       		.byte	0x3
 3391 06f9 00000000 		.4byte	SIGMA_A_D_Config
 3392 06fd 17       		.uleb128 0x17
 3393 06fe 57010000 		.4byte	.LASF87
 3394 0702 01       		.byte	0x1
 3395 0703 34       		.byte	0x34
 3396 0704 0E070000 		.4byte	0x70e
 3397 0708 05       		.uleb128 0x5
 3398 0709 03       		.byte	0x3
 3399 070a 00000000 		.4byte	SIGMA_A_D_Offset
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 93


 3400 070e 05       		.uleb128 0x5
 3401 070f A7000000 		.4byte	0xa7
 3402 0713 17       		.uleb128 0x17
 3403 0714 76010000 		.4byte	.LASF88
 3404 0718 01       		.byte	0x1
 3405 0719 35       		.byte	0x35
 3406 071a 0E070000 		.4byte	0x70e
 3407 071e 05       		.uleb128 0x5
 3408 071f 03       		.byte	0x3
 3409 0720 00000000 		.4byte	SIGMA_A_D_CountsPerVolt
 3410 0724 00       		.byte	0
 3411              		.section	.debug_abbrev,"",%progbits
 3412              	.Ldebug_abbrev0:
 3413 0000 01       		.uleb128 0x1
 3414 0001 11       		.uleb128 0x11
 3415 0002 01       		.byte	0x1
 3416 0003 25       		.uleb128 0x25
 3417 0004 0E       		.uleb128 0xe
 3418 0005 13       		.uleb128 0x13
 3419 0006 0B       		.uleb128 0xb
 3420 0007 03       		.uleb128 0x3
 3421 0008 0E       		.uleb128 0xe
 3422 0009 1B       		.uleb128 0x1b
 3423 000a 0E       		.uleb128 0xe
 3424 000b 55       		.uleb128 0x55
 3425 000c 17       		.uleb128 0x17
 3426 000d 11       		.uleb128 0x11
 3427 000e 01       		.uleb128 0x1
 3428 000f 10       		.uleb128 0x10
 3429 0010 17       		.uleb128 0x17
 3430 0011 00       		.byte	0
 3431 0012 00       		.byte	0
 3432 0013 02       		.uleb128 0x2
 3433 0014 24       		.uleb128 0x24
 3434 0015 00       		.byte	0
 3435 0016 0B       		.uleb128 0xb
 3436 0017 0B       		.uleb128 0xb
 3437 0018 3E       		.uleb128 0x3e
 3438 0019 0B       		.uleb128 0xb
 3439 001a 03       		.uleb128 0x3
 3440 001b 0E       		.uleb128 0xe
 3441 001c 00       		.byte	0
 3442 001d 00       		.byte	0
 3443 001e 03       		.uleb128 0x3
 3444 001f 24       		.uleb128 0x24
 3445 0020 00       		.byte	0
 3446 0021 0B       		.uleb128 0xb
 3447 0022 0B       		.uleb128 0xb
 3448 0023 3E       		.uleb128 0x3e
 3449 0024 0B       		.uleb128 0xb
 3450 0025 03       		.uleb128 0x3
 3451 0026 08       		.uleb128 0x8
 3452 0027 00       		.byte	0
 3453 0028 00       		.byte	0
 3454 0029 04       		.uleb128 0x4
 3455 002a 16       		.uleb128 0x16
 3456 002b 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 94


 3457 002c 03       		.uleb128 0x3
 3458 002d 0E       		.uleb128 0xe
 3459 002e 3A       		.uleb128 0x3a
 3460 002f 0B       		.uleb128 0xb
 3461 0030 3B       		.uleb128 0x3b
 3462 0031 05       		.uleb128 0x5
 3463 0032 49       		.uleb128 0x49
 3464 0033 13       		.uleb128 0x13
 3465 0034 00       		.byte	0
 3466 0035 00       		.byte	0
 3467 0036 05       		.uleb128 0x5
 3468 0037 35       		.uleb128 0x35
 3469 0038 00       		.byte	0
 3470 0039 49       		.uleb128 0x49
 3471 003a 13       		.uleb128 0x13
 3472 003b 00       		.byte	0
 3473 003c 00       		.byte	0
 3474 003d 06       		.uleb128 0x6
 3475 003e 13       		.uleb128 0x13
 3476 003f 01       		.byte	0x1
 3477 0040 0B       		.uleb128 0xb
 3478 0041 0B       		.uleb128 0xb
 3479 0042 3A       		.uleb128 0x3a
 3480 0043 0B       		.uleb128 0xb
 3481 0044 3B       		.uleb128 0x3b
 3482 0045 0B       		.uleb128 0xb
 3483 0046 01       		.uleb128 0x1
 3484 0047 13       		.uleb128 0x13
 3485 0048 00       		.byte	0
 3486 0049 00       		.byte	0
 3487 004a 07       		.uleb128 0x7
 3488 004b 0D       		.uleb128 0xd
 3489 004c 00       		.byte	0
 3490 004d 03       		.uleb128 0x3
 3491 004e 0E       		.uleb128 0xe
 3492 004f 3A       		.uleb128 0x3a
 3493 0050 0B       		.uleb128 0xb
 3494 0051 3B       		.uleb128 0x3b
 3495 0052 0B       		.uleb128 0xb
 3496 0053 49       		.uleb128 0x49
 3497 0054 13       		.uleb128 0x13
 3498 0055 38       		.uleb128 0x38
 3499 0056 0B       		.uleb128 0xb
 3500 0057 00       		.byte	0
 3501 0058 00       		.byte	0
 3502 0059 08       		.uleb128 0x8
 3503 005a 16       		.uleb128 0x16
 3504 005b 00       		.byte	0
 3505 005c 03       		.uleb128 0x3
 3506 005d 0E       		.uleb128 0xe
 3507 005e 3A       		.uleb128 0x3a
 3508 005f 0B       		.uleb128 0xb
 3509 0060 3B       		.uleb128 0x3b
 3510 0061 0B       		.uleb128 0xb
 3511 0062 49       		.uleb128 0x49
 3512 0063 13       		.uleb128 0x13
 3513 0064 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 95


 3514 0065 00       		.byte	0
 3515 0066 09       		.uleb128 0x9
 3516 0067 2E       		.uleb128 0x2e
 3517 0068 00       		.byte	0
 3518 0069 3F       		.uleb128 0x3f
 3519 006a 19       		.uleb128 0x19
 3520 006b 03       		.uleb128 0x3
 3521 006c 0E       		.uleb128 0xe
 3522 006d 3A       		.uleb128 0x3a
 3523 006e 0B       		.uleb128 0xb
 3524 006f 3B       		.uleb128 0x3b
 3525 0070 0B       		.uleb128 0xb
 3526 0071 27       		.uleb128 0x27
 3527 0072 19       		.uleb128 0x19
 3528 0073 11       		.uleb128 0x11
 3529 0074 01       		.uleb128 0x1
 3530 0075 12       		.uleb128 0x12
 3531 0076 06       		.uleb128 0x6
 3532 0077 40       		.uleb128 0x40
 3533 0078 18       		.uleb128 0x18
 3534 0079 9642     		.uleb128 0x2116
 3535 007b 19       		.uleb128 0x19
 3536 007c 00       		.byte	0
 3537 007d 00       		.byte	0
 3538 007e 0A       		.uleb128 0xa
 3539 007f 2E       		.uleb128 0x2e
 3540 0080 01       		.byte	0x1
 3541 0081 3F       		.uleb128 0x3f
 3542 0082 19       		.uleb128 0x19
 3543 0083 03       		.uleb128 0x3
 3544 0084 0E       		.uleb128 0xe
 3545 0085 3A       		.uleb128 0x3a
 3546 0086 0B       		.uleb128 0xb
 3547 0087 3B       		.uleb128 0x3b
 3548 0088 0B       		.uleb128 0xb
 3549 0089 27       		.uleb128 0x27
 3550 008a 19       		.uleb128 0x19
 3551 008b 11       		.uleb128 0x11
 3552 008c 01       		.uleb128 0x1
 3553 008d 12       		.uleb128 0x12
 3554 008e 06       		.uleb128 0x6
 3555 008f 40       		.uleb128 0x40
 3556 0090 18       		.uleb128 0x18
 3557 0091 9642     		.uleb128 0x2116
 3558 0093 19       		.uleb128 0x19
 3559 0094 01       		.uleb128 0x1
 3560 0095 13       		.uleb128 0x13
 3561 0096 00       		.byte	0
 3562 0097 00       		.byte	0
 3563 0098 0B       		.uleb128 0xb
 3564 0099 34       		.uleb128 0x34
 3565 009a 00       		.byte	0
 3566 009b 03       		.uleb128 0x3
 3567 009c 0E       		.uleb128 0xe
 3568 009d 3A       		.uleb128 0x3a
 3569 009e 0B       		.uleb128 0xb
 3570 009f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 96


 3571 00a0 0B       		.uleb128 0xb
 3572 00a1 49       		.uleb128 0x49
 3573 00a2 13       		.uleb128 0x13
 3574 00a3 02       		.uleb128 0x2
 3575 00a4 18       		.uleb128 0x18
 3576 00a5 00       		.byte	0
 3577 00a6 00       		.byte	0
 3578 00a7 0C       		.uleb128 0xc
 3579 00a8 2E       		.uleb128 0x2e
 3580 00a9 00       		.byte	0
 3581 00aa 3F       		.uleb128 0x3f
 3582 00ab 19       		.uleb128 0x19
 3583 00ac 03       		.uleb128 0x3
 3584 00ad 0E       		.uleb128 0xe
 3585 00ae 3A       		.uleb128 0x3a
 3586 00af 0B       		.uleb128 0xb
 3587 00b0 3B       		.uleb128 0x3b
 3588 00b1 05       		.uleb128 0x5
 3589 00b2 27       		.uleb128 0x27
 3590 00b3 19       		.uleb128 0x19
 3591 00b4 11       		.uleb128 0x11
 3592 00b5 01       		.uleb128 0x1
 3593 00b6 12       		.uleb128 0x12
 3594 00b7 06       		.uleb128 0x6
 3595 00b8 40       		.uleb128 0x40
 3596 00b9 18       		.uleb128 0x18
 3597 00ba 9642     		.uleb128 0x2116
 3598 00bc 19       		.uleb128 0x19
 3599 00bd 00       		.byte	0
 3600 00be 00       		.byte	0
 3601 00bf 0D       		.uleb128 0xd
 3602 00c0 2E       		.uleb128 0x2e
 3603 00c1 01       		.byte	0x1
 3604 00c2 3F       		.uleb128 0x3f
 3605 00c3 19       		.uleb128 0x19
 3606 00c4 03       		.uleb128 0x3
 3607 00c5 0E       		.uleb128 0xe
 3608 00c6 3A       		.uleb128 0x3a
 3609 00c7 0B       		.uleb128 0xb
 3610 00c8 3B       		.uleb128 0x3b
 3611 00c9 05       		.uleb128 0x5
 3612 00ca 27       		.uleb128 0x27
 3613 00cb 19       		.uleb128 0x19
 3614 00cc 11       		.uleb128 0x11
 3615 00cd 01       		.uleb128 0x1
 3616 00ce 12       		.uleb128 0x12
 3617 00cf 06       		.uleb128 0x6
 3618 00d0 40       		.uleb128 0x40
 3619 00d1 18       		.uleb128 0x18
 3620 00d2 9642     		.uleb128 0x2116
 3621 00d4 19       		.uleb128 0x19
 3622 00d5 01       		.uleb128 0x1
 3623 00d6 13       		.uleb128 0x13
 3624 00d7 00       		.byte	0
 3625 00d8 00       		.byte	0
 3626 00d9 0E       		.uleb128 0xe
 3627 00da 34       		.uleb128 0x34
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 97


 3628 00db 00       		.byte	0
 3629 00dc 03       		.uleb128 0x3
 3630 00dd 0E       		.uleb128 0xe
 3631 00de 3A       		.uleb128 0x3a
 3632 00df 0B       		.uleb128 0xb
 3633 00e0 3B       		.uleb128 0x3b
 3634 00e1 05       		.uleb128 0x5
 3635 00e2 49       		.uleb128 0x49
 3636 00e3 13       		.uleb128 0x13
 3637 00e4 02       		.uleb128 0x2
 3638 00e5 18       		.uleb128 0x18
 3639 00e6 00       		.byte	0
 3640 00e7 00       		.byte	0
 3641 00e8 0F       		.uleb128 0xf
 3642 00e9 2E       		.uleb128 0x2e
 3643 00ea 01       		.byte	0x1
 3644 00eb 3F       		.uleb128 0x3f
 3645 00ec 19       		.uleb128 0x19
 3646 00ed 03       		.uleb128 0x3
 3647 00ee 0E       		.uleb128 0xe
 3648 00ef 3A       		.uleb128 0x3a
 3649 00f0 0B       		.uleb128 0xb
 3650 00f1 3B       		.uleb128 0x3b
 3651 00f2 05       		.uleb128 0x5
 3652 00f3 27       		.uleb128 0x27
 3653 00f4 19       		.uleb128 0x19
 3654 00f5 11       		.uleb128 0x11
 3655 00f6 01       		.uleb128 0x1
 3656 00f7 12       		.uleb128 0x12
 3657 00f8 06       		.uleb128 0x6
 3658 00f9 40       		.uleb128 0x40
 3659 00fa 18       		.uleb128 0x18
 3660 00fb 9742     		.uleb128 0x2117
 3661 00fd 19       		.uleb128 0x19
 3662 00fe 01       		.uleb128 0x1
 3663 00ff 13       		.uleb128 0x13
 3664 0100 00       		.byte	0
 3665 0101 00       		.byte	0
 3666 0102 10       		.uleb128 0x10
 3667 0103 05       		.uleb128 0x5
 3668 0104 00       		.byte	0
 3669 0105 03       		.uleb128 0x3
 3670 0106 0E       		.uleb128 0xe
 3671 0107 3A       		.uleb128 0x3a
 3672 0108 0B       		.uleb128 0xb
 3673 0109 3B       		.uleb128 0x3b
 3674 010a 05       		.uleb128 0x5
 3675 010b 49       		.uleb128 0x49
 3676 010c 13       		.uleb128 0x13
 3677 010d 02       		.uleb128 0x2
 3678 010e 18       		.uleb128 0x18
 3679 010f 00       		.byte	0
 3680 0110 00       		.byte	0
 3681 0111 11       		.uleb128 0x11
 3682 0112 2E       		.uleb128 0x2e
 3683 0113 01       		.byte	0x1
 3684 0114 3F       		.uleb128 0x3f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 98


 3685 0115 19       		.uleb128 0x19
 3686 0116 03       		.uleb128 0x3
 3687 0117 0E       		.uleb128 0xe
 3688 0118 3A       		.uleb128 0x3a
 3689 0119 0B       		.uleb128 0xb
 3690 011a 3B       		.uleb128 0x3b
 3691 011b 05       		.uleb128 0x5
 3692 011c 27       		.uleb128 0x27
 3693 011d 19       		.uleb128 0x19
 3694 011e 49       		.uleb128 0x49
 3695 011f 13       		.uleb128 0x13
 3696 0120 11       		.uleb128 0x11
 3697 0121 01       		.uleb128 0x1
 3698 0122 12       		.uleb128 0x12
 3699 0123 06       		.uleb128 0x6
 3700 0124 40       		.uleb128 0x40
 3701 0125 18       		.uleb128 0x18
 3702 0126 9642     		.uleb128 0x2116
 3703 0128 19       		.uleb128 0x19
 3704 0129 01       		.uleb128 0x1
 3705 012a 13       		.uleb128 0x13
 3706 012b 00       		.byte	0
 3707 012c 00       		.byte	0
 3708 012d 12       		.uleb128 0x12
 3709 012e 2E       		.uleb128 0x2e
 3710 012f 01       		.byte	0x1
 3711 0130 3F       		.uleb128 0x3f
 3712 0131 19       		.uleb128 0x19
 3713 0132 03       		.uleb128 0x3
 3714 0133 0E       		.uleb128 0xe
 3715 0134 3A       		.uleb128 0x3a
 3716 0135 0B       		.uleb128 0xb
 3717 0136 3B       		.uleb128 0x3b
 3718 0137 05       		.uleb128 0x5
 3719 0138 27       		.uleb128 0x27
 3720 0139 19       		.uleb128 0x19
 3721 013a 49       		.uleb128 0x49
 3722 013b 13       		.uleb128 0x13
 3723 013c 11       		.uleb128 0x11
 3724 013d 01       		.uleb128 0x1
 3725 013e 12       		.uleb128 0x12
 3726 013f 06       		.uleb128 0x6
 3727 0140 40       		.uleb128 0x40
 3728 0141 18       		.uleb128 0x18
 3729 0142 9742     		.uleb128 0x2117
 3730 0144 19       		.uleb128 0x19
 3731 0145 01       		.uleb128 0x1
 3732 0146 13       		.uleb128 0x13
 3733 0147 00       		.byte	0
 3734 0148 00       		.byte	0
 3735 0149 13       		.uleb128 0x13
 3736 014a 2E       		.uleb128 0x2e
 3737 014b 00       		.byte	0
 3738 014c 3F       		.uleb128 0x3f
 3739 014d 19       		.uleb128 0x19
 3740 014e 03       		.uleb128 0x3
 3741 014f 0E       		.uleb128 0xe
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 99


 3742 0150 3A       		.uleb128 0x3a
 3743 0151 0B       		.uleb128 0xb
 3744 0152 3B       		.uleb128 0x3b
 3745 0153 05       		.uleb128 0x5
 3746 0154 27       		.uleb128 0x27
 3747 0155 19       		.uleb128 0x19
 3748 0156 11       		.uleb128 0x11
 3749 0157 01       		.uleb128 0x1
 3750 0158 12       		.uleb128 0x12
 3751 0159 06       		.uleb128 0x6
 3752 015a 40       		.uleb128 0x40
 3753 015b 18       		.uleb128 0x18
 3754 015c 9742     		.uleb128 0x2117
 3755 015e 19       		.uleb128 0x19
 3756 015f 00       		.byte	0
 3757 0160 00       		.byte	0
 3758 0161 14       		.uleb128 0x14
 3759 0162 2E       		.uleb128 0x2e
 3760 0163 01       		.byte	0x1
 3761 0164 03       		.uleb128 0x3
 3762 0165 0E       		.uleb128 0xe
 3763 0166 3A       		.uleb128 0x3a
 3764 0167 0B       		.uleb128 0xb
 3765 0168 3B       		.uleb128 0x3b
 3766 0169 05       		.uleb128 0x5
 3767 016a 27       		.uleb128 0x27
 3768 016b 19       		.uleb128 0x19
 3769 016c 11       		.uleb128 0x11
 3770 016d 01       		.uleb128 0x1
 3771 016e 12       		.uleb128 0x12
 3772 016f 06       		.uleb128 0x6
 3773 0170 40       		.uleb128 0x40
 3774 0171 18       		.uleb128 0x18
 3775 0172 9642     		.uleb128 0x2116
 3776 0174 19       		.uleb128 0x19
 3777 0175 01       		.uleb128 0x1
 3778 0176 13       		.uleb128 0x13
 3779 0177 00       		.byte	0
 3780 0178 00       		.byte	0
 3781 0179 15       		.uleb128 0x15
 3782 017a 01       		.uleb128 0x1
 3783 017b 01       		.byte	0x1
 3784 017c 49       		.uleb128 0x49
 3785 017d 13       		.uleb128 0x13
 3786 017e 01       		.uleb128 0x1
 3787 017f 13       		.uleb128 0x13
 3788 0180 00       		.byte	0
 3789 0181 00       		.byte	0
 3790 0182 16       		.uleb128 0x16
 3791 0183 21       		.uleb128 0x21
 3792 0184 00       		.byte	0
 3793 0185 49       		.uleb128 0x49
 3794 0186 13       		.uleb128 0x13
 3795 0187 2F       		.uleb128 0x2f
 3796 0188 0B       		.uleb128 0xb
 3797 0189 00       		.byte	0
 3798 018a 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 100


 3799 018b 17       		.uleb128 0x17
 3800 018c 34       		.uleb128 0x34
 3801 018d 00       		.byte	0
 3802 018e 03       		.uleb128 0x3
 3803 018f 0E       		.uleb128 0xe
 3804 0190 3A       		.uleb128 0x3a
 3805 0191 0B       		.uleb128 0xb
 3806 0192 3B       		.uleb128 0x3b
 3807 0193 0B       		.uleb128 0xb
 3808 0194 49       		.uleb128 0x49
 3809 0195 13       		.uleb128 0x13
 3810 0196 3F       		.uleb128 0x3f
 3811 0197 19       		.uleb128 0x19
 3812 0198 02       		.uleb128 0x2
 3813 0199 18       		.uleb128 0x18
 3814 019a 00       		.byte	0
 3815 019b 00       		.byte	0
 3816 019c 00       		.byte	0
 3817              		.section	.debug_aranges,"",%progbits
 3818 0000 E4000000 		.4byte	0xe4
 3819 0004 0200     		.2byte	0x2
 3820 0006 00000000 		.4byte	.Ldebug_info0
 3821 000a 04       		.byte	0x4
 3822 000b 00       		.byte	0
 3823 000c 0000     		.2byte	0
 3824 000e 0000     		.2byte	0
 3825 0010 00000000 		.4byte	.LFB0
 3826 0014 1C010000 		.4byte	.LFE0-.LFB0
 3827 0018 00000000 		.4byte	.LFB1
 3828 001c 58010000 		.4byte	.LFE1-.LFB1
 3829 0020 00000000 		.4byte	.LFB2
 3830 0024 30000000 		.4byte	.LFE2-.LFB2
 3831 0028 00000000 		.4byte	.LFB3
 3832 002c 7C010000 		.4byte	.LFE3-.LFB3
 3833 0030 00000000 		.4byte	.LFB4
 3834 0034 3C000000 		.4byte	.LFE4-.LFB4
 3835 0038 00000000 		.4byte	.LFB5
 3836 003c 38000000 		.4byte	.LFE5-.LFB5
 3837 0040 00000000 		.4byte	.LFB6
 3838 0044 B4000000 		.4byte	.LFE6-.LFB6
 3839 0048 00000000 		.4byte	.LFB7
 3840 004c 3C000000 		.4byte	.LFE7-.LFB7
 3841 0050 00000000 		.4byte	.LFB8
 3842 0054 20000000 		.4byte	.LFE8-.LFB8
 3843 0058 00000000 		.4byte	.LFB9
 3844 005c 20000000 		.4byte	.LFE9-.LFB9
 3845 0060 00000000 		.4byte	.LFB10
 3846 0064 50000000 		.4byte	.LFE10-.LFB10
 3847 0068 00000000 		.4byte	.LFB11
 3848 006c 68000000 		.4byte	.LFE11-.LFB11
 3849 0070 00000000 		.4byte	.LFB12
 3850 0074 7C000000 		.4byte	.LFE12-.LFB12
 3851 0078 00000000 		.4byte	.LFB13
 3852 007c A8000000 		.4byte	.LFE13-.LFB13
 3853 0080 00000000 		.4byte	.LFB14
 3854 0084 1C000000 		.4byte	.LFE14-.LFB14
 3855 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 101


 3856 008c 1C000000 		.4byte	.LFE15-.LFB15
 3857 0090 00000000 		.4byte	.LFB16
 3858 0094 40000000 		.4byte	.LFE16-.LFB16
 3859 0098 00000000 		.4byte	.LFB17
 3860 009c 44000000 		.4byte	.LFE17-.LFB17
 3861 00a0 00000000 		.4byte	.LFB18
 3862 00a4 B8000000 		.4byte	.LFE18-.LFB18
 3863 00a8 00000000 		.4byte	.LFB19
 3864 00ac 64010000 		.4byte	.LFE19-.LFB19
 3865 00b0 00000000 		.4byte	.LFB20
 3866 00b4 90000000 		.4byte	.LFE20-.LFB20
 3867 00b8 00000000 		.4byte	.LFB21
 3868 00bc 6C010000 		.4byte	.LFE21-.LFB21
 3869 00c0 00000000 		.4byte	.LFB22
 3870 00c4 78000000 		.4byte	.LFE22-.LFB22
 3871 00c8 00000000 		.4byte	.LFB23
 3872 00cc 3C000000 		.4byte	.LFE23-.LFB23
 3873 00d0 00000000 		.4byte	.LFB24
 3874 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3875 00d8 00000000 		.4byte	.LFB25
 3876 00dc 38000000 		.4byte	.LFE25-.LFB25
 3877 00e0 00000000 		.4byte	0
 3878 00e4 00000000 		.4byte	0
 3879              		.section	.debug_ranges,"",%progbits
 3880              	.Ldebug_ranges0:
 3881 0000 00000000 		.4byte	.LFB0
 3882 0004 1C010000 		.4byte	.LFE0
 3883 0008 00000000 		.4byte	.LFB1
 3884 000c 58010000 		.4byte	.LFE1
 3885 0010 00000000 		.4byte	.LFB2
 3886 0014 30000000 		.4byte	.LFE2
 3887 0018 00000000 		.4byte	.LFB3
 3888 001c 7C010000 		.4byte	.LFE3
 3889 0020 00000000 		.4byte	.LFB4
 3890 0024 3C000000 		.4byte	.LFE4
 3891 0028 00000000 		.4byte	.LFB5
 3892 002c 38000000 		.4byte	.LFE5
 3893 0030 00000000 		.4byte	.LFB6
 3894 0034 B4000000 		.4byte	.LFE6
 3895 0038 00000000 		.4byte	.LFB7
 3896 003c 3C000000 		.4byte	.LFE7
 3897 0040 00000000 		.4byte	.LFB8
 3898 0044 20000000 		.4byte	.LFE8
 3899 0048 00000000 		.4byte	.LFB9
 3900 004c 20000000 		.4byte	.LFE9
 3901 0050 00000000 		.4byte	.LFB10
 3902 0054 50000000 		.4byte	.LFE10
 3903 0058 00000000 		.4byte	.LFB11
 3904 005c 68000000 		.4byte	.LFE11
 3905 0060 00000000 		.4byte	.LFB12
 3906 0064 7C000000 		.4byte	.LFE12
 3907 0068 00000000 		.4byte	.LFB13
 3908 006c A8000000 		.4byte	.LFE13
 3909 0070 00000000 		.4byte	.LFB14
 3910 0074 1C000000 		.4byte	.LFE14
 3911 0078 00000000 		.4byte	.LFB15
 3912 007c 1C000000 		.4byte	.LFE15
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 102


 3913 0080 00000000 		.4byte	.LFB16
 3914 0084 40000000 		.4byte	.LFE16
 3915 0088 00000000 		.4byte	.LFB17
 3916 008c 44000000 		.4byte	.LFE17
 3917 0090 00000000 		.4byte	.LFB18
 3918 0094 B8000000 		.4byte	.LFE18
 3919 0098 00000000 		.4byte	.LFB19
 3920 009c 64010000 		.4byte	.LFE19
 3921 00a0 00000000 		.4byte	.LFB20
 3922 00a4 90000000 		.4byte	.LFE20
 3923 00a8 00000000 		.4byte	.LFB21
 3924 00ac 6C010000 		.4byte	.LFE21
 3925 00b0 00000000 		.4byte	.LFB22
 3926 00b4 78000000 		.4byte	.LFE22
 3927 00b8 00000000 		.4byte	.LFB23
 3928 00bc 3C000000 		.4byte	.LFE23
 3929 00c0 00000000 		.4byte	.LFB24
 3930 00c4 3C000000 		.4byte	.LFE24
 3931 00c8 00000000 		.4byte	.LFB25
 3932 00cc 38000000 		.4byte	.LFE25
 3933 00d0 00000000 		.4byte	0
 3934 00d4 00000000 		.4byte	0
 3935              		.section	.debug_line,"",%progbits
 3936              	.Ldebug_line0:
 3937 0000 62030000 		.section	.debug_str,"MS",%progbits,1
 3937      02005700 
 3937      00000201 
 3937      FB0E0D00 
 3937      01010101 
 3938              	.LASF10:
 3939 0000 75696E74 		.ascii	"uint16\000"
 3939      313600
 3940              	.LASF55:
 3941 0007 61646347 		.ascii	"adcGain\000"
 3941      61696E00 
 3942              	.LASF70:
 3943 000f 696E7075 		.ascii	"inputRange\000"
 3943      7452616E 
 3943      676500
 3944              	.LASF78:
 3945 001a 5349474D 		.ascii	"SIGMA_A_D_Read8\000"
 3945      415F415F 
 3945      445F5265 
 3945      61643800 
 3946              	.LASF66:
 3947 002a 5349474D 		.ascii	"SIGMA_A_D_SelectConfiguration\000"
 3947      415F415F 
 3947      445F5365 
 3947      6C656374 
 3947      436F6E66 
 3948              	.LASF54:
 3949 0048 5349474D 		.ascii	"SIGMA_A_D_SetGain\000"
 3949      415F415F 
 3949      445F5365 
 3949      74476169 
 3949      6E00
 3950              	.LASF23:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 103


 3951 005a 67636F72 		.ascii	"gcor\000"
 3951      00
 3952              	.LASF7:
 3953 005f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3953      206C6F6E 
 3953      6720756E 
 3953      7369676E 
 3953      65642069 
 3954              	.LASF84:
 3955 0076 5349474D 		.ascii	"SIGMA_A_D_stopConversion\000"
 3955      415F415F 
 3955      445F7374 
 3955      6F70436F 
 3955      6E766572 
 3956              	.LASF72:
 3957 008f 69646561 		.ascii	"idealOddDecGain\000"
 3957      6C4F6464 
 3957      44656347 
 3957      61696E00 
 3958              	.LASF6:
 3959 009f 6C6F6E67 		.ascii	"long long int\000"
 3959      206C6F6E 
 3959      6720696E 
 3959      7400
 3960              	.LASF0:
 3961 00ad 7369676E 		.ascii	"signed char\000"
 3961      65642063 
 3961      68617200 
 3962              	.LASF83:
 3963 00b9 5349474D 		.ascii	"SIGMA_A_D_convDone\000"
 3963      415F415F 
 3963      445F636F 
 3963      6E76446F 
 3963      6E6500
 3964              	.LASF71:
 3965 00cc 69646561 		.ascii	"idealDecGain\000"
 3965      6C446563 
 3965      4761696E 
 3965      00
 3966              	.LASF14:
 3967 00d9 696E7433 		.ascii	"int32\000"
 3967      3200
 3968              	.LASF44:
 3969 00df 5349474D 		.ascii	"SIGMA_A_D_StartConvert\000"
 3969      415F415F 
 3969      445F5374 
 3969      61727443 
 3969      6F6E7665 
 3970              	.LASF82:
 3971 00f6 5349474D 		.ascii	"SIGMA_A_D_initVar\000"
 3971      415F415F 
 3971      445F696E 
 3971      69745661 
 3971      7200
 3972              	.LASF4:
 3973 0108 6C6F6E67 		.ascii	"long int\000"
 3973      20696E74 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 104


 3973      00
 3974              	.LASF20:
 3975 0111 72656731 		.ascii	"reg16\000"
 3975      3600
 3976              	.LASF9:
 3977 0117 75696E74 		.ascii	"uint8\000"
 3977      3800
 3978              	.LASF28:
 3979 011d 5349474D 		.ascii	"SIGMA_A_D_Init\000"
 3979      415F415F 
 3979      445F496E 
 3979      697400
 3980              	.LASF34:
 3981 012c 5349474D 		.ascii	"SIGMA_A_D_SetCoherency\000"
 3981      415F415F 
 3981      445F5365 
 3981      74436F68 
 3981      6572656E 
 3982              	.LASF17:
 3983 0143 646F7562 		.ascii	"double\000"
 3983      6C6500
 3984              	.LASF60:
 3985 014a 566F6C74 		.ascii	"Volts\000"
 3985      7300
 3986              	.LASF11:
 3987 0150 75696E74 		.ascii	"uint32\000"
 3987      333200
 3988              	.LASF87:
 3989 0157 5349474D 		.ascii	"SIGMA_A_D_Offset\000"
 3989      415F415F 
 3989      445F4F66 
 3989      66736574 
 3989      00
 3990              	.LASF77:
 3991 0168 76616C75 		.ascii	"value\000"
 3991      6500
 3992              	.LASF47:
 3993 016e 7265744D 		.ascii	"retMode\000"
 3993      6F646500 
 3994              	.LASF88:
 3995 0176 5349474D 		.ascii	"SIGMA_A_D_CountsPerVolt\000"
 3995      415F415F 
 3995      445F436F 
 3995      756E7473 
 3995      50657256 
 3996              	.LASF8:
 3997 018e 756E7369 		.ascii	"unsigned int\000"
 3997      676E6564 
 3997      20696E74 
 3997      00
 3998              	.LASF62:
 3999 019b 75566F6C 		.ascii	"uVolts\000"
 3999      747300
 4000              	.LASF5:
 4001 01a2 6C6F6E67 		.ascii	"long unsigned int\000"
 4001      20756E73 
 4001      69676E65 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 105


 4001      6420696E 
 4001      7400
 4002              	.LASF76:
 4003 01b4 5349474D 		.ascii	"SIGMA_A_D_SetDSMRef0Reg\000"
 4003      415F415F 
 4003      445F5365 
 4003      7444534D 
 4003      52656630 
 4004              	.LASF50:
 4005 01cc 5349474D 		.ascii	"SIGMA_A_D_GetResult16\000"
 4005      415F415F 
 4005      445F4765 
 4005      74526573 
 4005      756C7431 
 4006              	.LASF3:
 4007 01e2 73686F72 		.ascii	"short unsigned int\000"
 4007      7420756E 
 4007      7369676E 
 4007      65642069 
 4007      6E7400
 4008              	.LASF52:
 4009 01f5 5349474D 		.ascii	"SIGMA_A_D_SetOffset\000"
 4009      415F415F 
 4009      445F5365 
 4009      744F6666 
 4009      73657400 
 4010              	.LASF48:
 4011 0209 5349474D 		.ascii	"SIGMA_A_D_GetResult8\000"
 4011      415F415F 
 4011      445F4765 
 4011      74526573 
 4011      756C7438 
 4012              	.LASF12:
 4013 021e 696E7438 		.ascii	"int8\000"
 4013      00
 4014              	.LASF33:
 4015 0223 746D7052 		.ascii	"tmpReg\000"
 4015      656700
 4016              	.LASF43:
 4017 022a 67636F72 		.ascii	"gcorValue\000"
 4017      56616C75 
 4017      6500
 4018              	.LASF91:
 4019 0234 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor\\"
 4019      73657273 
 4019      5C676C65 
 4019      6E6E5C4F 
 4019      6E654472 
 4020 0261 5553425F 		.ascii	"USB_UART01.cydsn\000"
 4020      55415254 
 4020      30312E63 
 4020      7964736E 
 4020      00
 4021              	.LASF68:
 4022 0272 5349474D 		.ascii	"SIGMA_A_D_InitConfig\000"
 4022      415F415F 
 4022      445F496E 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 106


 4022      6974436F 
 4022      6E666967 
 4023              	.LASF58:
 4024 0287 6D566F6C 		.ascii	"mVolts\000"
 4024      747300
 4025              	.LASF25:
 4026 028e 5349474D 		.ascii	"SIGMA_A_D_GCOR_STRUCT\000"
 4026      415F415F 
 4026      445F4743 
 4026      4F525F53 
 4026      54525543 
 4027              	.LASF73:
 4028 02a4 666C6173 		.ascii	"flash\000"
 4028      6800
 4029              	.LASF21:
 4030 02aa 72656733 		.ascii	"reg32\000"
 4030      3200
 4031              	.LASF15:
 4032 02b0 666C6F61 		.ascii	"float32\000"
 4032      74333200 
 4033              	.LASF22:
 4034 02b8 73697A65 		.ascii	"sizetype\000"
 4034      74797065 
 4034      00
 4035              	.LASF32:
 4036 02c1 5349474D 		.ascii	"SIGMA_A_D_SetBufferGain\000"
 4036      415F415F 
 4036      445F5365 
 4036      74427566 
 4036      66657247 
 4037              	.LASF51:
 4038 02d9 5349474D 		.ascii	"SIGMA_A_D_GetResult32\000"
 4038      415F415F 
 4038      445F4765 
 4038      74526573 
 4038      756C7433 
 4039              	.LASF89:
 4040 02ef 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4040      4320342E 
 4040      392E3320 
 4040      32303135 
 4040      30333033 
 4041 0322 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4041      20726576 
 4041      6973696F 
 4041      6E203232 
 4041      31323230 
 4042 0355 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4042      66756E63 
 4042      74696F6E 
 4042      2D736563 
 4042      74696F6E 
 4043              	.LASF36:
 4044 037d 636F6865 		.ascii	"coherency\000"
 4044      72656E63 
 4044      7900
 4045              	.LASF35:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 107


 4046 0387 6761696E 		.ascii	"gain\000"
 4046      00
 4047              	.LASF16:
 4048 038c 666C6F61 		.ascii	"float\000"
 4048      7400
 4049              	.LASF79:
 4050 0392 5349474D 		.ascii	"SIGMA_A_D_Read16\000"
 4050      415F415F 
 4050      445F5265 
 4050      61643136 
 4050      00
 4051              	.LASF19:
 4052 03a3 72656738 		.ascii	"reg8\000"
 4052      00
 4053              	.LASF41:
 4054 03a8 5349474D 		.ascii	"SIGMA_A_D_ReadGCOR\000"
 4054      415F415F 
 4054      445F5265 
 4054      61644743 
 4054      4F5200
 4055              	.LASF74:
 4056 03bb 6E6F726D 		.ascii	"normalised\000"
 4056      616C6973 
 4056      656400
 4057              	.LASF1:
 4058 03c6 756E7369 		.ascii	"unsigned char\000"
 4058      676E6564 
 4058      20636861 
 4058      7200
 4059              	.LASF2:
 4060 03d4 73686F72 		.ascii	"short int\000"
 4060      7420696E 
 4060      7400
 4061              	.LASF75:
 4062 03de 67636F72 		.ascii	"gcorTmp\000"
 4062      546D7000 
 4063              	.LASF30:
 4064 03e6 5349474D 		.ascii	"SIGMA_A_D_Enable\000"
 4064      415F415F 
 4064      445F456E 
 4064      61626C65 
 4064      00
 4065              	.LASF81:
 4066 03f7 5349474D 		.ascii	"SIGMA_A_D_gcor\000"
 4066      415F415F 
 4066      445F6763 
 4066      6F7200
 4067              	.LASF65:
 4068 0406 7265736F 		.ascii	"resolution\000"
 4068      6C757469 
 4068      6F6E00
 4069              	.LASF56:
 4070 0411 5349474D 		.ascii	"SIGMA_A_D_CountsTo_mVolts\000"
 4070      415F415F 
 4070      445F436F 
 4070      756E7473 
 4070      546F5F6D 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 108


 4071              	.LASF63:
 4072 042b 636F6566 		.ascii	"coefA\000"
 4072      4100
 4073              	.LASF64:
 4074 0431 636F6566 		.ascii	"coefB\000"
 4074      4200
 4075              	.LASF61:
 4076 0437 5349474D 		.ascii	"SIGMA_A_D_CountsTo_uVolts\000"
 4076      415F415F 
 4076      445F436F 
 4076      756E7473 
 4076      546F5F75 
 4077              	.LASF18:
 4078 0451 63686172 		.ascii	"char\000"
 4078      00
 4079              	.LASF42:
 4080 0456 6756616C 		.ascii	"gValue\000"
 4080      756500
 4081              	.LASF26:
 4082 045d 636F6E66 		.ascii	"config\000"
 4082      696700
 4083              	.LASF24:
 4084 0464 6776616C 		.ascii	"gval\000"
 4084      00
 4085              	.LASF90:
 4086 0469 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SIGMA_A_D.c\000"
 4086      6E657261 
 4086      7465645F 
 4086      536F7572 
 4086      63655C50 
 4087              	.LASF45:
 4088 048e 5349474D 		.ascii	"SIGMA_A_D_StopConvert\000"
 4088      415F415F 
 4088      445F5374 
 4088      6F70436F 
 4088      6E766572 
 4089              	.LASF67:
 4090 04a4 72657374 		.ascii	"restart\000"
 4090      61727400 
 4091              	.LASF39:
 4092 04ac 746D7056 		.ascii	"tmpValue\000"
 4092      616C7565 
 4092      00
 4093              	.LASF53:
 4094 04b5 6F666673 		.ascii	"offset\000"
 4094      657400
 4095              	.LASF86:
 4096 04bc 5349474D 		.ascii	"SIGMA_A_D_Config\000"
 4096      415F415F 
 4096      445F436F 
 4096      6E666967 
 4096      00
 4097              	.LASF85:
 4098 04cd 5349474D 		.ascii	"SIGMA_A_D_started\000"
 4098      415F415F 
 4098      445F7374 
 4098      61727465 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 109


 4098      6400
 4099              	.LASF31:
 4100 04df 5349474D 		.ascii	"SIGMA_A_D_Stop\000"
 4100      415F415F 
 4100      445F5374 
 4100      6F7000
 4101              	.LASF57:
 4102 04ee 61646343 		.ascii	"adcCounts\000"
 4102      6F756E74 
 4102      7300
 4103              	.LASF80:
 4104 04f8 5349474D 		.ascii	"SIGMA_A_D_Read32\000"
 4104      415F415F 
 4104      445F5265 
 4104      61643332 
 4104      00
 4105              	.LASF27:
 4106 0509 656E6162 		.ascii	"enableInterrupts\000"
 4106      6C65496E 
 4106      74657272 
 4106      75707473 
 4106      00
 4107              	.LASF38:
 4108 051a 73746174 		.ascii	"status\000"
 4108      757300
 4109              	.LASF46:
 4110 0521 5349474D 		.ascii	"SIGMA_A_D_IsEndConversion\000"
 4110      415F415F 
 4110      445F4973 
 4110      456E6443 
 4110      6F6E7665 
 4111              	.LASF37:
 4112 053b 6761696E 		.ascii	"gainAdjust\000"
 4112      41646A75 
 4112      737400
 4113              	.LASF59:
 4114 0546 5349474D 		.ascii	"SIGMA_A_D_CountsTo_Volts\000"
 4114      415F415F 
 4114      445F436F 
 4114      756E7473 
 4114      546F5F56 
 4115              	.LASF13:
 4116 055f 696E7431 		.ascii	"int16\000"
 4116      3600
 4117              	.LASF69:
 4118 0565 5349474D 		.ascii	"SIGMA_A_D_GainCompensation\000"
 4118      415F415F 
 4118      445F4761 
 4118      696E436F 
 4118      6D70656E 
 4119              	.LASF40:
 4120 0580 5349474D 		.ascii	"SIGMA_A_D_SetGCOR\000"
 4120      415F415F 
 4120      445F5365 
 4120      7447434F 
 4120      5200
 4121              	.LASF29:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccoFgRlM.s 			page 110


 4122 0592 5349474D 		.ascii	"SIGMA_A_D_Start\000"
 4122      415F415F 
 4122      445F5374 
 4122      61727400 
 4123              	.LASF49:
 4124 05a2 72657375 		.ascii	"result\000"
 4124      6C7400
 4125              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
