ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_1_initVar
  19              		.bss
  20              		.type	UART_1_initVar, %object
  21              		.size	UART_1_initVar, 1
  22              	UART_1_initVar:
  23 0000 00       		.space	1
  24              		.comm	UART_1_txBuffer,256,4
  25              		.global	UART_1_txBufferRead
  26 0001 00       		.align	1
  27              		.type	UART_1_txBufferRead, %object
  28              		.size	UART_1_txBufferRead, 2
  29              	UART_1_txBufferRead:
  30 0002 0000     		.space	2
  31              		.global	UART_1_txBufferWrite
  32              		.align	1
  33              		.type	UART_1_txBufferWrite, %object
  34              		.size	UART_1_txBufferWrite, 2
  35              	UART_1_txBufferWrite:
  36 0004 0000     		.space	2
  37              		.global	UART_1_errorStatus
  38              		.type	UART_1_errorStatus, %object
  39              		.size	UART_1_errorStatus, 1
  40              	UART_1_errorStatus:
  41 0006 00       		.space	1
  42              		.comm	UART_1_rxBuffer,256,4
  43              		.global	UART_1_rxBufferRead
  44 0007 00       		.align	1
  45              		.type	UART_1_rxBufferRead, %object
  46              		.size	UART_1_rxBufferRead, 2
  47              	UART_1_rxBufferRead:
  48 0008 0000     		.space	2
  49              		.global	UART_1_rxBufferWrite
  50              		.align	1
  51              		.type	UART_1_rxBufferWrite, %object
  52              		.size	UART_1_rxBufferWrite, 2
  53              	UART_1_rxBufferWrite:
  54 000a 0000     		.space	2
  55              		.global	UART_1_rxBufferLoopDetect
  56              		.type	UART_1_rxBufferLoopDetect, %object
  57              		.size	UART_1_rxBufferLoopDetect, 1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 2


  58              	UART_1_rxBufferLoopDetect:
  59 000c 00       		.space	1
  60              		.global	UART_1_rxBufferOverflow
  61              		.type	UART_1_rxBufferOverflow, %object
  62              		.size	UART_1_rxBufferOverflow, 1
  63              	UART_1_rxBufferOverflow:
  64 000d 00       		.space	1
  65              		.section	.text.UART_1_Start,"ax",%progbits
  66              		.align	2
  67              		.global	UART_1_Start
  68              		.thumb
  69              		.thumb_func
  70              		.type	UART_1_Start, %function
  71              	UART_1_Start:
  72              	.LFB0:
  73              		.file 1 ".\\Generated_Source\\PSoC5\\UART_1.c"
   1:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_1.c **** *
   5:.\Generated_Source\PSoC5/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_1.c **** *
   8:.\Generated_Source\PSoC5/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_1.c **** *
  10:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_1.c **** 
  17:.\Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_1.c **** 
  22:.\Generated_Source\PSoC5/UART_1.c **** 
  23:.\Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_1.c **** 
  27:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_1.c **** 
  29:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint16 UART_1_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_1.c **** 
  35:.\Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint16 UART_1_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint16 UART_1_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 3


  42:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_1.c **** 
  48:.\Generated_Source\PSoC5/UART_1.c **** 
  49:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_1.c **** *
  53:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:.\Generated_Source\PSoC5/UART_1.c **** *
  59:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_1.c **** *
  62:.\Generated_Source\PSoC5/UART_1.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_1.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_1.c **** *
  65:.\Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:.\Generated_Source\PSoC5/UART_1.c **** *
  72:.\Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_1.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_1.c **** *
  75:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:.\Generated_Source\PSoC5/UART_1.c **** {
  74              		.loc 1 77 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  84              		.loc 1 79 0
  85 0004 054B     		ldr	r3, .L3
  86 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  87 0008 002B     		cmp	r3, #0
  88 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART_1.c ****     {
  81:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  89              		.loc 1 81 0
  90 000c FFF7FEFF 		bl	UART_1_Init
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 4


  82:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  91              		.loc 1 82 0
  92 0010 024B     		ldr	r3, .L3
  93 0012 0122     		movs	r2, #1
  94 0014 1A70     		strb	r2, [r3]
  95              	.L2:
  83:.\Generated_Source\PSoC5/UART_1.c ****     }
  84:.\Generated_Source\PSoC5/UART_1.c **** 
  85:.\Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  96              		.loc 1 85 0
  97 0016 FFF7FEFF 		bl	UART_1_Enable
  86:.\Generated_Source\PSoC5/UART_1.c **** }
  98              		.loc 1 86 0
  99 001a 80BD     		pop	{r7, pc}
 100              	.L4:
 101              		.align	2
 102              	.L3:
 103 001c 00000000 		.word	UART_1_initVar
 104              		.cfi_endproc
 105              	.LFE0:
 106              		.size	UART_1_Start, .-UART_1_Start
 107              		.section	.text.UART_1_Init,"ax",%progbits
 108              		.align	2
 109              		.global	UART_1_Init
 110              		.thumb
 111              		.thumb_func
 112              		.type	UART_1_Init, %function
 113              	UART_1_Init:
 114              	.LFB1:
  87:.\Generated_Source\PSoC5/UART_1.c **** 
  88:.\Generated_Source\PSoC5/UART_1.c **** 
  89:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_1.c **** *
  93:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:.\Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_1.c **** *
  99:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_1.c **** *
 102:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_1.c **** *
 105:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:.\Generated_Source\PSoC5/UART_1.c **** {
 115              		.loc 1 107 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 5


 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_1.c **** 
 110:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 125              		.loc 1 112 0
 126 0004 0420     		movs	r0, #4
 127 0006 1149     		ldr	r1, .L6
 128 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 129              		.loc 1 113 0
 130 000c 0420     		movs	r0, #4
 131 000e 0721     		movs	r1, #7
 132 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 133              		.loc 1 114 0
 134 0014 0E4B     		ldr	r3, .L6+4
 135 0016 0022     		movs	r2, #0
 136 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_1.c **** 
 117:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_1.c **** 
 123:.\Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 137              		.loc 1 124 0
 138 001a 0E4B     		ldr	r3, .L6+8
 139 001c 7222     		movs	r2, #114
 140 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 141              		.loc 1 126 0
 142 0020 0D4B     		ldr	r3, .L6+12
 143 0022 2022     		movs	r2, #32
 144 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_1.c **** 
 129:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 145              		.loc 1 132 0
 146 0026 0520     		movs	r0, #5
 147 0028 0C49     		ldr	r1, .L6+16
 148 002a FFF7FEFF 		bl	CyIntSetVector
 133:.\Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 149              		.loc 1 133 0
 150 002e 0520     		movs	r0, #5
 151 0030 0721     		movs	r1, #7
 152 0032 FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 6


 134:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_1.c **** 
 136:.\Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 153              		.loc 1 138 0
 154 0036 0A4B     		ldr	r3, .L6+20
 155 0038 0622     		movs	r2, #6
 156 003a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 157              		.loc 1 139 0
 158 003c 094B     		ldr	r3, .L6+24
 159 003e 4722     		movs	r2, #71
 160 0040 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_1.c ****         #else
 142:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_1.c **** 
 146:.\Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 161              		.loc 1 148 0
 162 0042 094B     		ldr	r3, .L6+28
 163 0044 0222     		movs	r2, #2
 164 0046 1A70     		strb	r2, [r3]
 149:.\Generated_Source\PSoC5/UART_1.c ****         #else
 150:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_1.c **** 
 153:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_1.c **** 
 155:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_1.c **** }
 165              		.loc 1 160 0
 166 0048 80BD     		pop	{r7, pc}
 167              	.L7:
 168 004a 00BF     		.align	2
 169              	.L6:
 170 004c 00000000 		.word	UART_1_RXISR
 171 0050 00000000 		.word	UART_1_errorStatus
 172 0054 8B650040 		.word	1073767819
 173 0058 8B640040 		.word	1073767563
 174 005c 00000000 		.word	UART_1_TXISR
 175 0060 2E640040 		.word	1073767470
 176 0064 3E640040 		.word	1073767486
 177 0068 8E640040 		.word	1073767566
 178              		.cfi_endproc
 179              	.LFE1:
 180              		.size	UART_1_Init, .-UART_1_Init
 181              		.section	.text.UART_1_Enable,"ax",%progbits
 182              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 7


 183              		.global	UART_1_Enable
 184              		.thumb
 185              		.thumb_func
 186              		.type	UART_1_Enable, %function
 187              	UART_1_Enable:
 188              	.LFB2:
 161:.\Generated_Source\PSoC5/UART_1.c **** 
 162:.\Generated_Source\PSoC5/UART_1.c **** 
 163:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_1.c **** *
 167:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:.\Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_1.c **** 
 173:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_1.c **** *
 176:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_1.c **** *
 179:.\Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_1.c **** *
 182:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_1.c **** {
 189              		.loc 1 184 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 201              		.loc 1 186 0
 202 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 203 000a 0346     		mov	r3, r0
 204 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART_1.c **** 
 188:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 205              		.loc 1 190 0
 206 000e 154A     		ldr	r2, .L9
 207 0010 144B     		ldr	r3, .L9
 208 0012 1B78     		ldrb	r3, [r3]
 209 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 8


 210 0016 43F02003 		orr	r3, r3, #32
 211 001a DBB2     		uxtb	r3, r3
 212 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/UART_1.c **** 
 192:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 213              		.loc 1 193 0
 214 001e 124A     		ldr	r2, .L9+4
 215 0020 114B     		ldr	r3, .L9+4
 216 0022 1B78     		ldrb	r3, [r3]
 217 0024 DBB2     		uxtb	r3, r3
 218 0026 43F01003 		orr	r3, r3, #16
 219 002a DBB2     		uxtb	r3, r3
 220 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/UART_1.c **** 
 195:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 221              		.loc 1 196 0
 222 002e 0F4B     		ldr	r3, .L9+8
 223 0030 1022     		movs	r2, #16
 224 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/UART_1.c **** 
 198:.\Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_1.c **** 
 204:.\Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_1.c **** 
 210:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 225              		.loc 1 211 0
 226 0034 0E4A     		ldr	r2, .L9+12
 227 0036 0E4B     		ldr	r3, .L9+12
 228 0038 1B78     		ldrb	r3, [r3]
 229 003a DBB2     		uxtb	r3, r3
 230 003c 43F01003 		orr	r3, r3, #16
 231 0040 DBB2     		uxtb	r3, r3
 232 0042 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 233              		.loc 1 213 0
 234 0044 0B4B     		ldr	r3, .L9+16
 235 0046 2022     		movs	r2, #32
 236 0048 1A60     		str	r2, [r3]
 214:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 237              		.loc 1 214 0
 238 004a 084B     		ldr	r3, .L9+8
 239 004c 2022     		movs	r2, #32
 240 004e 1A60     		str	r2, [r3]
 215:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 9


 217:.\Generated_Source\PSoC5/UART_1.c **** 
 218:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 241              		.loc 1 219 0
 242 0050 FFF7FEFF 		bl	UART_1_IntClock_Start
 220:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_1.c **** 
 222:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 243              		.loc 1 222 0
 244 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 245 0056 1846     		mov	r0, r3
 246 0058 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART_1.c **** }
 247              		.loc 1 223 0
 248 005c 0837     		adds	r7, r7, #8
 249              		.cfi_def_cfa_offset 8
 250 005e BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0060 80BD     		pop	{r7, pc}
 254              	.L10:
 255 0062 00BF     		.align	2
 256              	.L9:
 257 0064 9B650040 		.word	1073767835
 258 0068 9B640040 		.word	1073767579
 259 006c 00E100E0 		.word	-536813312
 260 0070 9E640040 		.word	1073767582
 261 0074 80E200E0 		.word	-536812928
 262              		.cfi_endproc
 263              	.LFE2:
 264              		.size	UART_1_Enable, .-UART_1_Enable
 265              		.section	.text.UART_1_Stop,"ax",%progbits
 266              		.align	2
 267              		.global	UART_1_Stop
 268              		.thumb
 269              		.thumb_func
 270              		.type	UART_1_Stop, %function
 271              	UART_1_Stop:
 272              	.LFB3:
 224:.\Generated_Source\PSoC5/UART_1.c **** 
 225:.\Generated_Source\PSoC5/UART_1.c **** 
 226:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_1.c **** *
 230:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_1.c **** *
 233:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_1.c **** *
 236:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_1.c **** *
 239:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_1.c **** {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 10


 273              		.loc 1 241 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 82B0     		sub	sp, sp, #8
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 285              		.loc 1 243 0
 286 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 287 000a 0346     		mov	r3, r0
 288 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART_1.c **** 
 245:.\Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 289              		.loc 1 247 0
 290 000e 134A     		ldr	r2, .L12
 291 0010 124B     		ldr	r3, .L12
 292 0012 1B78     		ldrb	r3, [r3]
 293 0014 DBB2     		uxtb	r3, r3
 294 0016 23F02003 		bic	r3, r3, #32
 295 001a DBB2     		uxtb	r3, r3
 296 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_1.c **** 
 250:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_1.c **** 
 256:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 297              		.loc 1 257 0
 298 001e FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_1.c **** 
 260:.\Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 299              		.loc 1 262 0
 300 0022 0F4A     		ldr	r2, .L12+4
 301 0024 0E4B     		ldr	r3, .L12+4
 302 0026 1B78     		ldrb	r3, [r3]
 303 0028 DBB2     		uxtb	r3, r3
 304 002a 23F01003 		bic	r3, r3, #16
 305 002e DBB2     		uxtb	r3, r3
 306 0030 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/UART_1.c **** 
 264:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 11


 265:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 307              		.loc 1 265 0
 308 0032 0C4B     		ldr	r3, .L12+8
 309 0034 1022     		movs	r2, #16
 310 0036 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_1.c **** 
 269:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 311              		.loc 1 270 0
 312 0038 0B4A     		ldr	r2, .L12+12
 313 003a 0B4B     		ldr	r3, .L12+12
 314 003c 1B78     		ldrb	r3, [r3]
 315 003e DBB2     		uxtb	r3, r3
 316 0040 23F01003 		bic	r3, r3, #16
 317 0044 DBB2     		uxtb	r3, r3
 318 0046 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART_1.c **** 
 272:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 319              		.loc 1 273 0
 320 0048 064B     		ldr	r3, .L12+8
 321 004a 2022     		movs	r2, #32
 322 004c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_1.c **** 
 277:.\Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 323              		.loc 1 277 0
 324 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 0050 1846     		mov	r0, r3
 326 0052 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART_1.c **** }
 327              		.loc 1 278 0
 328 0056 0837     		adds	r7, r7, #8
 329              		.cfi_def_cfa_offset 8
 330 0058 BD46     		mov	sp, r7
 331              		.cfi_def_cfa_register 13
 332              		@ sp needed
 333 005a 80BD     		pop	{r7, pc}
 334              	.L13:
 335              		.align	2
 336              	.L12:
 337 005c 9B650040 		.word	1073767835
 338 0060 9B640040 		.word	1073767579
 339 0064 80E100E0 		.word	-536813184
 340 0068 9E640040 		.word	1073767582
 341              		.cfi_endproc
 342              	.LFE3:
 343              		.size	UART_1_Stop, .-UART_1_Stop
 344              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 345              		.align	2
 346              		.global	UART_1_ReadControlRegister
 347              		.thumb
 348              		.thumb_func
 349              		.type	UART_1_ReadControlRegister, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 12


 350              	UART_1_ReadControlRegister:
 351              	.LFB4:
 279:.\Generated_Source\PSoC5/UART_1.c **** 
 280:.\Generated_Source\PSoC5/UART_1.c **** 
 281:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_1.c **** *
 285:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_1.c **** *
 288:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_1.c **** *
 291:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_1.c **** *
 294:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_1.c **** {
 352              		.loc 1 296 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_1.c ****         return(0u);
 362              		.loc 1 298 0
 363 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/UART_1.c ****     #else
 300:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_1.c **** }
 364              		.loc 1 302 0
 365 0006 1846     		mov	r0, r3
 366 0008 BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 000a 5DF8047B 		ldr	r7, [sp], #4
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 000e 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE4:
 375              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 376              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 377              		.align	2
 378              		.global	UART_1_WriteControlRegister
 379              		.thumb
 380              		.thumb_func
 381              		.type	UART_1_WriteControlRegister, %function
 382              	UART_1_WriteControlRegister:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 13


 383              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_1.c **** 
 304:.\Generated_Source\PSoC5/UART_1.c **** 
 305:.\Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_1.c **** *
 309:.\Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_1.c **** *
 312:.\Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_1.c **** *
 315:.\Generated_Source\PSoC5/UART_1.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_1.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_1.c **** *
 318:.\Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_1.c **** {
 384              		.loc 1 320 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 396 0006 0346     		mov	r3, r0
 397 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_1.c ****         {
 324:.\Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_1.c ****         }
 326:.\Generated_Source\PSoC5/UART_1.c ****     #else
 327:.\Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART_1.c **** }
 398              		.loc 1 329 0
 399 000a 0C37     		adds	r7, r7, #12
 400              		.cfi_def_cfa_offset 4
 401 000c BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 000e 5DF8047B 		ldr	r7, [sp], #4
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0012 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE5:
 410              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 411              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 412              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 14


 413              		.global	UART_1_SetRxInterruptMode
 414              		.thumb
 415              		.thumb_func
 416              		.type	UART_1_SetRxInterruptMode, %function
 417              	UART_1_SetRxInterruptMode:
 418              	.LFB6:
 330:.\Generated_Source\PSoC5/UART_1.c **** 
 331:.\Generated_Source\PSoC5/UART_1.c **** 
 332:.\Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_1.c ****     *
 337:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_1.c ****     *
 340:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_1.c ****     *
 352:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_1.c ****     *
 355:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_1.c ****     *
 358:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_1.c ****     {
 419              		.loc 1 360 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0002 83B0     		sub	sp, sp, #12
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 0346     		mov	r3, r0
 432 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 433              		.loc 1 361 0
 434 000a 044A     		ldr	r2, .L18
 435 000c FB79     		ldrb	r3, [r7, #7]
 436 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/UART_1.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 15


 437              		.loc 1 362 0
 438 0010 0C37     		adds	r7, r7, #12
 439              		.cfi_def_cfa_offset 4
 440 0012 BD46     		mov	sp, r7
 441              		.cfi_def_cfa_register 13
 442              		@ sp needed
 443 0014 5DF8047B 		ldr	r7, [sp], #4
 444              		.cfi_restore 7
 445              		.cfi_def_cfa_offset 0
 446 0018 7047     		bx	lr
 447              	.L19:
 448 001a 00BF     		.align	2
 449              	.L18:
 450 001c 8B640040 		.word	1073767563
 451              		.cfi_endproc
 452              	.LFE6:
 453              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 454              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 455              		.align	2
 456              		.global	UART_1_ReadRxData
 457              		.thumb
 458              		.thumb_func
 459              		.type	UART_1_ReadRxData, %function
 460              	UART_1_ReadRxData:
 461              	.LFB7:
 363:.\Generated_Source\PSoC5/UART_1.c **** 
 364:.\Generated_Source\PSoC5/UART_1.c **** 
 365:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_1.c ****     *
 369:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_1.c ****     *
 373:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_1.c ****     *
 376:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_1.c ****     *
 379:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_1.c ****     *
 388:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_1.c ****     *
 391:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_1.c ****     {
 462              		.loc 1 393 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 16


 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 8
 465              		@ frame_needed = 1, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 467 0000 80B4     		push	{r7}
 468              		.cfi_def_cfa_offset 4
 469              		.cfi_offset 7, -4
 470 0002 83B0     		sub	sp, sp, #12
 471              		.cfi_def_cfa_offset 16
 472 0004 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_1.c **** 
 396:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_1.c **** 
 398:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_1.c **** 
 401:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 474              		.loc 1 402 0
 475 0006 1C4B     		ldr	r3, .L27
 476 0008 1022     		movs	r2, #16
 477 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/UART_1.c **** 
 404:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 478              		.loc 1 404 0
 479 000c 1B4B     		ldr	r3, .L27+4
 480 000e 1B88     		ldrh	r3, [r3]	@ movhi
 481 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 482              		.loc 1 405 0
 483 0012 1B4B     		ldr	r3, .L27+8
 484 0014 1B88     		ldrh	r3, [r3]	@ movhi
 485 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/UART_1.c **** 
 407:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 486              		.loc 1 407 0
 487 0018 1A4B     		ldr	r3, .L27+12
 488 001a 1B78     		ldrb	r3, [r3]
 489 001c DBB2     		uxtb	r3, r3
 490 001e 002B     		cmp	r3, #0
 491 0020 03D1     		bne	.L21
 492              		.loc 1 407 0 is_stmt 0 discriminator 1
 493 0022 BA88     		ldrh	r2, [r7, #4]
 494 0024 7B88     		ldrh	r3, [r7, #2]
 495 0026 9A42     		cmp	r2, r3
 496 0028 18D0     		beq	.L22
 497              	.L21:
 408:.\Generated_Source\PSoC5/UART_1.c ****         {
 409:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 498              		.loc 1 409 0 is_stmt 1
 499 002a BB88     		ldrh	r3, [r7, #4]
 500 002c 164A     		ldr	r2, .L27+16
 501 002e D35C     		ldrb	r3, [r2, r3]
 502 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 17


 503              		.loc 1 410 0
 504 0032 BB88     		ldrh	r3, [r7, #4]
 505 0034 0133     		adds	r3, r3, #1
 506 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/UART_1.c **** 
 412:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 507              		.loc 1 412 0
 508 0038 BB88     		ldrh	r3, [r7, #4]
 509 003a FF2B     		cmp	r3, #255
 510 003c 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/UART_1.c ****             {
 414:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 511              		.loc 1 414 0
 512 003e 0023     		movs	r3, #0
 513 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 514              	.L23:
 415:.\Generated_Source\PSoC5/UART_1.c ****             }
 416:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 515              		.loc 1 417 0
 516 0042 0E4A     		ldr	r2, .L27+4
 517 0044 BB88     		ldrh	r3, [r7, #4]	@ movhi
 518 0046 1380     		strh	r3, [r2]	@ movhi
 418:.\Generated_Source\PSoC5/UART_1.c **** 
 419:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 519              		.loc 1 419 0
 520 0048 0E4B     		ldr	r3, .L27+12
 521 004a 1B78     		ldrb	r3, [r3]
 522 004c DBB2     		uxtb	r3, r3
 523 004e 002B     		cmp	r3, #0
 524 0050 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/UART_1.c ****             {
 421:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 525              		.loc 1 421 0
 526 0052 0C4B     		ldr	r3, .L27+12
 527 0054 0022     		movs	r2, #0
 528 0056 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/UART_1.c ****             {
 529              		.loc 1 419 0
 530 0058 03E0     		b	.L25
 531              	.L24:
 532 005a 02E0     		b	.L25
 533              	.L22:
 422:.\Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_1.c ****                             */
 430:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_1.c ****                         }
 432:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 18


 436:.\Generated_Source\PSoC5/UART_1.c ****             }
 437:.\Generated_Source\PSoC5/UART_1.c ****         }
 438:.\Generated_Source\PSoC5/UART_1.c ****         else
 439:.\Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 534              		.loc 1 440 0
 535 005c 0B4B     		ldr	r3, .L27+20
 536 005e 1B78     		ldrb	r3, [r3]
 537 0060 FB71     		strb	r3, [r7, #7]
 538              	.L25:
 441:.\Generated_Source\PSoC5/UART_1.c ****         }
 442:.\Generated_Source\PSoC5/UART_1.c **** 
 443:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 539              		.loc 1 443 0
 540 0062 0B4B     		ldr	r3, .L27+24
 541 0064 1022     		movs	r2, #16
 542 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/UART_1.c **** 
 445:.\Generated_Source\PSoC5/UART_1.c ****     #else
 446:.\Generated_Source\PSoC5/UART_1.c **** 
 447:.\Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_1.c **** 
 450:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_1.c **** 
 452:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 543              		.loc 1 452 0
 544 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/UART_1.c ****     }
 545              		.loc 1 453 0
 546 006a 1846     		mov	r0, r3
 547 006c 0C37     		adds	r7, r7, #12
 548              		.cfi_def_cfa_offset 4
 549 006e BD46     		mov	sp, r7
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 0070 5DF8047B 		ldr	r7, [sp], #4
 553              		.cfi_restore 7
 554              		.cfi_def_cfa_offset 0
 555 0074 7047     		bx	lr
 556              	.L28:
 557 0076 00BF     		.align	2
 558              	.L27:
 559 0078 80E100E0 		.word	-536813184
 560 007c 00000000 		.word	UART_1_rxBufferRead
 561 0080 00000000 		.word	UART_1_rxBufferWrite
 562 0084 00000000 		.word	UART_1_rxBufferLoopDetect
 563 0088 00000000 		.word	UART_1_rxBuffer
 564 008c 4B640040 		.word	1073767499
 565 0090 00E100E0 		.word	-536813312
 566              		.cfi_endproc
 567              	.LFE7:
 568              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 569              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 570              		.align	2
 571              		.global	UART_1_ReadRxStatus
 572              		.thumb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 19


 573              		.thumb_func
 574              		.type	UART_1_ReadRxStatus, %function
 575              	UART_1_ReadRxStatus:
 576              	.LFB8:
 454:.\Generated_Source\PSoC5/UART_1.c **** 
 455:.\Generated_Source\PSoC5/UART_1.c **** 
 456:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_1.c ****     *
 460:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_1.c ****     *
 464:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_1.c ****     *
 467:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_1.c ****     *
 470:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_1.c ****     *
 476:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_1.c ****     *
 484:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_1.c ****     {
 577              		.loc 1 486 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              		.cfi_def_cfa_offset 4
 584              		.cfi_offset 7, -4
 585 0002 83B0     		sub	sp, sp, #12
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_1.c **** 
 489:.\Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 589              		.loc 1 489 0
 590 0006 0C4B     		ldr	r3, .L32
 591 0008 1B78     		ldrb	r3, [r3]
 592 000a DBB2     		uxtb	r3, r3
 593 000c 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 20


 594 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/UART_1.c **** 
 491:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 595              		.loc 1 492 0
 596 0012 0A4B     		ldr	r3, .L32+4
 597 0014 1B78     		ldrb	r3, [r3]
 598 0016 DBB2     		uxtb	r3, r3
 599 0018 002B     		cmp	r3, #0
 600 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/UART_1.c ****         {
 494:.\Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 601              		.loc 1 494 0
 602 001c FB79     		ldrb	r3, [r7, #7]
 603 001e 63F07F03 		orn	r3, r3, #127
 604 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 605              		.loc 1 495 0
 606 0024 054B     		ldr	r3, .L32+4
 607 0026 0022     		movs	r2, #0
 608 0028 1A70     		strb	r2, [r3]
 609              	.L30:
 496:.\Generated_Source\PSoC5/UART_1.c ****         }
 497:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_1.c **** 
 499:.\Generated_Source\PSoC5/UART_1.c ****         return(status);
 610              		.loc 1 499 0
 611 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/UART_1.c ****     }
 612              		.loc 1 500 0
 613 002c 1846     		mov	r0, r3
 614 002e 0C37     		adds	r7, r7, #12
 615              		.cfi_def_cfa_offset 4
 616 0030 BD46     		mov	sp, r7
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0032 5DF8047B 		ldr	r7, [sp], #4
 620              		.cfi_restore 7
 621              		.cfi_def_cfa_offset 0
 622 0036 7047     		bx	lr
 623              	.L33:
 624              		.align	2
 625              	.L32:
 626 0038 6B640040 		.word	1073767531
 627 003c 00000000 		.word	UART_1_rxBufferOverflow
 628              		.cfi_endproc
 629              	.LFE8:
 630              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 631              		.section	.text.UART_1_GetChar,"ax",%progbits
 632              		.align	2
 633              		.global	UART_1_GetChar
 634              		.thumb
 635              		.thumb_func
 636              		.type	UART_1_GetChar, %function
 637              	UART_1_GetChar:
 638              	.LFB9:
 501:.\Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 21


 502:.\Generated_Source\PSoC5/UART_1.c **** 
 503:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_1.c ****     *
 507:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:.\Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_1.c ****     *
 512:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_1.c ****     *
 515:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_1.c ****     *
 519:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_1.c ****     *
 528:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_1.c ****     *
 531:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_1.c ****     {
 639              		.loc 1 533 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644 0000 80B4     		push	{r7}
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 7, -4
 647 0002 83B0     		sub	sp, sp, #12
 648              		.cfi_def_cfa_offset 16
 649 0004 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 651              		.loc 1 534 0
 652 0006 0023     		movs	r3, #0
 653 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART_1.c **** 
 537:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_1.c **** 
 541:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 654              		.loc 1 542 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 22


 655 000a 234B     		ldr	r3, .L41
 656 000c 1022     		movs	r2, #16
 657 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/UART_1.c **** 
 544:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 658              		.loc 1 544 0
 659 0010 224B     		ldr	r3, .L41+4
 660 0012 1B88     		ldrh	r3, [r3]	@ movhi
 661 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 662              		.loc 1 545 0
 663 0016 224B     		ldr	r3, .L41+8
 664 0018 1B88     		ldrh	r3, [r3]	@ movhi
 665 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/UART_1.c **** 
 547:.\Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 666              		.loc 1 547 0
 667 001c 214B     		ldr	r3, .L41+12
 668 001e 1B78     		ldrb	r3, [r3]
 669 0020 DBB2     		uxtb	r3, r3
 670 0022 002B     		cmp	r3, #0
 671 0024 03D1     		bne	.L35
 672              		.loc 1 547 0 is_stmt 0 discriminator 1
 673 0026 BA88     		ldrh	r2, [r7, #4]
 674 0028 7B88     		ldrh	r3, [r7, #2]
 675 002a 9A42     		cmp	r2, r3
 676 002c 18D0     		beq	.L36
 677              	.L35:
 548:.\Generated_Source\PSoC5/UART_1.c ****         {
 549:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 678              		.loc 1 549 0 is_stmt 1
 679 002e BB88     		ldrh	r3, [r7, #4]
 680 0030 1D4A     		ldr	r2, .L41+16
 681 0032 D35C     		ldrb	r3, [r2, r3]
 682 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 683              		.loc 1 550 0
 684 0036 BB88     		ldrh	r3, [r7, #4]
 685 0038 0133     		adds	r3, r3, #1
 686 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 687              		.loc 1 551 0
 688 003c BB88     		ldrh	r3, [r7, #4]
 689 003e FF2B     		cmp	r3, #255
 690 0040 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/UART_1.c ****             {
 553:.\Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 691              		.loc 1 553 0
 692 0042 0023     		movs	r3, #0
 693 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 694              	.L37:
 554:.\Generated_Source\PSoC5/UART_1.c ****             }
 555:.\Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 695              		.loc 1 556 0
 696 0046 154A     		ldr	r2, .L41+4
 697 0048 BB88     		ldrh	r3, [r7, #4]	@ movhi
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 23


 698 004a 1380     		strh	r3, [r2]	@ movhi
 557:.\Generated_Source\PSoC5/UART_1.c **** 
 558:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 699              		.loc 1 558 0
 700 004c 154B     		ldr	r3, .L41+12
 701 004e 1B78     		ldrb	r3, [r3]
 702 0050 DBB2     		uxtb	r3, r3
 703 0052 002B     		cmp	r3, #0
 704 0054 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/UART_1.c ****             {
 560:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 705              		.loc 1 560 0
 706 0056 134B     		ldr	r3, .L41+12
 707 0058 0022     		movs	r2, #0
 708 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/UART_1.c ****             {
 709              		.loc 1 558 0
 710 005c 12E0     		b	.L39
 711              	.L38:
 712 005e 11E0     		b	.L39
 713              	.L36:
 561:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_1.c ****                             */
 569:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_1.c ****                         }
 571:.\Generated_Source\PSoC5/UART_1.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_1.c ****             }
 576:.\Generated_Source\PSoC5/UART_1.c **** 
 577:.\Generated_Source\PSoC5/UART_1.c ****         }
 578:.\Generated_Source\PSoC5/UART_1.c ****         else
 579:.\Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 714              		.loc 1 579 0
 715 0060 124B     		ldr	r3, .L41+20
 716 0062 1B78     		ldrb	r3, [r3]
 717 0064 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 718              		.loc 1 580 0
 719 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 720 0068 03F02003 		and	r3, r3, #32
 721 006c 002B     		cmp	r3, #0
 722 006e 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 723              		.loc 1 582 0
 724 0070 0F4B     		ldr	r3, .L41+24
 725 0072 1B78     		ldrb	r3, [r3]
 726 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 24


 584:.\Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 727              		.loc 1 585 0
 728 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 729 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 730              		.loc 1 584 0
 731 007c 002B     		cmp	r3, #0
 732 007e 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/UART_1.c ****                 {
 587:.\Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 733              		.loc 1 587 0
 734 0080 0023     		movs	r3, #0
 735 0082 FB71     		strb	r3, [r7, #7]
 736              	.L39:
 588:.\Generated_Source\PSoC5/UART_1.c ****                 }
 589:.\Generated_Source\PSoC5/UART_1.c ****             }
 590:.\Generated_Source\PSoC5/UART_1.c ****         }
 591:.\Generated_Source\PSoC5/UART_1.c **** 
 592:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 737              		.loc 1 592 0
 738 0084 0B4B     		ldr	r3, .L41+28
 739 0086 1022     		movs	r2, #16
 740 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/UART_1.c **** 
 594:.\Generated_Source\PSoC5/UART_1.c ****     #else
 595:.\Generated_Source\PSoC5/UART_1.c **** 
 596:.\Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_1.c ****         {
 599:.\Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_1.c **** 
 602:.\Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_1.c ****             {
 606:.\Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_1.c ****             }
 608:.\Generated_Source\PSoC5/UART_1.c ****         }
 609:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_1.c **** 
 611:.\Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 741              		.loc 1 611 0
 742 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/UART_1.c ****     }
 743              		.loc 1 612 0
 744 008c 1846     		mov	r0, r3
 745 008e 0C37     		adds	r7, r7, #12
 746              		.cfi_def_cfa_offset 4
 747 0090 BD46     		mov	sp, r7
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 0092 5DF8047B 		ldr	r7, [sp], #4
 751              		.cfi_restore 7
 752              		.cfi_def_cfa_offset 0
 753 0096 7047     		bx	lr
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 25


 754              	.L42:
 755              		.align	2
 756              	.L41:
 757 0098 80E100E0 		.word	-536813184
 758 009c 00000000 		.word	UART_1_rxBufferRead
 759 00a0 00000000 		.word	UART_1_rxBufferWrite
 760 00a4 00000000 		.word	UART_1_rxBufferLoopDetect
 761 00a8 00000000 		.word	UART_1_rxBuffer
 762 00ac 6B640040 		.word	1073767531
 763 00b0 4B640040 		.word	1073767499
 764 00b4 00E100E0 		.word	-536813312
 765              		.cfi_endproc
 766              	.LFE9:
 767              		.size	UART_1_GetChar, .-UART_1_GetChar
 768              		.section	.text.UART_1_GetByte,"ax",%progbits
 769              		.align	2
 770              		.global	UART_1_GetByte
 771              		.thumb
 772              		.thumb_func
 773              		.type	UART_1_GetByte, %function
 774              	UART_1_GetByte:
 775              	.LFB10:
 613:.\Generated_Source\PSoC5/UART_1.c **** 
 614:.\Generated_Source\PSoC5/UART_1.c **** 
 615:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_1.c ****     *
 619:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_1.c ****     *
 623:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_1.c ****     *
 626:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_1.c ****     *
 630:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_1.c ****     *
 633:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_1.c ****     {
 776              		.loc 1 635 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 90B5     		push	{r4, r7, lr}
 781              		.cfi_def_cfa_offset 12
 782              		.cfi_offset 4, -12
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 83B0     		sub	sp, sp, #12
 786              		.cfi_def_cfa_offset 24
 787 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 26


 788              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/UART_1.c ****         
 637:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 789              		.loc 1 640 0
 790 0006 0C4B     		ldr	r3, .L45
 791 0008 1022     		movs	r2, #16
 792 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 793              		.loc 1 641 0
 794 000c 0B4B     		ldr	r3, .L45+4
 795 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 796 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 797              		.loc 1 642 0
 798 0012 0A4B     		ldr	r3, .L45+4
 799 0014 0022     		movs	r2, #0
 800 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 801              		.loc 1 643 0
 802 0018 094B     		ldr	r3, .L45+8
 803 001a 1022     		movs	r2, #16
 804 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 805              		.loc 1 644 0
 806 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 807 0020 1B02     		lsls	r3, r3, #8
 808 0022 9CB2     		uxth	r4, r3
 809 0024 FFF7FEFF 		bl	UART_1_ReadRxData
 810 0028 0346     		mov	r3, r0
 811 002a 9BB2     		uxth	r3, r3
 812 002c 2343     		orrs	r3, r3, r4
 813 002e 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/UART_1.c ****     #else
 646:.\Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_1.c ****         
 649:.\Generated_Source\PSoC5/UART_1.c ****     }
 814              		.loc 1 649 0
 815 0030 1846     		mov	r0, r3
 816 0032 0C37     		adds	r7, r7, #12
 817              		.cfi_def_cfa_offset 12
 818 0034 BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0036 90BD     		pop	{r4, r7, pc}
 822              	.L46:
 823              		.align	2
 824              	.L45:
 825 0038 80E100E0 		.word	-536813184
 826 003c 00000000 		.word	UART_1_errorStatus
 827 0040 00E100E0 		.word	-536813312
 828              		.cfi_endproc
 829              	.LFE10:
 830              		.size	UART_1_GetByte, .-UART_1_GetByte
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 27


 831              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 832              		.align	2
 833              		.global	UART_1_GetRxBufferSize
 834              		.thumb
 835              		.thumb_func
 836              		.type	UART_1_GetRxBufferSize, %function
 837              	UART_1_GetRxBufferSize:
 838              	.LFB11:
 650:.\Generated_Source\PSoC5/UART_1.c **** 
 651:.\Generated_Source\PSoC5/UART_1.c **** 
 652:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_1.c ****     *
 656:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_1.c ****     *
 664:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_1.c ****     *
 667:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_1.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_1.c ****     *
 671:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_1.c ****     *
 676:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_1.c ****     *
 679:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_1.c ****     *
 682:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_1.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_1.c ****     {
 839              		.loc 1 685 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 7, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/UART_1.c ****         uint16 size;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 28


 687:.\Generated_Source\PSoC5/UART_1.c **** 
 688:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_1.c **** 
 690:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 851              		.loc 1 691 0
 852 0006 1E4B     		ldr	r3, .L54
 853 0008 1022     		movs	r2, #16
 854 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/UART_1.c **** 
 693:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 855              		.loc 1 693 0
 856 000c 1D4B     		ldr	r3, .L54+4
 857 000e 1B88     		ldrh	r3, [r3]	@ movhi
 858 0010 9AB2     		uxth	r2, r3
 859 0012 1D4B     		ldr	r3, .L54+8
 860 0014 1B88     		ldrh	r3, [r3]	@ movhi
 861 0016 9BB2     		uxth	r3, r3
 862 0018 9A42     		cmp	r2, r3
 863 001a 0BD1     		bne	.L48
 694:.\Generated_Source\PSoC5/UART_1.c ****         {
 695:.\Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 864              		.loc 1 695 0
 865 001c 1B4B     		ldr	r3, .L54+12
 866 001e 1B78     		ldrb	r3, [r3]
 867 0020 DBB2     		uxtb	r3, r3
 868 0022 002B     		cmp	r3, #0
 869 0024 03D0     		beq	.L49
 696:.\Generated_Source\PSoC5/UART_1.c ****             {
 697:.\Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 870              		.loc 1 697 0
 871 0026 4FF48073 		mov	r3, #256
 872 002a FB80     		strh	r3, [r7, #6]	@ movhi
 873 002c 1EE0     		b	.L51
 874              	.L49:
 698:.\Generated_Source\PSoC5/UART_1.c ****             }
 699:.\Generated_Source\PSoC5/UART_1.c ****             else
 700:.\Generated_Source\PSoC5/UART_1.c ****             {
 701:.\Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 875              		.loc 1 701 0
 876 002e 0023     		movs	r3, #0
 877 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 878 0032 1BE0     		b	.L51
 879              	.L48:
 702:.\Generated_Source\PSoC5/UART_1.c ****             }
 703:.\Generated_Source\PSoC5/UART_1.c ****         }
 704:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 880              		.loc 1 704 0
 881 0034 134B     		ldr	r3, .L54+4
 882 0036 1B88     		ldrh	r3, [r3]	@ movhi
 883 0038 9AB2     		uxth	r2, r3
 884 003a 134B     		ldr	r3, .L54+8
 885 003c 1B88     		ldrh	r3, [r3]	@ movhi
 886 003e 9BB2     		uxth	r3, r3
 887 0040 9A42     		cmp	r2, r3
 888 0042 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/UART_1.c ****         {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 29


 706:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 889              		.loc 1 706 0
 890 0044 104B     		ldr	r3, .L54+8
 891 0046 1B88     		ldrh	r3, [r3]	@ movhi
 892 0048 9AB2     		uxth	r2, r3
 893 004a 0E4B     		ldr	r3, .L54+4
 894 004c 1B88     		ldrh	r3, [r3]	@ movhi
 895 004e 9BB2     		uxth	r3, r3
 896 0050 D31A     		subs	r3, r2, r3
 897 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 898 0054 0AE0     		b	.L51
 899              	.L52:
 707:.\Generated_Source\PSoC5/UART_1.c ****         }
 708:.\Generated_Source\PSoC5/UART_1.c ****         else
 709:.\Generated_Source\PSoC5/UART_1.c ****         {
 710:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 900              		.loc 1 710 0
 901 0056 0C4B     		ldr	r3, .L54+8
 902 0058 1B88     		ldrh	r3, [r3]	@ movhi
 903 005a 9AB2     		uxth	r2, r3
 904 005c 094B     		ldr	r3, .L54+4
 905 005e 1B88     		ldrh	r3, [r3]	@ movhi
 906 0060 9BB2     		uxth	r3, r3
 907 0062 D31A     		subs	r3, r2, r3
 908 0064 9BB2     		uxth	r3, r3
 909 0066 03F58073 		add	r3, r3, #256
 910 006a FB80     		strh	r3, [r7, #6]	@ movhi
 911              	.L51:
 711:.\Generated_Source\PSoC5/UART_1.c ****         }
 712:.\Generated_Source\PSoC5/UART_1.c **** 
 713:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 912              		.loc 1 713 0
 913 006c 084B     		ldr	r3, .L54+16
 914 006e 1022     		movs	r2, #16
 915 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/UART_1.c **** 
 715:.\Generated_Source\PSoC5/UART_1.c ****     #else
 716:.\Generated_Source\PSoC5/UART_1.c **** 
 717:.\Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART_1.c **** 
 720:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_1.c **** 
 722:.\Generated_Source\PSoC5/UART_1.c ****         return(size);
 916              		.loc 1 722 0
 917 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/UART_1.c ****     }
 918              		.loc 1 723 0
 919 0074 1846     		mov	r0, r3
 920 0076 0C37     		adds	r7, r7, #12
 921              		.cfi_def_cfa_offset 4
 922 0078 BD46     		mov	sp, r7
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 007a 5DF8047B 		ldr	r7, [sp], #4
 926              		.cfi_restore 7
 927              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 30


 928 007e 7047     		bx	lr
 929              	.L55:
 930              		.align	2
 931              	.L54:
 932 0080 80E100E0 		.word	-536813184
 933 0084 00000000 		.word	UART_1_rxBufferRead
 934 0088 00000000 		.word	UART_1_rxBufferWrite
 935 008c 00000000 		.word	UART_1_rxBufferLoopDetect
 936 0090 00E100E0 		.word	-536813312
 937              		.cfi_endproc
 938              	.LFE11:
 939              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 940              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 941              		.align	2
 942              		.global	UART_1_ClearRxBuffer
 943              		.thumb
 944              		.thumb_func
 945              		.type	UART_1_ClearRxBuffer, %function
 946              	UART_1_ClearRxBuffer:
 947              	.LFB12:
 724:.\Generated_Source\PSoC5/UART_1.c **** 
 725:.\Generated_Source\PSoC5/UART_1.c **** 
 726:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_1.c ****     *
 730:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_1.c ****     *
 733:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_1.c ****     *
 736:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_1.c ****     *
 739:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_1.c ****     *
 745:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_1.c ****     *
 748:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_1.c ****     *
 753:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_1.c ****     *
 756:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_1.c ****     {
 948              		.loc 1 758 0
 949              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 31


 950              		@ args = 0, pretend = 0, frame = 8
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 0000 80B5     		push	{r7, lr}
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 7, -8
 955              		.cfi_offset 14, -4
 956 0002 82B0     		sub	sp, sp, #8
 957              		.cfi_def_cfa_offset 16
 958 0004 00AF     		add	r7, sp, #0
 959              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_1.c **** 
 761:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 960              		.loc 1 762 0
 961 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 962 000a 0346     		mov	r3, r0
 963 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 964              		.loc 1 763 0
 965 000e 144A     		ldr	r2, .L57
 966 0010 134B     		ldr	r3, .L57
 967 0012 1B78     		ldrb	r3, [r3]
 968 0014 DBB2     		uxtb	r3, r3
 969 0016 43F00103 		orr	r3, r3, #1
 970 001a DBB2     		uxtb	r3, r3
 971 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 972              		.loc 1 764 0
 973 001e 104A     		ldr	r2, .L57
 974 0020 0F4B     		ldr	r3, .L57
 975 0022 1B78     		ldrb	r3, [r3]
 976 0024 DBB2     		uxtb	r3, r3
 977 0026 23F00103 		bic	r3, r3, #1
 978 002a DBB2     		uxtb	r3, r3
 979 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 980              		.loc 1 765 0
 981 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 982 0030 1846     		mov	r0, r3
 983 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/UART_1.c **** 
 767:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_1.c **** 
 769:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 984              		.loc 1 770 0
 985 0036 0B4B     		ldr	r3, .L57+4
 986 0038 1022     		movs	r2, #16
 987 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/UART_1.c **** 
 772:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 988              		.loc 1 772 0
 989 003c 0A4B     		ldr	r3, .L57+8
 990 003e 0022     		movs	r2, #0
 991 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 32


 992              		.loc 1 773 0
 993 0042 0A4B     		ldr	r3, .L57+12
 994 0044 0022     		movs	r2, #0
 995 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 996              		.loc 1 774 0
 997 0048 094B     		ldr	r3, .L57+16
 998 004a 0022     		movs	r2, #0
 999 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 1000              		.loc 1 775 0
 1001 004e 094B     		ldr	r3, .L57+20
 1002 0050 0022     		movs	r2, #0
 1003 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/UART_1.c **** 
 777:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 1004              		.loc 1 777 0
 1005 0054 084B     		ldr	r3, .L57+24
 1006 0056 1022     		movs	r2, #16
 1007 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/UART_1.c **** 
 779:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_1.c **** 
 781:.\Generated_Source\PSoC5/UART_1.c ****     }
 1008              		.loc 1 781 0
 1009 005a 0837     		adds	r7, r7, #8
 1010              		.cfi_def_cfa_offset 8
 1011 005c BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 005e 80BD     		pop	{r7, pc}
 1015              	.L58:
 1016              		.align	2
 1017              	.L57:
 1018 0060 9B640040 		.word	1073767579
 1019 0064 80E100E0 		.word	-536813184
 1020 0068 00000000 		.word	UART_1_rxBufferRead
 1021 006c 00000000 		.word	UART_1_rxBufferWrite
 1022 0070 00000000 		.word	UART_1_rxBufferLoopDetect
 1023 0074 00000000 		.word	UART_1_rxBufferOverflow
 1024 0078 00E100E0 		.word	-536813312
 1025              		.cfi_endproc
 1026              	.LFE12:
 1027              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 1028              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 1029              		.align	2
 1030              		.global	UART_1_SetRxAddressMode
 1031              		.thumb
 1032              		.thumb_func
 1033              		.type	UART_1_SetRxAddressMode, %function
 1034              	UART_1_SetRxAddressMode:
 1035              	.LFB13:
 782:.\Generated_Source\PSoC5/UART_1.c **** 
 783:.\Generated_Source\PSoC5/UART_1.c **** 
 784:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 33


 787:.\Generated_Source\PSoC5/UART_1.c ****     *
 788:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_1.c ****     *
 792:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_1.c ****     *
 804:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_1.c ****     *
 807:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_1.c ****     *
 812:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_1.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_1.c ****     {
 1036              		.loc 1 815 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041 0000 80B4     		push	{r7}
 1042              		.cfi_def_cfa_offset 4
 1043              		.cfi_offset 7, -4
 1044 0002 83B0     		sub	sp, sp, #12
 1045              		.cfi_def_cfa_offset 16
 1046 0004 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 0006 0346     		mov	r3, r0
 1049 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_1.c ****                 {
 820:.\Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART_1.c ****                 }
 822:.\Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_1.c **** 
 828:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 34


 830:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_1.c ****             {
 837:.\Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_1.c ****             }
 839:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_1.c ****     }
 1050              		.loc 1 840 0
 1051 000a 0C37     		adds	r7, r7, #12
 1052              		.cfi_def_cfa_offset 4
 1053 000c BD46     		mov	sp, r7
 1054              		.cfi_def_cfa_register 13
 1055              		@ sp needed
 1056 000e 5DF8047B 		ldr	r7, [sp], #4
 1057              		.cfi_restore 7
 1058              		.cfi_def_cfa_offset 0
 1059 0012 7047     		bx	lr
 1060              		.cfi_endproc
 1061              	.LFE13:
 1062              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 1063              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 1064              		.align	2
 1065              		.global	UART_1_SetRxAddress1
 1066              		.thumb
 1067              		.thumb_func
 1068              		.type	UART_1_SetRxAddress1, %function
 1069              	UART_1_SetRxAddress1:
 1070              	.LFB14:
 841:.\Generated_Source\PSoC5/UART_1.c **** 
 842:.\Generated_Source\PSoC5/UART_1.c **** 
 843:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_1.c ****     *
 847:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_1.c ****     *
 850:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_1.c ****     *
 853:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_1.c ****     *
 856:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_1.c ****     {
 1071              		.loc 1 858 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 8
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076 0000 80B4     		push	{r7}
 1077              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 35


 1078              		.cfi_offset 7, -4
 1079 0002 83B0     		sub	sp, sp, #12
 1080              		.cfi_def_cfa_offset 16
 1081 0004 00AF     		add	r7, sp, #0
 1082              		.cfi_def_cfa_register 7
 1083 0006 0346     		mov	r3, r0
 1084 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 1085              		.loc 1 859 0
 1086 000a 044A     		ldr	r2, .L61
 1087 000c FB79     		ldrb	r3, [r7, #7]
 1088 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/UART_1.c ****     }
 1089              		.loc 1 860 0
 1090 0010 0C37     		adds	r7, r7, #12
 1091              		.cfi_def_cfa_offset 4
 1092 0012 BD46     		mov	sp, r7
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0014 5DF8047B 		ldr	r7, [sp], #4
 1096              		.cfi_restore 7
 1097              		.cfi_def_cfa_offset 0
 1098 0018 7047     		bx	lr
 1099              	.L62:
 1100 001a 00BF     		.align	2
 1101              	.L61:
 1102 001c 2B640040 		.word	1073767467
 1103              		.cfi_endproc
 1104              	.LFE14:
 1105              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 1106              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 1107              		.align	2
 1108              		.global	UART_1_SetRxAddress2
 1109              		.thumb
 1110              		.thumb_func
 1111              		.type	UART_1_SetRxAddress2, %function
 1112              	UART_1_SetRxAddress2:
 1113              	.LFB15:
 861:.\Generated_Source\PSoC5/UART_1.c **** 
 862:.\Generated_Source\PSoC5/UART_1.c **** 
 863:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_1.c ****     *
 867:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_1.c ****     *
 870:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_1.c ****     *
 873:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_1.c ****     *
 876:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART_1.c ****     {
 1114              		.loc 1 878 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 36


 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 8
 1117              		@ frame_needed = 1, uses_anonymous_args = 0
 1118              		@ link register save eliminated.
 1119 0000 80B4     		push	{r7}
 1120              		.cfi_def_cfa_offset 4
 1121              		.cfi_offset 7, -4
 1122 0002 83B0     		sub	sp, sp, #12
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 1126 0006 0346     		mov	r3, r0
 1127 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 1128              		.loc 1 879 0
 1129 000a 044A     		ldr	r2, .L64
 1130 000c FB79     		ldrb	r3, [r7, #7]
 1131 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/UART_1.c ****     }
 1132              		.loc 1 880 0
 1133 0010 0C37     		adds	r7, r7, #12
 1134              		.cfi_def_cfa_offset 4
 1135 0012 BD46     		mov	sp, r7
 1136              		.cfi_def_cfa_register 13
 1137              		@ sp needed
 1138 0014 5DF8047B 		ldr	r7, [sp], #4
 1139              		.cfi_restore 7
 1140              		.cfi_def_cfa_offset 0
 1141 0018 7047     		bx	lr
 1142              	.L65:
 1143 001a 00BF     		.align	2
 1144              	.L64:
 1145 001c 3B640040 		.word	1073767483
 1146              		.cfi_endproc
 1147              	.LFE15:
 1148              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 1149              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 1150              		.align	2
 1151              		.global	UART_1_SetTxInterruptMode
 1152              		.thumb
 1153              		.thumb_func
 1154              		.type	UART_1_SetTxInterruptMode, %function
 1155              	UART_1_SetTxInterruptMode:
 1156              	.LFB16:
 881:.\Generated_Source\PSoC5/UART_1.c **** 
 882:.\Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_1.c **** 
 884:.\Generated_Source\PSoC5/UART_1.c **** 
 885:.\Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_1.c ****     *
 890:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 37


 894:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_1.c ****     *
 901:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_1.c ****     *
 904:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_1.c ****     *
 907:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_1.c ****     {
 1157              		.loc 1 909 0
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 8
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 80B4     		push	{r7}
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 7, -4
 1165 0002 83B0     		sub	sp, sp, #12
 1166              		.cfi_def_cfa_offset 16
 1167 0004 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 1169 0006 0346     		mov	r3, r0
 1170 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 1171              		.loc 1 910 0
 1172 000a 044A     		ldr	r2, .L67
 1173 000c FB79     		ldrb	r3, [r7, #7]
 1174 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/UART_1.c ****     }
 1175              		.loc 1 911 0
 1176 0010 0C37     		adds	r7, r7, #12
 1177              		.cfi_def_cfa_offset 4
 1178 0012 BD46     		mov	sp, r7
 1179              		.cfi_def_cfa_register 13
 1180              		@ sp needed
 1181 0014 5DF8047B 		ldr	r7, [sp], #4
 1182              		.cfi_restore 7
 1183              		.cfi_def_cfa_offset 0
 1184 0018 7047     		bx	lr
 1185              	.L68:
 1186 001a 00BF     		.align	2
 1187              	.L67:
 1188 001c 8E640040 		.word	1073767566
 1189              		.cfi_endproc
 1190              	.LFE16:
 1191              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 1192              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 1193              		.align	2
 1194              		.global	UART_1_WriteTxData
 1195              		.thumb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 38


 1196              		.thumb_func
 1197              		.type	UART_1_WriteTxData, %function
 1198              	UART_1_WriteTxData:
 1199              	.LFB17:
 912:.\Generated_Source\PSoC5/UART_1.c **** 
 913:.\Generated_Source\PSoC5/UART_1.c **** 
 914:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_1.c ****     *
 918:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_1.c ****     *
 923:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_1.c ****     *
 926:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_1.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_1.c ****     *
 929:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_1.c ****     *
 938:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_1.c ****     *
 941:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_1.c ****     {
 1200              		.loc 1 943 0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 8
 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204              		@ link register save eliminated.
 1205 0000 80B4     		push	{r7}
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 7, -4
 1208 0002 83B0     		sub	sp, sp, #12
 1209              		.cfi_def_cfa_offset 16
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
 1212 0006 0346     		mov	r3, r0
 1213 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1214              		.loc 1 945 0
 1215 000a 1A4B     		ldr	r3, .L74
 1216 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1217 000e 002B     		cmp	r3, #0
 1218 0010 2AD0     		beq	.L69
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 39


 946:.\Generated_Source\PSoC5/UART_1.c ****         {
 947:.\Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_1.c **** 
 949:.\Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 1219              		.loc 1 950 0
 1220 0012 194B     		ldr	r3, .L74+4
 1221 0014 2022     		movs	r2, #32
 1222 0016 1A60     		str	r2, [r3]
 951:.\Generated_Source\PSoC5/UART_1.c **** 
 952:.\Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 1223              		.loc 1 952 0
 1224 0018 184B     		ldr	r3, .L74+8
 1225 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1226 001c 9AB2     		uxth	r2, r3
 1227 001e 184B     		ldr	r3, .L74+12
 1228 0020 1B88     		ldrh	r3, [r3]
 1229 0022 9A42     		cmp	r2, r3
 1230 0024 0AD1     		bne	.L71
 953:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 1231              		.loc 1 953 0 discriminator 1
 1232 0026 174B     		ldr	r3, .L74+16
 1233 0028 1B78     		ldrb	r3, [r3]
 1234 002a DBB2     		uxtb	r3, r3
 1235 002c 03F00403 		and	r3, r3, #4
 952:.\Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 1236              		.loc 1 952 0 discriminator 1
 1237 0030 002B     		cmp	r3, #0
 1238 0032 03D1     		bne	.L71
 954:.\Generated_Source\PSoC5/UART_1.c ****             {
 955:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 1239              		.loc 1 956 0
 1240 0034 144A     		ldr	r2, .L74+20
 1241 0036 FB79     		ldrb	r3, [r7, #7]
 1242 0038 1370     		strb	r3, [r2]
 1243 003a 12E0     		b	.L72
 1244              	.L71:
 957:.\Generated_Source\PSoC5/UART_1.c ****             }
 958:.\Generated_Source\PSoC5/UART_1.c ****             else
 959:.\Generated_Source\PSoC5/UART_1.c ****             {
 960:.\Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 1245              		.loc 1 960 0
 1246 003c 104B     		ldr	r3, .L74+12
 1247 003e 1B88     		ldrh	r3, [r3]
 1248 0040 FF2B     		cmp	r3, #255
 1249 0042 02D9     		bls	.L73
 961:.\Generated_Source\PSoC5/UART_1.c ****                 {
 962:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 1250              		.loc 1 962 0
 1251 0044 0E4B     		ldr	r3, .L74+12
 1252 0046 0022     		movs	r2, #0
 1253 0048 1A80     		strh	r2, [r3]	@ movhi
 1254              	.L73:
 963:.\Generated_Source\PSoC5/UART_1.c ****                 }
 964:.\Generated_Source\PSoC5/UART_1.c **** 
 965:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 40


 1255              		.loc 1 965 0
 1256 004a 0D4B     		ldr	r3, .L74+12
 1257 004c 1B88     		ldrh	r3, [r3]
 1258 004e 1946     		mov	r1, r3
 1259 0050 0E4A     		ldr	r2, .L74+24
 1260 0052 FB79     		ldrb	r3, [r7, #7]
 1261 0054 5354     		strb	r3, [r2, r1]
 966:.\Generated_Source\PSoC5/UART_1.c **** 
 967:.\Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 1262              		.loc 1 968 0
 1263 0056 0A4B     		ldr	r3, .L74+12
 1264 0058 1B88     		ldrh	r3, [r3]
 1265 005a 0133     		adds	r3, r3, #1
 1266 005c 9AB2     		uxth	r2, r3
 1267 005e 084B     		ldr	r3, .L74+12
 1268 0060 1A80     		strh	r2, [r3]	@ movhi
 1269              	.L72:
 969:.\Generated_Source\PSoC5/UART_1.c ****             }
 970:.\Generated_Source\PSoC5/UART_1.c **** 
 971:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 1270              		.loc 1 971 0
 1271 0062 0B4B     		ldr	r3, .L74+28
 1272 0064 2022     		movs	r2, #32
 1273 0066 1A60     		str	r2, [r3]
 1274              	.L69:
 972:.\Generated_Source\PSoC5/UART_1.c **** 
 973:.\Generated_Source\PSoC5/UART_1.c ****         #else
 974:.\Generated_Source\PSoC5/UART_1.c **** 
 975:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 977:.\Generated_Source\PSoC5/UART_1.c **** 
 978:.\Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_1.c ****         }
 980:.\Generated_Source\PSoC5/UART_1.c ****     }
 1275              		.loc 1 980 0
 1276 0068 0C37     		adds	r7, r7, #12
 1277              		.cfi_def_cfa_offset 4
 1278 006a BD46     		mov	sp, r7
 1279              		.cfi_def_cfa_register 13
 1280              		@ sp needed
 1281 006c 5DF8047B 		ldr	r7, [sp], #4
 1282              		.cfi_restore 7
 1283              		.cfi_def_cfa_offset 0
 1284 0070 7047     		bx	lr
 1285              	.L75:
 1286 0072 00BF     		.align	2
 1287              	.L74:
 1288 0074 00000000 		.word	UART_1_initVar
 1289 0078 80E100E0 		.word	-536813184
 1290 007c 00000000 		.word	UART_1_txBufferRead
 1291 0080 00000000 		.word	UART_1_txBufferWrite
 1292 0084 6E640040 		.word	1073767534
 1293 0088 4D640040 		.word	1073767501
 1294 008c 00000000 		.word	UART_1_txBuffer
 1295 0090 00E100E0 		.word	-536813312
 1296              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 41


 1297              	.LFE17:
 1298              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 1299              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 1300              		.align	2
 1301              		.global	UART_1_ReadTxStatus
 1302              		.thumb
 1303              		.thumb_func
 1304              		.type	UART_1_ReadTxStatus, %function
 1305              	UART_1_ReadTxStatus:
 1306              	.LFB18:
 981:.\Generated_Source\PSoC5/UART_1.c **** 
 982:.\Generated_Source\PSoC5/UART_1.c **** 
 983:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_1.c ****     *
 987:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_1.c ****     *
 990:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_1.c ****     *
 993:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_1.c ****     *
 996:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_1.c ****     *
1002:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_1.c ****     {
 1307              		.loc 1 1004 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312 0000 80B4     		push	{r7}
 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 7, -4
 1315 0002 00AF     		add	r7, sp, #0
 1316              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 1317              		.loc 1 1005 0
 1318 0004 034B     		ldr	r3, .L78
 1319 0006 1B78     		ldrb	r3, [r3]
 1320 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/UART_1.c ****     }
 1321              		.loc 1 1006 0
 1322 000a 1846     		mov	r0, r3
 1323 000c BD46     		mov	sp, r7
 1324              		.cfi_def_cfa_register 13
 1325              		@ sp needed
 1326 000e 5DF8047B 		ldr	r7, [sp], #4
 1327              		.cfi_restore 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 42


 1328              		.cfi_def_cfa_offset 0
 1329 0012 7047     		bx	lr
 1330              	.L79:
 1331              		.align	2
 1332              	.L78:
 1333 0014 6E640040 		.word	1073767534
 1334              		.cfi_endproc
 1335              	.LFE18:
 1336              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 1337              		.section	.text.UART_1_PutChar,"ax",%progbits
 1338              		.align	2
 1339              		.global	UART_1_PutChar
 1340              		.thumb
 1341              		.thumb_func
 1342              		.type	UART_1_PutChar, %function
 1343              	UART_1_PutChar:
 1344              	.LFB19:
1007:.\Generated_Source\PSoC5/UART_1.c **** 
1008:.\Generated_Source\PSoC5/UART_1.c **** 
1009:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_1.c ****     *
1013:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_1.c ****     *
1018:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_1.c ****     *
1021:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_1.c ****     *
1024:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_1.c ****     *
1034:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_1.c ****     *
1037:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_1.c ****     *
1040:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_1.c ****     {
 1345              		.loc 1 1042 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 16
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 43


 1349              		@ link register save eliminated.
 1350 0000 80B4     		push	{r7}
 1351              		.cfi_def_cfa_offset 4
 1352              		.cfi_offset 7, -4
 1353 0002 85B0     		sub	sp, sp, #20
 1354              		.cfi_def_cfa_offset 24
 1355 0004 00AF     		add	r7, sp, #0
 1356              		.cfi_def_cfa_register 7
 1357 0006 0346     		mov	r3, r0
 1358 0008 FB71     		strb	r3, [r7, #7]
 1359              	.L83:
1043:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_1.c ****         */
1048:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_1.c ****         uint16 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_1.c **** 
1051:.\Generated_Source\PSoC5/UART_1.c ****         do
1052:.\Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_1.c **** 
1054:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_1.c **** 
1059:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
 1360              		.loc 1 1059 0
 1361 000a 254B     		ldr	r3, .L87
 1362 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1363 000e FB81     		strh	r3, [r7, #14]	@ movhi
1060:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
 1364              		.loc 1 1060 0
 1365 0010 244B     		ldr	r3, .L87+4
 1366 0012 1B88     		ldrh	r3, [r3]	@ movhi
 1367 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1061:.\Generated_Source\PSoC5/UART_1.c **** 
1062:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_1.c ****         }
1067:.\Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1368              		.loc 1 1067 0
 1369 0016 FA89     		ldrh	r2, [r7, #14]
 1370 0018 BB89     		ldrh	r3, [r7, #12]
 1371 001a 9A42     		cmp	r2, r3
 1372 001c 08D2     		bcs	.L81
 1373              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1374 001e FA89     		ldrh	r2, [r7, #14]
 1375 0020 BB89     		ldrh	r3, [r7, #12]
 1376 0022 013B     		subs	r3, r3, #1
 1377 0024 9A42     		cmp	r2, r3
 1378 0026 0CBF     		ite	eq
 1379 0028 0123     		moveq	r3, #1
 1380 002a 0023     		movne	r3, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 44


 1381 002c DBB2     		uxtb	r3, r3
 1382 002e 07E0     		b	.L82
 1383              	.L81:
1068:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1384              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1385 0030 FA89     		ldrh	r2, [r7, #14]
 1386 0032 BB89     		ldrh	r3, [r7, #12]
 1387 0034 D31A     		subs	r3, r2, r3
1067:.\Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1388              		.loc 1 1067 0 discriminator 2
 1389 0036 FF2B     		cmp	r3, #255
 1390 0038 0CBF     		ite	eq
 1391 003a 0123     		moveq	r3, #1
 1392 003c 0023     		movne	r3, #0
 1393 003e DBB2     		uxtb	r3, r3
 1394              	.L82:
1069:.\Generated_Source\PSoC5/UART_1.c ****                                 (uint16)(UART_1_TX_BUFFER_SIZE - 1u)) );
 1395              		.loc 1 1069 0
 1396 0040 002B     		cmp	r3, #0
 1397 0042 E2D1     		bne	.L83
1070:.\Generated_Source\PSoC5/UART_1.c **** 
1071:.\Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1398              		.loc 1 1071 0
 1399 0044 BA89     		ldrh	r2, [r7, #12]
 1400 0046 FB89     		ldrh	r3, [r7, #14]
 1401 0048 9A42     		cmp	r2, r3
 1402 004a 0AD1     		bne	.L84
1072:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 1403              		.loc 1 1072 0 discriminator 1
 1404 004c 164B     		ldr	r3, .L87+8
 1405 004e 1B78     		ldrb	r3, [r3]
 1406 0050 DBB2     		uxtb	r3, r3
 1407 0052 03F00403 		and	r3, r3, #4
1071:.\Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 1408              		.loc 1 1071 0 discriminator 1
 1409 0056 002B     		cmp	r3, #0
 1410 0058 03D1     		bne	.L84
1073:.\Generated_Source\PSoC5/UART_1.c ****         {
1074:.\Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 1411              		.loc 1 1075 0
 1412 005a 144A     		ldr	r2, .L87+12
 1413 005c FB79     		ldrb	r3, [r7, #7]
 1414 005e 1370     		strb	r3, [r2]
 1415 0060 18E0     		b	.L80
 1416              	.L84:
1076:.\Generated_Source\PSoC5/UART_1.c ****         }
1077:.\Generated_Source\PSoC5/UART_1.c ****         else
1078:.\Generated_Source\PSoC5/UART_1.c ****         {
1079:.\Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
 1417              		.loc 1 1079 0
 1418 0062 FB89     		ldrh	r3, [r7, #14]
 1419 0064 FF2B     		cmp	r3, #255
 1420 0066 01D9     		bls	.L86
1080:.\Generated_Source\PSoC5/UART_1.c ****             {
1081:.\Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
 1421              		.loc 1 1081 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 45


 1422 0068 0023     		movs	r3, #0
 1423 006a FB81     		strh	r3, [r7, #14]	@ movhi
 1424              	.L86:
1082:.\Generated_Source\PSoC5/UART_1.c ****             }
1083:.\Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
 1425              		.loc 1 1084 0
 1426 006c FB89     		ldrh	r3, [r7, #14]
 1427 006e 1049     		ldr	r1, .L87+16
 1428 0070 FA79     		ldrb	r2, [r7, #7]
 1429 0072 CA54     		strb	r2, [r1, r3]
1085:.\Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
 1430              		.loc 1 1085 0
 1431 0074 FB89     		ldrh	r3, [r7, #14]
 1432 0076 0133     		adds	r3, r3, #1
 1433 0078 FB81     		strh	r3, [r7, #14]	@ movhi
1086:.\Generated_Source\PSoC5/UART_1.c **** 
1087:.\Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_1.c **** 
1092:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
 1434              		.loc 1 1092 0
 1435 007a 094A     		ldr	r2, .L87
 1436 007c FB89     		ldrh	r3, [r7, #14]	@ movhi
 1437 007e 1380     		strh	r3, [r2]	@ movhi
1093:.\Generated_Source\PSoC5/UART_1.c **** 
1094:.\Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_1.c **** 
1098:.\Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
 1438              		.loc 1 1098 0
 1439 0080 094B     		ldr	r3, .L87+8
 1440 0082 1B78     		ldrb	r3, [r3]
 1441 0084 DBB2     		uxtb	r3, r3
 1442 0086 03F00203 		and	r3, r3, #2
 1443 008a 002B     		cmp	r3, #0
 1444 008c 02D0     		beq	.L80
1099:.\Generated_Source\PSoC5/UART_1.c ****             {
1100:.\Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
 1445              		.loc 1 1101 0
 1446 008e 094B     		ldr	r3, .L87+20
 1447 0090 2022     		movs	r2, #32
 1448 0092 1A60     		str	r2, [r3]
 1449              	.L80:
1102:.\Generated_Source\PSoC5/UART_1.c ****             }
1103:.\Generated_Source\PSoC5/UART_1.c ****         }
1104:.\Generated_Source\PSoC5/UART_1.c **** 
1105:.\Generated_Source\PSoC5/UART_1.c ****     #else
1106:.\Generated_Source\PSoC5/UART_1.c **** 
1107:.\Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
1108:.\Generated_Source\PSoC5/UART_1.c ****         {
1109:.\Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_1.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 46


1111:.\Generated_Source\PSoC5/UART_1.c **** 
1112:.\Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
1114:.\Generated_Source\PSoC5/UART_1.c **** 
1115:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_1.c ****     }
 1450              		.loc 1 1116 0
 1451 0094 1437     		adds	r7, r7, #20
 1452              		.cfi_def_cfa_offset 4
 1453 0096 BD46     		mov	sp, r7
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 0098 5DF8047B 		ldr	r7, [sp], #4
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 009c 7047     		bx	lr
 1460              	.L88:
 1461 009e 00BF     		.align	2
 1462              	.L87:
 1463 00a0 00000000 		.word	UART_1_txBufferWrite
 1464 00a4 00000000 		.word	UART_1_txBufferRead
 1465 00a8 6E640040 		.word	1073767534
 1466 00ac 4D640040 		.word	1073767501
 1467 00b0 00000000 		.word	UART_1_txBuffer
 1468 00b4 00E200E0 		.word	-536813056
 1469              		.cfi_endproc
 1470              	.LFE19:
 1471              		.size	UART_1_PutChar, .-UART_1_PutChar
 1472              		.section	.text.UART_1_PutString,"ax",%progbits
 1473              		.align	2
 1474              		.global	UART_1_PutString
 1475              		.thumb
 1476              		.thumb_func
 1477              		.type	UART_1_PutString, %function
 1478              	UART_1_PutString:
 1479              	.LFB20:
1117:.\Generated_Source\PSoC5/UART_1.c **** 
1118:.\Generated_Source\PSoC5/UART_1.c **** 
1119:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART_1.c ****     *
1123:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_1.c ****     *
1126:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_1.c ****     *
1129:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_1.c ****     *
1132:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_1.c ****     *
1136:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 47


1138:.\Generated_Source\PSoC5/UART_1.c ****     *
1139:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_1.c ****     *
1144:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_1.c ****     {
 1480              		.loc 1 1146 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484 0000 80B5     		push	{r7, lr}
 1485              		.cfi_def_cfa_offset 8
 1486              		.cfi_offset 7, -8
 1487              		.cfi_offset 14, -4
 1488 0002 84B0     		sub	sp, sp, #16
 1489              		.cfi_def_cfa_offset 24
 1490 0004 00AF     		add	r7, sp, #0
 1491              		.cfi_def_cfa_register 7
 1492 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 1493              		.loc 1 1147 0
 1494 0008 0023     		movs	r3, #0
 1495 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/UART_1.c **** 
1149:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1496              		.loc 1 1150 0
 1497 000c 0B4B     		ldr	r3, .L93
 1498 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 0010 002B     		cmp	r3, #0
 1500 0012 10D0     		beq	.L89
1151:.\Generated_Source\PSoC5/UART_1.c ****         {
1152:.\Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 1501              		.loc 1 1153 0
 1502 0014 09E0     		b	.L91
 1503              	.L92:
1154:.\Generated_Source\PSoC5/UART_1.c ****             {
1155:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 1504              		.loc 1 1155 0
 1505 0016 FB89     		ldrh	r3, [r7, #14]
 1506 0018 7A68     		ldr	r2, [r7, #4]
 1507 001a 1344     		add	r3, r3, r2
 1508 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1509 001e 1846     		mov	r0, r3
 1510 0020 FFF7FEFF 		bl	UART_1_PutChar
1156:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 1511              		.loc 1 1156 0
 1512 0024 FB89     		ldrh	r3, [r7, #14]
 1513 0026 0133     		adds	r3, r3, #1
 1514 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1515              	.L91:
1153:.\Generated_Source\PSoC5/UART_1.c ****             {
 1516              		.loc 1 1153 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 48


 1517 002a FB89     		ldrh	r3, [r7, #14]
 1518 002c 7A68     		ldr	r2, [r7, #4]
 1519 002e 1344     		add	r3, r3, r2
 1520 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 0032 002B     		cmp	r3, #0
 1522 0034 EFD1     		bne	.L92
 1523              	.L89:
1157:.\Generated_Source\PSoC5/UART_1.c ****             }
1158:.\Generated_Source\PSoC5/UART_1.c ****         }
1159:.\Generated_Source\PSoC5/UART_1.c ****     }
 1524              		.loc 1 1159 0
 1525 0036 1037     		adds	r7, r7, #16
 1526              		.cfi_def_cfa_offset 8
 1527 0038 BD46     		mov	sp, r7
 1528              		.cfi_def_cfa_register 13
 1529              		@ sp needed
 1530 003a 80BD     		pop	{r7, pc}
 1531              	.L94:
 1532              		.align	2
 1533              	.L93:
 1534 003c 00000000 		.word	UART_1_initVar
 1535              		.cfi_endproc
 1536              	.LFE20:
 1537              		.size	UART_1_PutString, .-UART_1_PutString
 1538              		.section	.text.UART_1_PutArray,"ax",%progbits
 1539              		.align	2
 1540              		.global	UART_1_PutArray
 1541              		.thumb
 1542              		.thumb_func
 1543              		.type	UART_1_PutArray, %function
 1544              	UART_1_PutArray:
 1545              	.LFB21:
1160:.\Generated_Source\PSoC5/UART_1.c **** 
1161:.\Generated_Source\PSoC5/UART_1.c **** 
1162:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_1.c ****     *
1166:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART_1.c ****     *
1170:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_1.c ****     *
1175:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_1.c ****     *
1178:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_1.c ****     *
1182:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 49


1185:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_1.c ****     *
1190:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint16 byteCount)
1192:.\Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_1.c ****     {
 1546              		.loc 1 1193 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 16
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 80B5     		push	{r7, lr}
 1551              		.cfi_def_cfa_offset 8
 1552              		.cfi_offset 7, -8
 1553              		.cfi_offset 14, -4
 1554 0002 84B0     		sub	sp, sp, #16
 1555              		.cfi_def_cfa_offset 24
 1556 0004 00AF     		add	r7, sp, #0
 1557              		.cfi_def_cfa_register 7
 1558 0006 7860     		str	r0, [r7, #4]
 1559 0008 0B46     		mov	r3, r1
 1560 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1194:.\Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 1561              		.loc 1 1194 0
 1562 000c 0023     		movs	r3, #0
 1563 000e FB81     		strh	r3, [r7, #14]	@ movhi
1195:.\Generated_Source\PSoC5/UART_1.c **** 
1196:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1564              		.loc 1 1197 0
 1565 0010 0A4B     		ldr	r3, .L99
 1566 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1567 0014 002B     		cmp	r3, #0
 1568 0016 0ED0     		beq	.L95
1198:.\Generated_Source\PSoC5/UART_1.c ****         {
1199:.\Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 1569              		.loc 1 1199 0
 1570 0018 09E0     		b	.L97
 1571              	.L98:
1200:.\Generated_Source\PSoC5/UART_1.c ****             {
1201:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 1572              		.loc 1 1201 0
 1573 001a FB89     		ldrh	r3, [r7, #14]
 1574 001c 7A68     		ldr	r2, [r7, #4]
 1575 001e 1344     		add	r3, r3, r2
 1576 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1577 0022 1846     		mov	r0, r3
 1578 0024 FFF7FEFF 		bl	UART_1_PutChar
1202:.\Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 1579              		.loc 1 1202 0
 1580 0028 FB89     		ldrh	r3, [r7, #14]
 1581 002a 0133     		adds	r3, r3, #1
 1582 002c FB81     		strh	r3, [r7, #14]	@ movhi
 1583              	.L97:
1199:.\Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 50


 1584              		.loc 1 1199 0
 1585 002e FA89     		ldrh	r2, [r7, #14]
 1586 0030 7B88     		ldrh	r3, [r7, #2]
 1587 0032 9A42     		cmp	r2, r3
 1588 0034 F1D3     		bcc	.L98
 1589              	.L95:
1203:.\Generated_Source\PSoC5/UART_1.c ****             }
1204:.\Generated_Source\PSoC5/UART_1.c ****         }
1205:.\Generated_Source\PSoC5/UART_1.c ****     }
 1590              		.loc 1 1205 0
 1591 0036 1037     		adds	r7, r7, #16
 1592              		.cfi_def_cfa_offset 8
 1593 0038 BD46     		mov	sp, r7
 1594              		.cfi_def_cfa_register 13
 1595              		@ sp needed
 1596 003a 80BD     		pop	{r7, pc}
 1597              	.L100:
 1598              		.align	2
 1599              	.L99:
 1600 003c 00000000 		.word	UART_1_initVar
 1601              		.cfi_endproc
 1602              	.LFE21:
 1603              		.size	UART_1_PutArray, .-UART_1_PutArray
 1604              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1605              		.align	2
 1606              		.global	UART_1_PutCRLF
 1607              		.thumb
 1608              		.thumb_func
 1609              		.type	UART_1_PutCRLF, %function
 1610              	UART_1_PutCRLF:
 1611              	.LFB22:
1206:.\Generated_Source\PSoC5/UART_1.c **** 
1207:.\Generated_Source\PSoC5/UART_1.c **** 
1208:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_1.c ****     *
1212:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_1.c ****     *
1216:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_1.c ****     *
1219:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_1.c ****     *
1222:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_1.c ****     *
1226:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_1.c ****     *
1229:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_1.c ****     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 51


 1612              		.loc 1 1231 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 8
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616 0000 80B5     		push	{r7, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 82B0     		sub	sp, sp, #8
 1621              		.cfi_def_cfa_offset 16
 1622 0004 00AF     		add	r7, sp, #0
 1623              		.cfi_def_cfa_register 7
 1624 0006 0346     		mov	r3, r0
 1625 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1626              		.loc 1 1233 0
 1627 000a 084B     		ldr	r3, .L103
 1628 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1629 000e 002B     		cmp	r3, #0
 1630 0010 09D0     		beq	.L101
1234:.\Generated_Source\PSoC5/UART_1.c ****         {
1235:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 1631              		.loc 1 1235 0
 1632 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1633 0014 1846     		mov	r0, r3
 1634 0016 FFF7FEFF 		bl	UART_1_PutChar
1236:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 1635              		.loc 1 1236 0
 1636 001a 0D20     		movs	r0, #13
 1637 001c FFF7FEFF 		bl	UART_1_PutChar
1237:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 1638              		.loc 1 1237 0
 1639 0020 0A20     		movs	r0, #10
 1640 0022 FFF7FEFF 		bl	UART_1_PutChar
 1641              	.L101:
1238:.\Generated_Source\PSoC5/UART_1.c ****         }
1239:.\Generated_Source\PSoC5/UART_1.c ****     }
 1642              		.loc 1 1239 0
 1643 0026 0837     		adds	r7, r7, #8
 1644              		.cfi_def_cfa_offset 8
 1645 0028 BD46     		mov	sp, r7
 1646              		.cfi_def_cfa_register 13
 1647              		@ sp needed
 1648 002a 80BD     		pop	{r7, pc}
 1649              	.L104:
 1650              		.align	2
 1651              	.L103:
 1652 002c 00000000 		.word	UART_1_initVar
 1653              		.cfi_endproc
 1654              	.LFE22:
 1655              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1656              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1657              		.align	2
 1658              		.global	UART_1_GetTxBufferSize
 1659              		.thumb
 1660              		.thumb_func
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 52


 1661              		.type	UART_1_GetTxBufferSize, %function
 1662              	UART_1_GetTxBufferSize:
 1663              	.LFB23:
1240:.\Generated_Source\PSoC5/UART_1.c **** 
1241:.\Generated_Source\PSoC5/UART_1.c **** 
1242:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_1.c ****     *
1246:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_1.c ****     *
1255:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_1.c ****     *
1258:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_1.c ****     *
1262:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_1.c ****     *
1266:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_1.c ****     *
1269:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_1.c ****     *
1272:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_1.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_1.c ****     {
 1664              		.loc 1 1275 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 8
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669 0000 80B4     		push	{r7}
 1670              		.cfi_def_cfa_offset 4
 1671              		.cfi_offset 7, -4
 1672 0002 83B0     		sub	sp, sp, #12
 1673              		.cfi_def_cfa_offset 16
 1674 0004 00AF     		add	r7, sp, #0
 1675              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/UART_1.c ****         uint16 size;
1277:.\Generated_Source\PSoC5/UART_1.c **** 
1278:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_1.c **** 
1280:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 53


 1676              		.loc 1 1281 0
 1677 0006 184B     		ldr	r3, .L110
 1678 0008 2022     		movs	r2, #32
 1679 000a 1A60     		str	r2, [r3]
1282:.\Generated_Source\PSoC5/UART_1.c **** 
1283:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
 1680              		.loc 1 1283 0
 1681 000c 174B     		ldr	r3, .L110+4
 1682 000e 1B88     		ldrh	r3, [r3]	@ movhi
 1683 0010 9AB2     		uxth	r2, r3
 1684 0012 174B     		ldr	r3, .L110+8
 1685 0014 1B88     		ldrh	r3, [r3]
 1686 0016 9A42     		cmp	r2, r3
 1687 0018 02D1     		bne	.L106
1284:.\Generated_Source\PSoC5/UART_1.c ****         {
1285:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 1688              		.loc 1 1285 0
 1689 001a 0023     		movs	r3, #0
 1690 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1691 001e 18E0     		b	.L107
 1692              	.L106:
1286:.\Generated_Source\PSoC5/UART_1.c ****         }
1287:.\Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
 1693              		.loc 1 1287 0
 1694 0020 124B     		ldr	r3, .L110+4
 1695 0022 1B88     		ldrh	r3, [r3]	@ movhi
 1696 0024 9AB2     		uxth	r2, r3
 1697 0026 124B     		ldr	r3, .L110+8
 1698 0028 1B88     		ldrh	r3, [r3]
 1699 002a 9A42     		cmp	r2, r3
 1700 002c 07D2     		bcs	.L108
1288:.\Generated_Source\PSoC5/UART_1.c ****         {
1289:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
 1701              		.loc 1 1289 0
 1702 002e 104B     		ldr	r3, .L110+8
 1703 0030 1A88     		ldrh	r2, [r3]
 1704 0032 0E4B     		ldr	r3, .L110+4
 1705 0034 1B88     		ldrh	r3, [r3]	@ movhi
 1706 0036 9BB2     		uxth	r3, r3
 1707 0038 D31A     		subs	r3, r2, r3
 1708 003a FB80     		strh	r3, [r7, #6]	@ movhi
 1709 003c 09E0     		b	.L107
 1710              	.L108:
1290:.\Generated_Source\PSoC5/UART_1.c ****         }
1291:.\Generated_Source\PSoC5/UART_1.c ****         else
1292:.\Generated_Source\PSoC5/UART_1.c ****         {
1293:.\Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
 1711              		.loc 1 1293 0
 1712 003e 0C4B     		ldr	r3, .L110+8
 1713 0040 1A88     		ldrh	r2, [r3]
 1714 0042 0A4B     		ldr	r3, .L110+4
 1715 0044 1B88     		ldrh	r3, [r3]	@ movhi
 1716 0046 9BB2     		uxth	r3, r3
 1717 0048 D31A     		subs	r3, r2, r3
 1718 004a 9BB2     		uxth	r3, r3
 1719 004c 03F58073 		add	r3, r3, #256
 1720 0050 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 54


 1721              	.L107:
1294:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_1.c ****         }
1296:.\Generated_Source\PSoC5/UART_1.c **** 
1297:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 1722              		.loc 1 1297 0
 1723 0052 084B     		ldr	r3, .L110+12
 1724 0054 2022     		movs	r2, #32
 1725 0056 1A60     		str	r2, [r3]
1298:.\Generated_Source\PSoC5/UART_1.c **** 
1299:.\Generated_Source\PSoC5/UART_1.c ****     #else
1300:.\Generated_Source\PSoC5/UART_1.c **** 
1301:.\Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
1302:.\Generated_Source\PSoC5/UART_1.c **** 
1303:.\Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC5/UART_1.c ****         {
1306:.\Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART_1.c ****         }
1308:.\Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC5/UART_1.c ****         {
1310:.\Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:.\Generated_Source\PSoC5/UART_1.c ****         }
1312:.\Generated_Source\PSoC5/UART_1.c ****         else
1313:.\Generated_Source\PSoC5/UART_1.c ****         {
1314:.\Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:.\Generated_Source\PSoC5/UART_1.c ****         }
1317:.\Generated_Source\PSoC5/UART_1.c **** 
1318:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_1.c **** 
1320:.\Generated_Source\PSoC5/UART_1.c ****     return(size);
 1726              		.loc 1 1320 0
 1727 0058 FB88     		ldrh	r3, [r7, #6]
1321:.\Generated_Source\PSoC5/UART_1.c ****     }
 1728              		.loc 1 1321 0
 1729 005a 1846     		mov	r0, r3
 1730 005c 0C37     		adds	r7, r7, #12
 1731              		.cfi_def_cfa_offset 4
 1732 005e BD46     		mov	sp, r7
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 0060 5DF8047B 		ldr	r7, [sp], #4
 1736              		.cfi_restore 7
 1737              		.cfi_def_cfa_offset 0
 1738 0064 7047     		bx	lr
 1739              	.L111:
 1740 0066 00BF     		.align	2
 1741              	.L110:
 1742 0068 80E100E0 		.word	-536813184
 1743 006c 00000000 		.word	UART_1_txBufferRead
 1744 0070 00000000 		.word	UART_1_txBufferWrite
 1745 0074 00E100E0 		.word	-536813312
 1746              		.cfi_endproc
 1747              	.LFE23:
 1748              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1749              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 55


 1750              		.align	2
 1751              		.global	UART_1_ClearTxBuffer
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	UART_1_ClearTxBuffer, %function
 1755              	UART_1_ClearTxBuffer:
 1756              	.LFB24:
1322:.\Generated_Source\PSoC5/UART_1.c **** 
1323:.\Generated_Source\PSoC5/UART_1.c **** 
1324:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_1.c ****     *
1328:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_1.c ****     *
1331:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_1.c ****     *
1334:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_1.c ****     *
1337:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_1.c ****     *
1341:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_1.c ****     *
1344:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_1.c ****     *
1349:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_1.c ****     *
1353:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_1.c ****     {
 1757              		.loc 1 1355 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 8
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 82B0     		sub	sp, sp, #8
 1766              		.cfi_def_cfa_offset 16
 1767 0004 00AF     		add	r7, sp, #0
 1768              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_1.c **** 
1358:.\Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1769              		.loc 1 1358 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 56


 1770 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1771 000a 0346     		mov	r3, r0
 1772 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1773              		.loc 1 1360 0
 1774 000e 114A     		ldr	r2, .L113
 1775 0010 104B     		ldr	r3, .L113
 1776 0012 1B78     		ldrb	r3, [r3]
 1777 0014 DBB2     		uxtb	r3, r3
 1778 0016 43F00103 		orr	r3, r3, #1
 1779 001a DBB2     		uxtb	r3, r3
 1780 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1781              		.loc 1 1361 0
 1782 001e 0D4A     		ldr	r2, .L113
 1783 0020 0C4B     		ldr	r3, .L113
 1784 0022 1B78     		ldrb	r3, [r3]
 1785 0024 DBB2     		uxtb	r3, r3
 1786 0026 23F00103 		bic	r3, r3, #1
 1787 002a DBB2     		uxtb	r3, r3
 1788 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1789              		.loc 1 1362 0
 1790 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1791 0030 1846     		mov	r0, r3
 1792 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/UART_1.c **** 
1364:.\Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_1.c **** 
1366:.\Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 1793              		.loc 1 1367 0
 1794 0036 084B     		ldr	r3, .L113+4
 1795 0038 2022     		movs	r2, #32
 1796 003a 1A60     		str	r2, [r3]
1368:.\Generated_Source\PSoC5/UART_1.c **** 
1369:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
 1797              		.loc 1 1369 0
 1798 003c 074B     		ldr	r3, .L113+8
 1799 003e 0022     		movs	r2, #0
 1800 0040 1A80     		strh	r2, [r3]	@ movhi
1370:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
 1801              		.loc 1 1370 0
 1802 0042 074B     		ldr	r3, .L113+12
 1803 0044 0022     		movs	r2, #0
 1804 0046 1A80     		strh	r2, [r3]	@ movhi
1371:.\Generated_Source\PSoC5/UART_1.c **** 
1372:.\Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 1805              		.loc 1 1373 0
 1806 0048 064B     		ldr	r3, .L113+16
 1807 004a 2022     		movs	r2, #32
 1808 004c 1A60     		str	r2, [r3]
1374:.\Generated_Source\PSoC5/UART_1.c **** 
1375:.\Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_1.c ****     }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 57


 1809              		.loc 1 1376 0
 1810 004e 0837     		adds	r7, r7, #8
 1811              		.cfi_def_cfa_offset 8
 1812 0050 BD46     		mov	sp, r7
 1813              		.cfi_def_cfa_register 13
 1814              		@ sp needed
 1815 0052 80BD     		pop	{r7, pc}
 1816              	.L114:
 1817              		.align	2
 1818              	.L113:
 1819 0054 9D640040 		.word	1073767581
 1820 0058 80E100E0 		.word	-536813184
 1821 005c 00000000 		.word	UART_1_txBufferRead
 1822 0060 00000000 		.word	UART_1_txBufferWrite
 1823 0064 00E100E0 		.word	-536813312
 1824              		.cfi_endproc
 1825              	.LFE24:
 1826              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1827              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1828              		.align	2
 1829              		.global	UART_1_SendBreak
 1830              		.thumb
 1831              		.thumb_func
 1832              		.type	UART_1_SendBreak, %function
 1833              	UART_1_SendBreak:
 1834              	.LFB25:
1377:.\Generated_Source\PSoC5/UART_1.c **** 
1378:.\Generated_Source\PSoC5/UART_1.c **** 
1379:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_1.c ****     *
1383:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_1.c ****     *
1386:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_1.c ****     *
1398:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_1.c ****     *
1401:.\Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_1.c ****     *
1406:.\Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_1.c ****     *  No.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 58


1408:.\Generated_Source\PSoC5/UART_1.c ****     *
1409:.\Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_1.c ****     *
1432:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_1.c ****     *
1439:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_1.c ****     {
 1835              		.loc 1 1441 0
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 16
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839              		@ link register save eliminated.
 1840 0000 80B4     		push	{r7}
 1841              		.cfi_def_cfa_offset 4
 1842              		.cfi_offset 7, -4
 1843 0002 85B0     		sub	sp, sp, #20
 1844              		.cfi_def_cfa_offset 24
 1845 0004 00AF     		add	r7, sp, #0
 1846              		.cfi_def_cfa_register 7
 1847 0006 0346     		mov	r3, r0
 1848 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/UART_1.c **** 
1443:.\Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1849              		.loc 1 1444 0
 1850 000a 1F4B     		ldr	r3, .L123
 1851 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1852 000e 002B     		cmp	r3, #0
 1853 0010 35D0     		beq	.L115
 1854              	.LBB2:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 59


1445:.\Generated_Source\PSoC5/UART_1.c ****         {
1446:.\Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_1.c **** 
1450:.\Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_1.c **** 
1452:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_1.c ****             {
1455:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART_1.c **** 
1461:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_1.c ****                 {
1463:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART_1.c ****                 }
1465:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART_1.c ****             }
1467:.\Generated_Source\PSoC5/UART_1.c **** 
1468:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_1.c ****             {
1471:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_1.c ****                 {
1473:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART_1.c ****                 }
1475:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART_1.c ****             }
1477:.\Generated_Source\PSoC5/UART_1.c **** 
1478:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_1.c ****             {
1482:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_1.c ****             }
1485:.\Generated_Source\PSoC5/UART_1.c **** 
1486:.\Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_1.c **** 
1488:.\Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_1.c **** 
1490:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1855              		.loc 1 1490 0
 1856 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1857 0014 002B     		cmp	r3, #0
 1858 0016 02D0     		beq	.L117
 1859              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1860 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1861 001a 032B     		cmp	r3, #3
 1862 001c 12D1     		bne	.L118
 1863              	.L117:
1491:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 60


1493:.\Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_1.c **** 
1500:.\Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 1864              		.loc 1 1501 0 is_stmt 1
 1865 001e 1B4B     		ldr	r3, .L123+4
 1866 0020 1B78     		ldrb	r3, [r3]
 1867 0022 DAB2     		uxtb	r2, r3
 1868 0024 1A4B     		ldr	r3, .L123+8
 1869 0026 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1870              		.loc 1 1502 0
 1871 0028 184B     		ldr	r3, .L123+4
 1872 002a 6722     		movs	r2, #103
 1873 002c 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART_1.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_1.c **** 
1508:.\Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1874              		.loc 1 1509 0
 1875 002e 194B     		ldr	r3, .L123+12
 1876 0030 0022     		movs	r2, #0
 1877 0032 1A70     		strb	r2, [r3]
 1878              	.L119:
1510:.\Generated_Source\PSoC5/UART_1.c **** 
1511:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_1.c ****                 {
1513:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1879              		.loc 1 1513 0 discriminator 1
 1880 0034 184B     		ldr	r3, .L123+16
 1881 0036 1B78     		ldrb	r3, [r3]
 1882 0038 FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/UART_1.c ****                 }
1515:.\Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1883              		.loc 1 1515 0 discriminator 1
 1884 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1885 003c 03F00203 		and	r3, r3, #2
 1886 0040 002B     		cmp	r3, #0
 1887 0042 F7D1     		bne	.L119
 1888              	.L118:
1516:.\Generated_Source\PSoC5/UART_1.c ****             }
1517:.\Generated_Source\PSoC5/UART_1.c **** 
1518:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1889              		.loc 1 1518 0
 1890 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1891 0046 012B     		cmp	r3, #1
 1892 0048 02D0     		beq	.L120
 1893              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1894 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 61


 1895 004c 032B     		cmp	r3, #3
 1896 004e 09D1     		bne	.L121
 1897              	.L120:
1519:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_1.c ****             {
1521:.\Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_1.c ****                 {
1523:.\Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1898              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1899 0050 114B     		ldr	r3, .L123+16
 1900 0052 1B78     		ldrb	r3, [r3]
 1901 0054 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/UART_1.c ****                 }
1525:.\Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1902              		.loc 1 1525 0 discriminator 1
 1903 0056 FB7B     		ldrb	r3, [r7, #15]
 1904 0058 DB43     		mvns	r3, r3
 1905 005a DBB2     		uxtb	r3, r3
 1906 005c 03F00103 		and	r3, r3, #1
 1907 0060 002B     		cmp	r3, #0
 1908 0062 F5D1     		bne	.L120
 1909              	.L121:
1526:.\Generated_Source\PSoC5/UART_1.c ****             }
1527:.\Generated_Source\PSoC5/UART_1.c **** 
1528:.\Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1910              		.loc 1 1528 0
 1911 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1912 0066 012B     		cmp	r3, #1
 1913 0068 05D0     		beq	.L122
 1914              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1915 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1916 006c 022B     		cmp	r3, #2
 1917 006e 02D0     		beq	.L122
1529:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1918              		.loc 1 1529 0 is_stmt 1
 1919 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1920 0072 032B     		cmp	r3, #3
 1921 0074 03D1     		bne	.L115
 1922              	.L122:
1530:.\Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_1.c ****             {
1532:.\Generated_Source\PSoC5/UART_1.c **** 
1533:.\Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1923              		.loc 1 1534 0
 1924 0076 054B     		ldr	r3, .L123+4
 1925 0078 054A     		ldr	r2, .L123+8
 1926 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1927 007c 1A70     		strb	r2, [r3]
 1928              	.L115:
 1929              	.LBE2:
1535:.\Generated_Source\PSoC5/UART_1.c ****             #else
1536:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_1.c **** 
1539:.\Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 62


1541:.\Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_1.c ****             }
1545:.\Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_1.c ****         }
1547:.\Generated_Source\PSoC5/UART_1.c ****     }
 1930              		.loc 1 1547 0
 1931 007e 1437     		adds	r7, r7, #20
 1932              		.cfi_def_cfa_offset 4
 1933 0080 BD46     		mov	sp, r7
 1934              		.cfi_def_cfa_register 13
 1935              		@ sp needed
 1936 0082 5DF8047B 		ldr	r7, [sp], #4
 1937              		.cfi_restore 7
 1938              		.cfi_def_cfa_offset 0
 1939 0086 7047     		bx	lr
 1940              	.L124:
 1941              		.align	2
 1942              	.L123:
 1943 0088 00000000 		.word	UART_1_initVar
 1944 008c 3E640040 		.word	1073767486
 1945 0090 0E000000 		.word	txPeriod.5021
 1946 0094 4D640040 		.word	1073767501
 1947 0098 6E640040 		.word	1073767534
 1948              		.cfi_endproc
 1949              	.LFE25:
 1950              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1951              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1952              		.align	2
 1953              		.global	UART_1_SetTxAddressMode
 1954              		.thumb
 1955              		.thumb_func
 1956              		.type	UART_1_SetTxAddressMode, %function
 1957              	UART_1_SetTxAddressMode:
 1958              	.LFB26:
1548:.\Generated_Source\PSoC5/UART_1.c **** 
1549:.\Generated_Source\PSoC5/UART_1.c **** 
1550:.\Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART_1.c ****     *
1554:.\Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_1.c ****     *
1557:.\Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_1.c ****     *
1564:.\Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_1.c ****     *
1567:.\Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 63


1569:.\Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_1.c ****     *
1571:.\Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_1.c ****     {
 1959              		.loc 1 1573 0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 8
 1962              		@ frame_needed = 1, uses_anonymous_args = 0
 1963              		@ link register save eliminated.
 1964 0000 80B4     		push	{r7}
 1965              		.cfi_def_cfa_offset 4
 1966              		.cfi_offset 7, -4
 1967 0002 83B0     		sub	sp, sp, #12
 1968              		.cfi_def_cfa_offset 16
 1969 0004 00AF     		add	r7, sp, #0
 1970              		.cfi_def_cfa_register 7
 1971 0006 0346     		mov	r3, r0
 1972 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/UART_1.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/UART_1.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/UART_1.c ****         {
1577:.\Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/UART_1.c ****         }
1582:.\Generated_Source\PSoC5/UART_1.c ****         else
1583:.\Generated_Source\PSoC5/UART_1.c ****         {
1584:.\Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:.\Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/UART_1.c ****         }
1589:.\Generated_Source\PSoC5/UART_1.c ****     }
 1973              		.loc 1 1589 0
 1974 000a 0C37     		adds	r7, r7, #12
 1975              		.cfi_def_cfa_offset 4
 1976 000c BD46     		mov	sp, r7
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 000e 5DF8047B 		ldr	r7, [sp], #4
 1980              		.cfi_restore 7
 1981              		.cfi_def_cfa_offset 0
 1982 0012 7047     		bx	lr
 1983              		.cfi_endproc
 1984              	.LFE26:
 1985              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1986              		.bss
 1987              	txPeriod.5021:
 1988 000e 00       		.space	1
 1989 000f 00       		.text
 1990              	.Letext0:
 1991              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1992              		.section	.debug_info,"",%progbits
 1993              	.Ldebug_info0:
 1994 0000 42060000 		.4byte	0x642
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 64


 1995 0004 0400     		.2byte	0x4
 1996 0006 00000000 		.4byte	.Ldebug_abbrev0
 1997 000a 04       		.byte	0x4
 1998 000b 01       		.uleb128 0x1
 1999 000c 2D030000 		.4byte	.LASF77
 2000 0010 01       		.byte	0x1
 2001 0011 07010000 		.4byte	.LASF78
 2002 0015 5E020000 		.4byte	.LASF79
 2003 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2004 001d 00000000 		.4byte	0
 2005 0021 00000000 		.4byte	.Ldebug_line0
 2006 0025 02       		.uleb128 0x2
 2007 0026 01       		.byte	0x1
 2008 0027 06       		.byte	0x6
 2009 0028 B4000000 		.4byte	.LASF0
 2010 002c 02       		.uleb128 0x2
 2011 002d 01       		.byte	0x1
 2012 002e 08       		.byte	0x8
 2013 002f 27040000 		.4byte	.LASF1
 2014 0033 02       		.uleb128 0x2
 2015 0034 02       		.byte	0x2
 2016 0035 05       		.byte	0x5
 2017 0036 35040000 		.4byte	.LASF2
 2018 003a 02       		.uleb128 0x2
 2019 003b 02       		.byte	0x2
 2020 003c 07       		.byte	0x7
 2021 003d E7010000 		.4byte	.LASF3
 2022 0041 02       		.uleb128 0x2
 2023 0042 04       		.byte	0x4
 2024 0043 05       		.byte	0x5
 2025 0044 D8000000 		.4byte	.LASF4
 2026 0048 02       		.uleb128 0x2
 2027 0049 04       		.byte	0x4
 2028 004a 07       		.byte	0x7
 2029 004b BF010000 		.4byte	.LASF5
 2030 004f 02       		.uleb128 0x2
 2031 0050 08       		.byte	0x8
 2032 0051 05       		.byte	0x5
 2033 0052 A6000000 		.4byte	.LASF6
 2034 0056 02       		.uleb128 0x2
 2035 0057 08       		.byte	0x8
 2036 0058 07       		.byte	0x7
 2037 0059 60000000 		.4byte	.LASF7
 2038 005d 03       		.uleb128 0x3
 2039 005e 04       		.byte	0x4
 2040 005f 05       		.byte	0x5
 2041 0060 696E7400 		.ascii	"int\000"
 2042 0064 02       		.uleb128 0x2
 2043 0065 04       		.byte	0x4
 2044 0066 07       		.byte	0x7
 2045 0067 7E010000 		.4byte	.LASF8
 2046 006b 04       		.uleb128 0x4
 2047 006c EE000000 		.4byte	.LASF9
 2048 0070 02       		.byte	0x2
 2049 0071 9201     		.2byte	0x192
 2050 0073 2C000000 		.4byte	0x2c
 2051 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 65


 2052 0078 00000000 		.4byte	.LASF10
 2053 007c 02       		.byte	0x2
 2054 007d 9301     		.2byte	0x193
 2055 007f 3A000000 		.4byte	0x3a
 2056 0083 04       		.uleb128 0x4
 2057 0084 29010000 		.4byte	.LASF11
 2058 0088 02       		.byte	0x2
 2059 0089 9401     		.2byte	0x194
 2060 008b 48000000 		.4byte	0x48
 2061 008f 02       		.uleb128 0x2
 2062 0090 04       		.byte	0x4
 2063 0091 04       		.byte	0x4
 2064 0092 DE030000 		.4byte	.LASF12
 2065 0096 02       		.uleb128 0x2
 2066 0097 08       		.byte	0x8
 2067 0098 04       		.byte	0x4
 2068 0099 F4000000 		.4byte	.LASF13
 2069 009d 04       		.uleb128 0x4
 2070 009e D0040000 		.4byte	.LASF14
 2071 00a2 02       		.byte	0x2
 2072 00a3 A301     		.2byte	0x1a3
 2073 00a5 A9000000 		.4byte	0xa9
 2074 00a9 02       		.uleb128 0x2
 2075 00aa 01       		.byte	0x1
 2076 00ab 08       		.byte	0x8
 2077 00ac B6040000 		.4byte	.LASF15
 2078 00b0 04       		.uleb128 0x4
 2079 00b1 22040000 		.4byte	.LASF16
 2080 00b5 02       		.byte	0x2
 2081 00b6 3C02     		.2byte	0x23c
 2082 00b8 BC000000 		.4byte	0xbc
 2083 00bc 05       		.uleb128 0x5
 2084 00bd 6B000000 		.4byte	0x6b
 2085 00c1 05       		.uleb128 0x5
 2086 00c2 77000000 		.4byte	0x77
 2087 00c6 04       		.uleb128 0x4
 2088 00c7 B7020000 		.4byte	.LASF17
 2089 00cb 02       		.byte	0x2
 2090 00cc 3E02     		.2byte	0x23e
 2091 00ce D2000000 		.4byte	0xd2
 2092 00d2 05       		.uleb128 0x5
 2093 00d3 83000000 		.4byte	0x83
 2094 00d7 02       		.uleb128 0x2
 2095 00d8 04       		.byte	0x4
 2096 00d9 07       		.byte	0x7
 2097 00da D8020000 		.4byte	.LASF18
 2098 00de 06       		.uleb128 0x6
 2099 00df E1000000 		.4byte	.LASF19
 2100 00e3 01       		.byte	0x1
 2101 00e4 4C       		.byte	0x4c
 2102 00e5 00000000 		.4byte	.LFB0
 2103 00e9 20000000 		.4byte	.LFE0-.LFB0
 2104 00ed 01       		.uleb128 0x1
 2105 00ee 9C       		.byte	0x9c
 2106 00ef 06       		.uleb128 0x6
 2107 00f0 E6040000 		.4byte	.LASF20
 2108 00f4 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 66


 2109 00f5 6A       		.byte	0x6a
 2110 00f6 00000000 		.4byte	.LFB1
 2111 00fa 6C000000 		.4byte	.LFE1-.LFB1
 2112 00fe 01       		.uleb128 0x1
 2113 00ff 9C       		.byte	0x9c
 2114 0100 07       		.uleb128 0x7
 2115 0101 FA010000 		.4byte	.LASF21
 2116 0105 01       		.byte	0x1
 2117 0106 B7       		.byte	0xb7
 2118 0107 00000000 		.4byte	.LFB2
 2119 010b 78000000 		.4byte	.LFE2-.LFB2
 2120 010f 01       		.uleb128 0x1
 2121 0110 9C       		.byte	0x9c
 2122 0111 24010000 		.4byte	0x124
 2123 0115 08       		.uleb128 0x8
 2124 0116 F2040000 		.4byte	.LASF23
 2125 011a 01       		.byte	0x1
 2126 011b B9       		.byte	0xb9
 2127 011c 6B000000 		.4byte	0x6b
 2128 0120 02       		.uleb128 0x2
 2129 0121 91       		.byte	0x91
 2130 0122 77       		.sleb128 -9
 2131 0123 00       		.byte	0
 2132 0124 07       		.uleb128 0x7
 2133 0125 9C020000 		.4byte	.LASF22
 2134 0129 01       		.byte	0x1
 2135 012a F0       		.byte	0xf0
 2136 012b 00000000 		.4byte	.LFB3
 2137 012f 6C000000 		.4byte	.LFE3-.LFB3
 2138 0133 01       		.uleb128 0x1
 2139 0134 9C       		.byte	0x9c
 2140 0135 48010000 		.4byte	0x148
 2141 0139 08       		.uleb128 0x8
 2142 013a F2040000 		.4byte	.LASF23
 2143 013e 01       		.byte	0x1
 2144 013f F2       		.byte	0xf2
 2145 0140 6B000000 		.4byte	0x6b
 2146 0144 02       		.uleb128 0x2
 2147 0145 91       		.byte	0x91
 2148 0146 77       		.sleb128 -9
 2149 0147 00       		.byte	0
 2150 0148 09       		.uleb128 0x9
 2151 0149 43020000 		.4byte	.LASF49
 2152 014d 01       		.byte	0x1
 2153 014e 2701     		.2byte	0x127
 2154 0150 6B000000 		.4byte	0x6b
 2155 0154 00000000 		.4byte	.LFB4
 2156 0158 10000000 		.4byte	.LFE4-.LFB4
 2157 015c 01       		.uleb128 0x1
 2158 015d 9C       		.byte	0x9c
 2159 015e 0A       		.uleb128 0xa
 2160 015f 53040000 		.4byte	.LASF24
 2161 0163 01       		.byte	0x1
 2162 0164 3F01     		.2byte	0x13f
 2163 0166 00000000 		.4byte	.LFB5
 2164 016a 14000000 		.4byte	.LFE5-.LFB5
 2165 016e 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 67


 2166 016f 9C       		.byte	0x9c
 2167 0170 84010000 		.4byte	0x184
 2168 0174 0B       		.uleb128 0xb
 2169 0175 30010000 		.4byte	.LASF26
 2170 0179 01       		.byte	0x1
 2171 017a 3F01     		.2byte	0x13f
 2172 017c 6B000000 		.4byte	0x6b
 2173 0180 02       		.uleb128 0x2
 2174 0181 91       		.byte	0x91
 2175 0182 77       		.sleb128 -9
 2176 0183 00       		.byte	0
 2177 0184 0A       		.uleb128 0xa
 2178 0185 38010000 		.4byte	.LASF25
 2179 0189 01       		.byte	0x1
 2180 018a 6701     		.2byte	0x167
 2181 018c 00000000 		.4byte	.LFB6
 2182 0190 20000000 		.4byte	.LFE6-.LFB6
 2183 0194 01       		.uleb128 0x1
 2184 0195 9C       		.byte	0x9c
 2185 0196 AA010000 		.4byte	0x1aa
 2186 019a 0B       		.uleb128 0xb
 2187 019b 3C020000 		.4byte	.LASF27
 2188 019f 01       		.byte	0x1
 2189 01a0 6701     		.2byte	0x167
 2190 01a2 6B000000 		.4byte	0x6b
 2191 01a6 02       		.uleb128 0x2
 2192 01a7 91       		.byte	0x91
 2193 01a8 77       		.sleb128 -9
 2194 01a9 00       		.byte	0
 2195 01aa 0C       		.uleb128 0xc
 2196 01ab 4E000000 		.4byte	.LASF31
 2197 01af 01       		.byte	0x1
 2198 01b0 8801     		.2byte	0x188
 2199 01b2 6B000000 		.4byte	0x6b
 2200 01b6 00000000 		.4byte	.LFB7
 2201 01ba 94000000 		.4byte	.LFE7-.LFB7
 2202 01be 01       		.uleb128 0x1
 2203 01bf 9C       		.byte	0x9c
 2204 01c0 F2010000 		.4byte	0x1f2
 2205 01c4 0D       		.uleb128 0xd
 2206 01c5 9F040000 		.4byte	.LASF28
 2207 01c9 01       		.byte	0x1
 2208 01ca 8A01     		.2byte	0x18a
 2209 01cc 6B000000 		.4byte	0x6b
 2210 01d0 02       		.uleb128 0x2
 2211 01d1 91       		.byte	0x91
 2212 01d2 77       		.sleb128 -9
 2213 01d3 0D       		.uleb128 0xd
 2214 01d4 D6040000 		.4byte	.LASF29
 2215 01d8 01       		.byte	0x1
 2216 01d9 8E01     		.2byte	0x18e
 2217 01db 77000000 		.4byte	0x77
 2218 01df 02       		.uleb128 0x2
 2219 01e0 91       		.byte	0x91
 2220 01e1 74       		.sleb128 -12
 2221 01e2 0D       		.uleb128 0xd
 2222 01e3 9F010000 		.4byte	.LASF30
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 68


 2223 01e7 01       		.byte	0x1
 2224 01e8 8F01     		.2byte	0x18f
 2225 01ea 77000000 		.4byte	0x77
 2226 01ee 02       		.uleb128 0x2
 2227 01ef 91       		.byte	0x91
 2228 01f0 72       		.sleb128 -14
 2229 01f1 00       		.byte	0
 2230 01f2 0C       		.uleb128 0xc
 2231 01f3 2F050000 		.4byte	.LASF32
 2232 01f7 01       		.byte	0x1
 2233 01f8 E501     		.2byte	0x1e5
 2234 01fa 6B000000 		.4byte	0x6b
 2235 01fe 00000000 		.4byte	.LFB8
 2236 0202 40000000 		.4byte	.LFE8-.LFB8
 2237 0206 01       		.uleb128 0x1
 2238 0207 9C       		.byte	0x9c
 2239 0208 1C020000 		.4byte	0x21c
 2240 020c 0D       		.uleb128 0xd
 2241 020d 03050000 		.4byte	.LASF33
 2242 0211 01       		.byte	0x1
 2243 0212 E701     		.2byte	0x1e7
 2244 0214 6B000000 		.4byte	0x6b
 2245 0218 02       		.uleb128 0x2
 2246 0219 91       		.byte	0x91
 2247 021a 77       		.sleb128 -9
 2248 021b 00       		.byte	0
 2249 021c 0C       		.uleb128 0xc
 2250 021d 43050000 		.4byte	.LASF34
 2251 0221 01       		.byte	0x1
 2252 0222 1402     		.2byte	0x214
 2253 0224 6B000000 		.4byte	0x6b
 2254 0228 00000000 		.4byte	.LFB9
 2255 022c B8000000 		.4byte	.LFE9-.LFB9
 2256 0230 01       		.uleb128 0x1
 2257 0231 9C       		.byte	0x9c
 2258 0232 73020000 		.4byte	0x273
 2259 0236 0D       		.uleb128 0xd
 2260 0237 9F040000 		.4byte	.LASF28
 2261 023b 01       		.byte	0x1
 2262 023c 1602     		.2byte	0x216
 2263 023e 6B000000 		.4byte	0x6b
 2264 0242 02       		.uleb128 0x2
 2265 0243 91       		.byte	0x91
 2266 0244 77       		.sleb128 -9
 2267 0245 0D       		.uleb128 0xd
 2268 0246 BB030000 		.4byte	.LASF35
 2269 024a 01       		.byte	0x1
 2270 024b 1702     		.2byte	0x217
 2271 024d 6B000000 		.4byte	0x6b
 2272 0251 02       		.uleb128 0x2
 2273 0252 91       		.byte	0x91
 2274 0253 71       		.sleb128 -15
 2275 0254 0D       		.uleb128 0xd
 2276 0255 D6040000 		.4byte	.LASF29
 2277 0259 01       		.byte	0x1
 2278 025a 1A02     		.2byte	0x21a
 2279 025c 77000000 		.4byte	0x77
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 69


 2280 0260 02       		.uleb128 0x2
 2281 0261 91       		.byte	0x91
 2282 0262 74       		.sleb128 -12
 2283 0263 0D       		.uleb128 0xd
 2284 0264 9F010000 		.4byte	.LASF30
 2285 0268 01       		.byte	0x1
 2286 0269 1B02     		.2byte	0x21b
 2287 026b 77000000 		.4byte	0x77
 2288 026f 02       		.uleb128 0x2
 2289 0270 91       		.byte	0x91
 2290 0271 72       		.sleb128 -14
 2291 0272 00       		.byte	0
 2292 0273 0E       		.uleb128 0xe
 2293 0274 A8020000 		.4byte	.LASF36
 2294 0278 01       		.byte	0x1
 2295 0279 7A02     		.2byte	0x27a
 2296 027b 77000000 		.4byte	0x77
 2297 027f 00000000 		.4byte	.LFB10
 2298 0283 44000000 		.4byte	.LFE10-.LFB10
 2299 0287 01       		.uleb128 0x1
 2300 0288 9C       		.byte	0x9c
 2301 0289 9D020000 		.4byte	0x29d
 2302 028d 0D       		.uleb128 0xd
 2303 028e B0010000 		.4byte	.LASF37
 2304 0292 01       		.byte	0x1
 2305 0293 7E02     		.2byte	0x27e
 2306 0295 77000000 		.4byte	0x77
 2307 0299 02       		.uleb128 0x2
 2308 029a 91       		.byte	0x91
 2309 029b 6E       		.sleb128 -18
 2310 029c 00       		.byte	0
 2311 029d 0C       		.uleb128 0xc
 2312 029e 88040000 		.4byte	.LASF38
 2313 02a2 01       		.byte	0x1
 2314 02a3 AB02     		.2byte	0x2ab
 2315 02a5 77000000 		.4byte	0x77
 2316 02a9 00000000 		.4byte	.LFB11
 2317 02ad 94000000 		.4byte	.LFE11-.LFB11
 2318 02b1 01       		.uleb128 0x1
 2319 02b2 9C       		.byte	0x9c
 2320 02b3 C7020000 		.4byte	0x2c7
 2321 02b7 0D       		.uleb128 0xd
 2322 02b8 E2010000 		.4byte	.LASF39
 2323 02bc 01       		.byte	0x1
 2324 02bd AE02     		.2byte	0x2ae
 2325 02bf 77000000 		.4byte	0x77
 2326 02c3 02       		.uleb128 0x2
 2327 02c4 91       		.byte	0x91
 2328 02c5 76       		.sleb128 -10
 2329 02c6 00       		.byte	0
 2330 02c7 0F       		.uleb128 0xf
 2331 02c8 F5030000 		.4byte	.LASF40
 2332 02cc 01       		.byte	0x1
 2333 02cd F502     		.2byte	0x2f5
 2334 02cf 00000000 		.4byte	.LFB12
 2335 02d3 7C000000 		.4byte	.LFE12-.LFB12
 2336 02d7 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 70


 2337 02d8 9C       		.byte	0x9c
 2338 02d9 ED020000 		.4byte	0x2ed
 2339 02dd 0D       		.uleb128 0xd
 2340 02de F2040000 		.4byte	.LASF23
 2341 02e2 01       		.byte	0x1
 2342 02e3 F702     		.2byte	0x2f7
 2343 02e5 6B000000 		.4byte	0x6b
 2344 02e9 02       		.uleb128 0x2
 2345 02ea 91       		.byte	0x91
 2346 02eb 77       		.sleb128 -9
 2347 02ec 00       		.byte	0
 2348 02ed 0A       		.uleb128 0xa
 2349 02ee 0A040000 		.4byte	.LASF41
 2350 02f2 01       		.byte	0x1
 2351 02f3 2D03     		.2byte	0x32d
 2352 02f5 00000000 		.4byte	.LFB13
 2353 02f9 14000000 		.4byte	.LFE13-.LFB13
 2354 02fd 01       		.uleb128 0x1
 2355 02fe 9C       		.byte	0x9c
 2356 02ff 13030000 		.4byte	0x313
 2357 0303 0B       		.uleb128 0xb
 2358 0304 FB000000 		.4byte	.LASF42
 2359 0308 01       		.byte	0x1
 2360 0309 2D03     		.2byte	0x32d
 2361 030b 6B000000 		.4byte	0x6b
 2362 030f 02       		.uleb128 0x2
 2363 0310 91       		.byte	0x91
 2364 0311 77       		.sleb128 -9
 2365 0312 00       		.byte	0
 2366 0313 0A       		.uleb128 0xa
 2367 0314 E1020000 		.4byte	.LASF43
 2368 0318 01       		.byte	0x1
 2369 0319 5903     		.2byte	0x359
 2370 031b 00000000 		.4byte	.LFB14
 2371 031f 20000000 		.4byte	.LFE14-.LFB14
 2372 0323 01       		.uleb128 0x1
 2373 0324 9C       		.byte	0x9c
 2374 0325 39030000 		.4byte	0x339
 2375 0329 0B       		.uleb128 0xb
 2376 032a 0B030000 		.4byte	.LASF44
 2377 032e 01       		.byte	0x1
 2378 032f 5903     		.2byte	0x359
 2379 0331 6B000000 		.4byte	0x6b
 2380 0335 02       		.uleb128 0x2
 2381 0336 91       		.byte	0x91
 2382 0337 77       		.sleb128 -9
 2383 0338 00       		.byte	0
 2384 0339 0A       		.uleb128 0xa
 2385 033a F6020000 		.4byte	.LASF45
 2386 033e 01       		.byte	0x1
 2387 033f 6D03     		.2byte	0x36d
 2388 0341 00000000 		.4byte	.LFB15
 2389 0345 20000000 		.4byte	.LFE15-.LFB15
 2390 0349 01       		.uleb128 0x1
 2391 034a 9C       		.byte	0x9c
 2392 034b 5F030000 		.4byte	0x35f
 2393 034f 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 71


 2394 0350 0B030000 		.4byte	.LASF44
 2395 0354 01       		.byte	0x1
 2396 0355 6D03     		.2byte	0x36d
 2397 0357 6B000000 		.4byte	0x6b
 2398 035b 02       		.uleb128 0x2
 2399 035c 91       		.byte	0x91
 2400 035d 77       		.sleb128 -9
 2401 035e 00       		.byte	0
 2402 035f 0A       		.uleb128 0xa
 2403 0360 C4030000 		.4byte	.LASF46
 2404 0364 01       		.byte	0x1
 2405 0365 8C03     		.2byte	0x38c
 2406 0367 00000000 		.4byte	.LFB16
 2407 036b 20000000 		.4byte	.LFE16-.LFB16
 2408 036f 01       		.uleb128 0x1
 2409 0370 9C       		.byte	0x9c
 2410 0371 85030000 		.4byte	0x385
 2411 0375 0B       		.uleb128 0xb
 2412 0376 3C020000 		.4byte	.LASF27
 2413 037a 01       		.byte	0x1
 2414 037b 8C03     		.2byte	0x38c
 2415 037d 6B000000 		.4byte	0x6b
 2416 0381 02       		.uleb128 0x2
 2417 0382 91       		.byte	0x91
 2418 0383 77       		.sleb128 -9
 2419 0384 00       		.byte	0
 2420 0385 0A       		.uleb128 0xa
 2421 0386 BD020000 		.4byte	.LASF47
 2422 038a 01       		.byte	0x1
 2423 038b AE03     		.2byte	0x3ae
 2424 038d 00000000 		.4byte	.LFB17
 2425 0391 94000000 		.4byte	.LFE17-.LFB17
 2426 0395 01       		.uleb128 0x1
 2427 0396 9C       		.byte	0x9c
 2428 0397 AB030000 		.4byte	0x3ab
 2429 039b 0B       		.uleb128 0xb
 2430 039c 1C000000 		.4byte	.LASF48
 2431 03a0 01       		.byte	0x1
 2432 03a1 AE03     		.2byte	0x3ae
 2433 03a3 6B000000 		.4byte	0x6b
 2434 03a7 02       		.uleb128 0x2
 2435 03a8 91       		.byte	0x91
 2436 03a9 77       		.sleb128 -9
 2437 03aa 00       		.byte	0
 2438 03ab 09       		.uleb128 0x9
 2439 03ac 8B010000 		.4byte	.LASF50
 2440 03b0 01       		.byte	0x1
 2441 03b1 EB03     		.2byte	0x3eb
 2442 03b3 6B000000 		.4byte	0x6b
 2443 03b7 00000000 		.4byte	.LFB18
 2444 03bb 18000000 		.4byte	.LFE18-.LFB18
 2445 03bf 01       		.uleb128 0x1
 2446 03c0 9C       		.byte	0x9c
 2447 03c1 0A       		.uleb128 0xa
 2448 03c2 27000000 		.4byte	.LASF51
 2449 03c6 01       		.byte	0x1
 2450 03c7 1104     		.2byte	0x411
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 72


 2451 03c9 00000000 		.4byte	.LFB19
 2452 03cd B8000000 		.4byte	.LFE19-.LFB19
 2453 03d1 01       		.uleb128 0x1
 2454 03d2 9C       		.byte	0x9c
 2455 03d3 05040000 		.4byte	0x405
 2456 03d7 0B       		.uleb128 0xb
 2457 03d8 1C000000 		.4byte	.LASF48
 2458 03dc 01       		.byte	0x1
 2459 03dd 1104     		.2byte	0x411
 2460 03df 6B000000 		.4byte	0x6b
 2461 03e3 02       		.uleb128 0x2
 2462 03e4 91       		.byte	0x91
 2463 03e5 6F       		.sleb128 -17
 2464 03e6 0D       		.uleb128 0xd
 2465 03e7 D1010000 		.4byte	.LASF52
 2466 03eb 01       		.byte	0x1
 2467 03ec 1804     		.2byte	0x418
 2468 03ee 77000000 		.4byte	0x77
 2469 03f2 02       		.uleb128 0x2
 2470 03f3 91       		.byte	0x91
 2471 03f4 76       		.sleb128 -10
 2472 03f5 0D       		.uleb128 0xd
 2473 03f6 52010000 		.4byte	.LASF53
 2474 03fa 01       		.byte	0x1
 2475 03fb 1904     		.2byte	0x419
 2476 03fd 77000000 		.4byte	0x77
 2477 0401 02       		.uleb128 0x2
 2478 0402 91       		.byte	0x91
 2479 0403 74       		.sleb128 -12
 2480 0404 00       		.byte	0
 2481 0405 0F       		.uleb128 0xf
 2482 0406 E4030000 		.4byte	.LASF54
 2483 040a 01       		.byte	0x1
 2484 040b 7904     		.2byte	0x479
 2485 040d 00000000 		.4byte	.LFB20
 2486 0411 40000000 		.4byte	.LFE20-.LFB20
 2487 0415 01       		.uleb128 0x1
 2488 0416 9C       		.byte	0x9c
 2489 0417 3A040000 		.4byte	0x43a
 2490 041b 0B       		.uleb128 0xb
 2491 041c 36000000 		.4byte	.LASF55
 2492 0420 01       		.byte	0x1
 2493 0421 7904     		.2byte	0x479
 2494 0423 3A040000 		.4byte	0x43a
 2495 0427 02       		.uleb128 0x2
 2496 0428 91       		.byte	0x91
 2497 0429 6C       		.sleb128 -20
 2498 042a 0D       		.uleb128 0xd
 2499 042b 08020000 		.4byte	.LASF56
 2500 042f 01       		.byte	0x1
 2501 0430 7B04     		.2byte	0x47b
 2502 0432 77000000 		.4byte	0x77
 2503 0436 02       		.uleb128 0x2
 2504 0437 91       		.byte	0x91
 2505 0438 76       		.sleb128 -10
 2506 0439 00       		.byte	0
 2507 043a 10       		.uleb128 0x10
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 73


 2508 043b 04       		.byte	0x4
 2509 043c 40040000 		.4byte	0x440
 2510 0440 11       		.uleb128 0x11
 2511 0441 9D000000 		.4byte	0x9d
 2512 0445 0F       		.uleb128 0xf
 2513 0446 52050000 		.4byte	.LASF57
 2514 044a 01       		.byte	0x1
 2515 044b A704     		.2byte	0x4a7
 2516 044d 00000000 		.4byte	.LFB21
 2517 0451 40000000 		.4byte	.LFE21-.LFB21
 2518 0455 01       		.uleb128 0x1
 2519 0456 9C       		.byte	0x9c
 2520 0457 89040000 		.4byte	0x489
 2521 045b 0B       		.uleb128 0xb
 2522 045c 36000000 		.4byte	.LASF55
 2523 0460 01       		.byte	0x1
 2524 0461 A704     		.2byte	0x4a7
 2525 0463 89040000 		.4byte	0x489
 2526 0467 02       		.uleb128 0x2
 2527 0468 91       		.byte	0x91
 2528 0469 6C       		.sleb128 -20
 2529 046a 0B       		.uleb128 0xb
 2530 046b 7E040000 		.4byte	.LASF58
 2531 046f 01       		.byte	0x1
 2532 0470 A704     		.2byte	0x4a7
 2533 0472 77000000 		.4byte	0x77
 2534 0476 02       		.uleb128 0x2
 2535 0477 91       		.byte	0x91
 2536 0478 6A       		.sleb128 -22
 2537 0479 0D       		.uleb128 0xd
 2538 047a 08020000 		.4byte	.LASF56
 2539 047e 01       		.byte	0x1
 2540 047f AA04     		.2byte	0x4aa
 2541 0481 77000000 		.4byte	0x77
 2542 0485 02       		.uleb128 0x2
 2543 0486 91       		.byte	0x91
 2544 0487 76       		.sleb128 -10
 2545 0488 00       		.byte	0
 2546 0489 10       		.uleb128 0x10
 2547 048a 04       		.byte	0x4
 2548 048b 8F040000 		.4byte	0x48f
 2549 048f 11       		.uleb128 0x11
 2550 0490 6B000000 		.4byte	0x6b
 2551 0494 0F       		.uleb128 0xf
 2552 0495 C9000000 		.4byte	.LASF59
 2553 0499 01       		.byte	0x1
 2554 049a CE04     		.2byte	0x4ce
 2555 049c 00000000 		.4byte	.LFB22
 2556 04a0 30000000 		.4byte	.LFE22-.LFB22
 2557 04a4 01       		.uleb128 0x1
 2558 04a5 9C       		.byte	0x9c
 2559 04a6 BA040000 		.4byte	0x4ba
 2560 04aa 0B       		.uleb128 0xb
 2561 04ab 1C000000 		.4byte	.LASF48
 2562 04af 01       		.byte	0x1
 2563 04b0 CE04     		.2byte	0x4ce
 2564 04b2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 74


 2565 04b6 02       		.uleb128 0x2
 2566 04b7 91       		.byte	0x91
 2567 04b8 77       		.sleb128 -9
 2568 04b9 00       		.byte	0
 2569 04ba 0C       		.uleb128 0xc
 2570 04bb 8F000000 		.4byte	.LASF60
 2571 04bf 01       		.byte	0x1
 2572 04c0 F904     		.2byte	0x4f9
 2573 04c2 77000000 		.4byte	0x77
 2574 04c6 00000000 		.4byte	.LFB23
 2575 04ca 78000000 		.4byte	.LFE23-.LFB23
 2576 04ce 01       		.uleb128 0x1
 2577 04cf 9C       		.byte	0x9c
 2578 04d0 E4040000 		.4byte	0x4e4
 2579 04d4 0D       		.uleb128 0xd
 2580 04d5 E2010000 		.4byte	.LASF39
 2581 04d9 01       		.byte	0x1
 2582 04da FC04     		.2byte	0x4fc
 2583 04dc 77000000 		.4byte	0x77
 2584 04e0 02       		.uleb128 0x2
 2585 04e1 91       		.byte	0x91
 2586 04e2 76       		.sleb128 -10
 2587 04e3 00       		.byte	0
 2588 04e4 0F       		.uleb128 0xf
 2589 04e5 07000000 		.4byte	.LASF61
 2590 04e9 01       		.byte	0x1
 2591 04ea 4A05     		.2byte	0x54a
 2592 04ec 00000000 		.4byte	.LFB24
 2593 04f0 68000000 		.4byte	.LFE24-.LFB24
 2594 04f4 01       		.uleb128 0x1
 2595 04f5 9C       		.byte	0x9c
 2596 04f6 0A050000 		.4byte	0x50a
 2597 04fa 0D       		.uleb128 0xd
 2598 04fb F2040000 		.4byte	.LASF23
 2599 04ff 01       		.byte	0x1
 2600 0500 4C05     		.2byte	0x54c
 2601 0502 6B000000 		.4byte	0x6b
 2602 0506 02       		.uleb128 0x2
 2603 0507 91       		.byte	0x91
 2604 0508 77       		.sleb128 -9
 2605 0509 00       		.byte	0
 2606 050a 0A       		.uleb128 0xa
 2607 050b 3D000000 		.4byte	.LASF62
 2608 050f 01       		.byte	0x1
 2609 0510 A005     		.2byte	0x5a0
 2610 0512 00000000 		.4byte	.LFB25
 2611 0516 9C000000 		.4byte	.LFE25-.LFB25
 2612 051a 01       		.uleb128 0x1
 2613 051b 9C       		.byte	0x9c
 2614 051c 5B050000 		.4byte	0x55b
 2615 0520 0B       		.uleb128 0xb
 2616 0521 76010000 		.4byte	.LASF63
 2617 0525 01       		.byte	0x1
 2618 0526 A005     		.2byte	0x5a0
 2619 0528 6B000000 		.4byte	0x6b
 2620 052c 02       		.uleb128 0x2
 2621 052d 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 75


 2622 052e 6F       		.sleb128 -17
 2623 052f 12       		.uleb128 0x12
 2624 0530 12000000 		.4byte	.LBB2
 2625 0534 6C000000 		.4byte	.LBE2-.LBB2
 2626 0538 0D       		.uleb128 0xd
 2627 0539 D0020000 		.4byte	.LASF64
 2628 053d 01       		.byte	0x1
 2629 053e A805     		.2byte	0x5a8
 2630 0540 6B000000 		.4byte	0x6b
 2631 0544 02       		.uleb128 0x2
 2632 0545 91       		.byte	0x91
 2633 0546 77       		.sleb128 -9
 2634 0547 0D       		.uleb128 0xd
 2635 0548 C0000000 		.4byte	.LASF65
 2636 054c 01       		.byte	0x1
 2637 054d D005     		.2byte	0x5d0
 2638 054f 6B000000 		.4byte	0x6b
 2639 0553 05       		.uleb128 0x5
 2640 0554 03       		.byte	0x3
 2641 0555 0E000000 		.4byte	txPeriod.5021
 2642 0559 00       		.byte	0
 2643 055a 00       		.byte	0
 2644 055b 0A       		.uleb128 0xa
 2645 055c 24020000 		.4byte	.LASF66
 2646 0560 01       		.byte	0x1
 2647 0561 2406     		.2byte	0x624
 2648 0563 00000000 		.4byte	.LFB26
 2649 0567 14000000 		.4byte	.LFE26-.LFB26
 2650 056b 01       		.uleb128 0x1
 2651 056c 9C       		.byte	0x9c
 2652 056d 81050000 		.4byte	0x581
 2653 0571 0B       		.uleb128 0xb
 2654 0572 FB000000 		.4byte	.LASF42
 2655 0576 01       		.byte	0x1
 2656 0577 2406     		.2byte	0x624
 2657 0579 6B000000 		.4byte	0x6b
 2658 057d 02       		.uleb128 0x2
 2659 057e 91       		.byte	0x91
 2660 057f 77       		.sleb128 -9
 2661 0580 00       		.byte	0
 2662 0581 13       		.uleb128 0x13
 2663 0582 6F040000 		.4byte	.LASF67
 2664 0586 01       		.byte	0x1
 2665 0587 1B       		.byte	0x1b
 2666 0588 6B000000 		.4byte	0x6b
 2667 058c 05       		.uleb128 0x5
 2668 058d 03       		.byte	0x3
 2669 058e 00000000 		.4byte	UART_1_initVar
 2670 0592 14       		.uleb128 0x14
 2671 0593 6B000000 		.4byte	0x6b
 2672 0597 A2050000 		.4byte	0x5a2
 2673 059b 15       		.uleb128 0x15
 2674 059c D7000000 		.4byte	0xd7
 2675 05a0 FF       		.byte	0xff
 2676 05a1 00       		.byte	0
 2677 05a2 13       		.uleb128 0x13
 2678 05a3 0A050000 		.4byte	.LASF68
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 76


 2679 05a7 01       		.byte	0x1
 2680 05a8 1E       		.byte	0x1e
 2681 05a9 B3050000 		.4byte	0x5b3
 2682 05ad 05       		.uleb128 0x5
 2683 05ae 03       		.byte	0x3
 2684 05af 00000000 		.4byte	UART_1_txBuffer
 2685 05b3 05       		.uleb128 0x5
 2686 05b4 92050000 		.4byte	0x592
 2687 05b8 13       		.uleb128 0x13
 2688 05b9 3F040000 		.4byte	.LASF69
 2689 05bd 01       		.byte	0x1
 2690 05be 1F       		.byte	0x1f
 2691 05bf C1000000 		.4byte	0xc1
 2692 05c3 05       		.uleb128 0x5
 2693 05c4 03       		.byte	0x3
 2694 05c5 00000000 		.4byte	UART_1_txBufferRead
 2695 05c9 13       		.uleb128 0x13
 2696 05ca BB040000 		.4byte	.LASF70
 2697 05ce 01       		.byte	0x1
 2698 05cf 20       		.byte	0x20
 2699 05d0 77000000 		.4byte	0x77
 2700 05d4 05       		.uleb128 0x5
 2701 05d5 03       		.byte	0x3
 2702 05d6 00000000 		.4byte	UART_1_txBufferWrite
 2703 05da 13       		.uleb128 0x13
 2704 05db 11020000 		.4byte	.LASF71
 2705 05df 01       		.byte	0x1
 2706 05e0 24       		.byte	0x24
 2707 05e1 6B000000 		.4byte	0x6b
 2708 05e5 05       		.uleb128 0x5
 2709 05e6 03       		.byte	0x3
 2710 05e7 00000000 		.4byte	UART_1_errorStatus
 2711 05eb 13       		.uleb128 0x13
 2712 05ec A6040000 		.4byte	.LASF72
 2713 05f0 01       		.byte	0x1
 2714 05f1 25       		.byte	0x25
 2715 05f2 FC050000 		.4byte	0x5fc
 2716 05f6 05       		.uleb128 0x5
 2717 05f7 03       		.byte	0x3
 2718 05f8 00000000 		.4byte	UART_1_rxBuffer
 2719 05fc 05       		.uleb128 0x5
 2720 05fd 92050000 		.4byte	0x592
 2721 0601 13       		.uleb128 0x13
 2722 0602 62010000 		.4byte	.LASF73
 2723 0606 01       		.byte	0x1
 2724 0607 26       		.byte	0x26
 2725 0608 C1000000 		.4byte	0xc1
 2726 060c 05       		.uleb128 0x5
 2727 060d 03       		.byte	0x3
 2728 060e 00000000 		.4byte	UART_1_rxBufferRead
 2729 0612 13       		.uleb128 0x13
 2730 0613 1A050000 		.4byte	.LASF74
 2731 0617 01       		.byte	0x1
 2732 0618 27       		.byte	0x27
 2733 0619 C1000000 		.4byte	0xc1
 2734 061d 05       		.uleb128 0x5
 2735 061e 03       		.byte	0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 77


 2736 061f 00000000 		.4byte	UART_1_rxBufferWrite
 2737 0623 13       		.uleb128 0x13
 2738 0624 13030000 		.4byte	.LASF75
 2739 0628 01       		.byte	0x1
 2740 0629 28       		.byte	0x28
 2741 062a BC000000 		.4byte	0xbc
 2742 062e 05       		.uleb128 0x5
 2743 062f 03       		.byte	0x3
 2744 0630 00000000 		.4byte	UART_1_rxBufferLoopDetect
 2745 0634 13       		.uleb128 0x13
 2746 0635 77000000 		.4byte	.LASF76
 2747 0639 01       		.byte	0x1
 2748 063a 29       		.byte	0x29
 2749 063b BC000000 		.4byte	0xbc
 2750 063f 05       		.uleb128 0x5
 2751 0640 03       		.byte	0x3
 2752 0641 00000000 		.4byte	UART_1_rxBufferOverflow
 2753 0645 00       		.byte	0
 2754              		.section	.debug_abbrev,"",%progbits
 2755              	.Ldebug_abbrev0:
 2756 0000 01       		.uleb128 0x1
 2757 0001 11       		.uleb128 0x11
 2758 0002 01       		.byte	0x1
 2759 0003 25       		.uleb128 0x25
 2760 0004 0E       		.uleb128 0xe
 2761 0005 13       		.uleb128 0x13
 2762 0006 0B       		.uleb128 0xb
 2763 0007 03       		.uleb128 0x3
 2764 0008 0E       		.uleb128 0xe
 2765 0009 1B       		.uleb128 0x1b
 2766 000a 0E       		.uleb128 0xe
 2767 000b 55       		.uleb128 0x55
 2768 000c 17       		.uleb128 0x17
 2769 000d 11       		.uleb128 0x11
 2770 000e 01       		.uleb128 0x1
 2771 000f 10       		.uleb128 0x10
 2772 0010 17       		.uleb128 0x17
 2773 0011 00       		.byte	0
 2774 0012 00       		.byte	0
 2775 0013 02       		.uleb128 0x2
 2776 0014 24       		.uleb128 0x24
 2777 0015 00       		.byte	0
 2778 0016 0B       		.uleb128 0xb
 2779 0017 0B       		.uleb128 0xb
 2780 0018 3E       		.uleb128 0x3e
 2781 0019 0B       		.uleb128 0xb
 2782 001a 03       		.uleb128 0x3
 2783 001b 0E       		.uleb128 0xe
 2784 001c 00       		.byte	0
 2785 001d 00       		.byte	0
 2786 001e 03       		.uleb128 0x3
 2787 001f 24       		.uleb128 0x24
 2788 0020 00       		.byte	0
 2789 0021 0B       		.uleb128 0xb
 2790 0022 0B       		.uleb128 0xb
 2791 0023 3E       		.uleb128 0x3e
 2792 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 78


 2793 0025 03       		.uleb128 0x3
 2794 0026 08       		.uleb128 0x8
 2795 0027 00       		.byte	0
 2796 0028 00       		.byte	0
 2797 0029 04       		.uleb128 0x4
 2798 002a 16       		.uleb128 0x16
 2799 002b 00       		.byte	0
 2800 002c 03       		.uleb128 0x3
 2801 002d 0E       		.uleb128 0xe
 2802 002e 3A       		.uleb128 0x3a
 2803 002f 0B       		.uleb128 0xb
 2804 0030 3B       		.uleb128 0x3b
 2805 0031 05       		.uleb128 0x5
 2806 0032 49       		.uleb128 0x49
 2807 0033 13       		.uleb128 0x13
 2808 0034 00       		.byte	0
 2809 0035 00       		.byte	0
 2810 0036 05       		.uleb128 0x5
 2811 0037 35       		.uleb128 0x35
 2812 0038 00       		.byte	0
 2813 0039 49       		.uleb128 0x49
 2814 003a 13       		.uleb128 0x13
 2815 003b 00       		.byte	0
 2816 003c 00       		.byte	0
 2817 003d 06       		.uleb128 0x6
 2818 003e 2E       		.uleb128 0x2e
 2819 003f 00       		.byte	0
 2820 0040 3F       		.uleb128 0x3f
 2821 0041 19       		.uleb128 0x19
 2822 0042 03       		.uleb128 0x3
 2823 0043 0E       		.uleb128 0xe
 2824 0044 3A       		.uleb128 0x3a
 2825 0045 0B       		.uleb128 0xb
 2826 0046 3B       		.uleb128 0x3b
 2827 0047 0B       		.uleb128 0xb
 2828 0048 27       		.uleb128 0x27
 2829 0049 19       		.uleb128 0x19
 2830 004a 11       		.uleb128 0x11
 2831 004b 01       		.uleb128 0x1
 2832 004c 12       		.uleb128 0x12
 2833 004d 06       		.uleb128 0x6
 2834 004e 40       		.uleb128 0x40
 2835 004f 18       		.uleb128 0x18
 2836 0050 9642     		.uleb128 0x2116
 2837 0052 19       		.uleb128 0x19
 2838 0053 00       		.byte	0
 2839 0054 00       		.byte	0
 2840 0055 07       		.uleb128 0x7
 2841 0056 2E       		.uleb128 0x2e
 2842 0057 01       		.byte	0x1
 2843 0058 3F       		.uleb128 0x3f
 2844 0059 19       		.uleb128 0x19
 2845 005a 03       		.uleb128 0x3
 2846 005b 0E       		.uleb128 0xe
 2847 005c 3A       		.uleb128 0x3a
 2848 005d 0B       		.uleb128 0xb
 2849 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 79


 2850 005f 0B       		.uleb128 0xb
 2851 0060 27       		.uleb128 0x27
 2852 0061 19       		.uleb128 0x19
 2853 0062 11       		.uleb128 0x11
 2854 0063 01       		.uleb128 0x1
 2855 0064 12       		.uleb128 0x12
 2856 0065 06       		.uleb128 0x6
 2857 0066 40       		.uleb128 0x40
 2858 0067 18       		.uleb128 0x18
 2859 0068 9642     		.uleb128 0x2116
 2860 006a 19       		.uleb128 0x19
 2861 006b 01       		.uleb128 0x1
 2862 006c 13       		.uleb128 0x13
 2863 006d 00       		.byte	0
 2864 006e 00       		.byte	0
 2865 006f 08       		.uleb128 0x8
 2866 0070 34       		.uleb128 0x34
 2867 0071 00       		.byte	0
 2868 0072 03       		.uleb128 0x3
 2869 0073 0E       		.uleb128 0xe
 2870 0074 3A       		.uleb128 0x3a
 2871 0075 0B       		.uleb128 0xb
 2872 0076 3B       		.uleb128 0x3b
 2873 0077 0B       		.uleb128 0xb
 2874 0078 49       		.uleb128 0x49
 2875 0079 13       		.uleb128 0x13
 2876 007a 02       		.uleb128 0x2
 2877 007b 18       		.uleb128 0x18
 2878 007c 00       		.byte	0
 2879 007d 00       		.byte	0
 2880 007e 09       		.uleb128 0x9
 2881 007f 2E       		.uleb128 0x2e
 2882 0080 00       		.byte	0
 2883 0081 3F       		.uleb128 0x3f
 2884 0082 19       		.uleb128 0x19
 2885 0083 03       		.uleb128 0x3
 2886 0084 0E       		.uleb128 0xe
 2887 0085 3A       		.uleb128 0x3a
 2888 0086 0B       		.uleb128 0xb
 2889 0087 3B       		.uleb128 0x3b
 2890 0088 05       		.uleb128 0x5
 2891 0089 27       		.uleb128 0x27
 2892 008a 19       		.uleb128 0x19
 2893 008b 49       		.uleb128 0x49
 2894 008c 13       		.uleb128 0x13
 2895 008d 11       		.uleb128 0x11
 2896 008e 01       		.uleb128 0x1
 2897 008f 12       		.uleb128 0x12
 2898 0090 06       		.uleb128 0x6
 2899 0091 40       		.uleb128 0x40
 2900 0092 18       		.uleb128 0x18
 2901 0093 9742     		.uleb128 0x2117
 2902 0095 19       		.uleb128 0x19
 2903 0096 00       		.byte	0
 2904 0097 00       		.byte	0
 2905 0098 0A       		.uleb128 0xa
 2906 0099 2E       		.uleb128 0x2e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 80


 2907 009a 01       		.byte	0x1
 2908 009b 3F       		.uleb128 0x3f
 2909 009c 19       		.uleb128 0x19
 2910 009d 03       		.uleb128 0x3
 2911 009e 0E       		.uleb128 0xe
 2912 009f 3A       		.uleb128 0x3a
 2913 00a0 0B       		.uleb128 0xb
 2914 00a1 3B       		.uleb128 0x3b
 2915 00a2 05       		.uleb128 0x5
 2916 00a3 27       		.uleb128 0x27
 2917 00a4 19       		.uleb128 0x19
 2918 00a5 11       		.uleb128 0x11
 2919 00a6 01       		.uleb128 0x1
 2920 00a7 12       		.uleb128 0x12
 2921 00a8 06       		.uleb128 0x6
 2922 00a9 40       		.uleb128 0x40
 2923 00aa 18       		.uleb128 0x18
 2924 00ab 9742     		.uleb128 0x2117
 2925 00ad 19       		.uleb128 0x19
 2926 00ae 01       		.uleb128 0x1
 2927 00af 13       		.uleb128 0x13
 2928 00b0 00       		.byte	0
 2929 00b1 00       		.byte	0
 2930 00b2 0B       		.uleb128 0xb
 2931 00b3 05       		.uleb128 0x5
 2932 00b4 00       		.byte	0
 2933 00b5 03       		.uleb128 0x3
 2934 00b6 0E       		.uleb128 0xe
 2935 00b7 3A       		.uleb128 0x3a
 2936 00b8 0B       		.uleb128 0xb
 2937 00b9 3B       		.uleb128 0x3b
 2938 00ba 05       		.uleb128 0x5
 2939 00bb 49       		.uleb128 0x49
 2940 00bc 13       		.uleb128 0x13
 2941 00bd 02       		.uleb128 0x2
 2942 00be 18       		.uleb128 0x18
 2943 00bf 00       		.byte	0
 2944 00c0 00       		.byte	0
 2945 00c1 0C       		.uleb128 0xc
 2946 00c2 2E       		.uleb128 0x2e
 2947 00c3 01       		.byte	0x1
 2948 00c4 3F       		.uleb128 0x3f
 2949 00c5 19       		.uleb128 0x19
 2950 00c6 03       		.uleb128 0x3
 2951 00c7 0E       		.uleb128 0xe
 2952 00c8 3A       		.uleb128 0x3a
 2953 00c9 0B       		.uleb128 0xb
 2954 00ca 3B       		.uleb128 0x3b
 2955 00cb 05       		.uleb128 0x5
 2956 00cc 27       		.uleb128 0x27
 2957 00cd 19       		.uleb128 0x19
 2958 00ce 49       		.uleb128 0x49
 2959 00cf 13       		.uleb128 0x13
 2960 00d0 11       		.uleb128 0x11
 2961 00d1 01       		.uleb128 0x1
 2962 00d2 12       		.uleb128 0x12
 2963 00d3 06       		.uleb128 0x6
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 81


 2964 00d4 40       		.uleb128 0x40
 2965 00d5 18       		.uleb128 0x18
 2966 00d6 9742     		.uleb128 0x2117
 2967 00d8 19       		.uleb128 0x19
 2968 00d9 01       		.uleb128 0x1
 2969 00da 13       		.uleb128 0x13
 2970 00db 00       		.byte	0
 2971 00dc 00       		.byte	0
 2972 00dd 0D       		.uleb128 0xd
 2973 00de 34       		.uleb128 0x34
 2974 00df 00       		.byte	0
 2975 00e0 03       		.uleb128 0x3
 2976 00e1 0E       		.uleb128 0xe
 2977 00e2 3A       		.uleb128 0x3a
 2978 00e3 0B       		.uleb128 0xb
 2979 00e4 3B       		.uleb128 0x3b
 2980 00e5 05       		.uleb128 0x5
 2981 00e6 49       		.uleb128 0x49
 2982 00e7 13       		.uleb128 0x13
 2983 00e8 02       		.uleb128 0x2
 2984 00e9 18       		.uleb128 0x18
 2985 00ea 00       		.byte	0
 2986 00eb 00       		.byte	0
 2987 00ec 0E       		.uleb128 0xe
 2988 00ed 2E       		.uleb128 0x2e
 2989 00ee 01       		.byte	0x1
 2990 00ef 3F       		.uleb128 0x3f
 2991 00f0 19       		.uleb128 0x19
 2992 00f1 03       		.uleb128 0x3
 2993 00f2 0E       		.uleb128 0xe
 2994 00f3 3A       		.uleb128 0x3a
 2995 00f4 0B       		.uleb128 0xb
 2996 00f5 3B       		.uleb128 0x3b
 2997 00f6 05       		.uleb128 0x5
 2998 00f7 27       		.uleb128 0x27
 2999 00f8 19       		.uleb128 0x19
 3000 00f9 49       		.uleb128 0x49
 3001 00fa 13       		.uleb128 0x13
 3002 00fb 11       		.uleb128 0x11
 3003 00fc 01       		.uleb128 0x1
 3004 00fd 12       		.uleb128 0x12
 3005 00fe 06       		.uleb128 0x6
 3006 00ff 40       		.uleb128 0x40
 3007 0100 18       		.uleb128 0x18
 3008 0101 9642     		.uleb128 0x2116
 3009 0103 19       		.uleb128 0x19
 3010 0104 01       		.uleb128 0x1
 3011 0105 13       		.uleb128 0x13
 3012 0106 00       		.byte	0
 3013 0107 00       		.byte	0
 3014 0108 0F       		.uleb128 0xf
 3015 0109 2E       		.uleb128 0x2e
 3016 010a 01       		.byte	0x1
 3017 010b 3F       		.uleb128 0x3f
 3018 010c 19       		.uleb128 0x19
 3019 010d 03       		.uleb128 0x3
 3020 010e 0E       		.uleb128 0xe
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 82


 3021 010f 3A       		.uleb128 0x3a
 3022 0110 0B       		.uleb128 0xb
 3023 0111 3B       		.uleb128 0x3b
 3024 0112 05       		.uleb128 0x5
 3025 0113 27       		.uleb128 0x27
 3026 0114 19       		.uleb128 0x19
 3027 0115 11       		.uleb128 0x11
 3028 0116 01       		.uleb128 0x1
 3029 0117 12       		.uleb128 0x12
 3030 0118 06       		.uleb128 0x6
 3031 0119 40       		.uleb128 0x40
 3032 011a 18       		.uleb128 0x18
 3033 011b 9642     		.uleb128 0x2116
 3034 011d 19       		.uleb128 0x19
 3035 011e 01       		.uleb128 0x1
 3036 011f 13       		.uleb128 0x13
 3037 0120 00       		.byte	0
 3038 0121 00       		.byte	0
 3039 0122 10       		.uleb128 0x10
 3040 0123 0F       		.uleb128 0xf
 3041 0124 00       		.byte	0
 3042 0125 0B       		.uleb128 0xb
 3043 0126 0B       		.uleb128 0xb
 3044 0127 49       		.uleb128 0x49
 3045 0128 13       		.uleb128 0x13
 3046 0129 00       		.byte	0
 3047 012a 00       		.byte	0
 3048 012b 11       		.uleb128 0x11
 3049 012c 26       		.uleb128 0x26
 3050 012d 00       		.byte	0
 3051 012e 49       		.uleb128 0x49
 3052 012f 13       		.uleb128 0x13
 3053 0130 00       		.byte	0
 3054 0131 00       		.byte	0
 3055 0132 12       		.uleb128 0x12
 3056 0133 0B       		.uleb128 0xb
 3057 0134 01       		.byte	0x1
 3058 0135 11       		.uleb128 0x11
 3059 0136 01       		.uleb128 0x1
 3060 0137 12       		.uleb128 0x12
 3061 0138 06       		.uleb128 0x6
 3062 0139 00       		.byte	0
 3063 013a 00       		.byte	0
 3064 013b 13       		.uleb128 0x13
 3065 013c 34       		.uleb128 0x34
 3066 013d 00       		.byte	0
 3067 013e 03       		.uleb128 0x3
 3068 013f 0E       		.uleb128 0xe
 3069 0140 3A       		.uleb128 0x3a
 3070 0141 0B       		.uleb128 0xb
 3071 0142 3B       		.uleb128 0x3b
 3072 0143 0B       		.uleb128 0xb
 3073 0144 49       		.uleb128 0x49
 3074 0145 13       		.uleb128 0x13
 3075 0146 3F       		.uleb128 0x3f
 3076 0147 19       		.uleb128 0x19
 3077 0148 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 83


 3078 0149 18       		.uleb128 0x18
 3079 014a 00       		.byte	0
 3080 014b 00       		.byte	0
 3081 014c 14       		.uleb128 0x14
 3082 014d 01       		.uleb128 0x1
 3083 014e 01       		.byte	0x1
 3084 014f 49       		.uleb128 0x49
 3085 0150 13       		.uleb128 0x13
 3086 0151 01       		.uleb128 0x1
 3087 0152 13       		.uleb128 0x13
 3088 0153 00       		.byte	0
 3089 0154 00       		.byte	0
 3090 0155 15       		.uleb128 0x15
 3091 0156 21       		.uleb128 0x21
 3092 0157 00       		.byte	0
 3093 0158 49       		.uleb128 0x49
 3094 0159 13       		.uleb128 0x13
 3095 015a 2F       		.uleb128 0x2f
 3096 015b 0B       		.uleb128 0xb
 3097 015c 00       		.byte	0
 3098 015d 00       		.byte	0
 3099 015e 00       		.byte	0
 3100              		.section	.debug_aranges,"",%progbits
 3101 0000 EC000000 		.4byte	0xec
 3102 0004 0200     		.2byte	0x2
 3103 0006 00000000 		.4byte	.Ldebug_info0
 3104 000a 04       		.byte	0x4
 3105 000b 00       		.byte	0
 3106 000c 0000     		.2byte	0
 3107 000e 0000     		.2byte	0
 3108 0010 00000000 		.4byte	.LFB0
 3109 0014 20000000 		.4byte	.LFE0-.LFB0
 3110 0018 00000000 		.4byte	.LFB1
 3111 001c 6C000000 		.4byte	.LFE1-.LFB1
 3112 0020 00000000 		.4byte	.LFB2
 3113 0024 78000000 		.4byte	.LFE2-.LFB2
 3114 0028 00000000 		.4byte	.LFB3
 3115 002c 6C000000 		.4byte	.LFE3-.LFB3
 3116 0030 00000000 		.4byte	.LFB4
 3117 0034 10000000 		.4byte	.LFE4-.LFB4
 3118 0038 00000000 		.4byte	.LFB5
 3119 003c 14000000 		.4byte	.LFE5-.LFB5
 3120 0040 00000000 		.4byte	.LFB6
 3121 0044 20000000 		.4byte	.LFE6-.LFB6
 3122 0048 00000000 		.4byte	.LFB7
 3123 004c 94000000 		.4byte	.LFE7-.LFB7
 3124 0050 00000000 		.4byte	.LFB8
 3125 0054 40000000 		.4byte	.LFE8-.LFB8
 3126 0058 00000000 		.4byte	.LFB9
 3127 005c B8000000 		.4byte	.LFE9-.LFB9
 3128 0060 00000000 		.4byte	.LFB10
 3129 0064 44000000 		.4byte	.LFE10-.LFB10
 3130 0068 00000000 		.4byte	.LFB11
 3131 006c 94000000 		.4byte	.LFE11-.LFB11
 3132 0070 00000000 		.4byte	.LFB12
 3133 0074 7C000000 		.4byte	.LFE12-.LFB12
 3134 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 84


 3135 007c 14000000 		.4byte	.LFE13-.LFB13
 3136 0080 00000000 		.4byte	.LFB14
 3137 0084 20000000 		.4byte	.LFE14-.LFB14
 3138 0088 00000000 		.4byte	.LFB15
 3139 008c 20000000 		.4byte	.LFE15-.LFB15
 3140 0090 00000000 		.4byte	.LFB16
 3141 0094 20000000 		.4byte	.LFE16-.LFB16
 3142 0098 00000000 		.4byte	.LFB17
 3143 009c 94000000 		.4byte	.LFE17-.LFB17
 3144 00a0 00000000 		.4byte	.LFB18
 3145 00a4 18000000 		.4byte	.LFE18-.LFB18
 3146 00a8 00000000 		.4byte	.LFB19
 3147 00ac B8000000 		.4byte	.LFE19-.LFB19
 3148 00b0 00000000 		.4byte	.LFB20
 3149 00b4 40000000 		.4byte	.LFE20-.LFB20
 3150 00b8 00000000 		.4byte	.LFB21
 3151 00bc 40000000 		.4byte	.LFE21-.LFB21
 3152 00c0 00000000 		.4byte	.LFB22
 3153 00c4 30000000 		.4byte	.LFE22-.LFB22
 3154 00c8 00000000 		.4byte	.LFB23
 3155 00cc 78000000 		.4byte	.LFE23-.LFB23
 3156 00d0 00000000 		.4byte	.LFB24
 3157 00d4 68000000 		.4byte	.LFE24-.LFB24
 3158 00d8 00000000 		.4byte	.LFB25
 3159 00dc 9C000000 		.4byte	.LFE25-.LFB25
 3160 00e0 00000000 		.4byte	.LFB26
 3161 00e4 14000000 		.4byte	.LFE26-.LFB26
 3162 00e8 00000000 		.4byte	0
 3163 00ec 00000000 		.4byte	0
 3164              		.section	.debug_ranges,"",%progbits
 3165              	.Ldebug_ranges0:
 3166 0000 00000000 		.4byte	.LFB0
 3167 0004 20000000 		.4byte	.LFE0
 3168 0008 00000000 		.4byte	.LFB1
 3169 000c 6C000000 		.4byte	.LFE1
 3170 0010 00000000 		.4byte	.LFB2
 3171 0014 78000000 		.4byte	.LFE2
 3172 0018 00000000 		.4byte	.LFB3
 3173 001c 6C000000 		.4byte	.LFE3
 3174 0020 00000000 		.4byte	.LFB4
 3175 0024 10000000 		.4byte	.LFE4
 3176 0028 00000000 		.4byte	.LFB5
 3177 002c 14000000 		.4byte	.LFE5
 3178 0030 00000000 		.4byte	.LFB6
 3179 0034 20000000 		.4byte	.LFE6
 3180 0038 00000000 		.4byte	.LFB7
 3181 003c 94000000 		.4byte	.LFE7
 3182 0040 00000000 		.4byte	.LFB8
 3183 0044 40000000 		.4byte	.LFE8
 3184 0048 00000000 		.4byte	.LFB9
 3185 004c B8000000 		.4byte	.LFE9
 3186 0050 00000000 		.4byte	.LFB10
 3187 0054 44000000 		.4byte	.LFE10
 3188 0058 00000000 		.4byte	.LFB11
 3189 005c 94000000 		.4byte	.LFE11
 3190 0060 00000000 		.4byte	.LFB12
 3191 0064 7C000000 		.4byte	.LFE12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 85


 3192 0068 00000000 		.4byte	.LFB13
 3193 006c 14000000 		.4byte	.LFE13
 3194 0070 00000000 		.4byte	.LFB14
 3195 0074 20000000 		.4byte	.LFE14
 3196 0078 00000000 		.4byte	.LFB15
 3197 007c 20000000 		.4byte	.LFE15
 3198 0080 00000000 		.4byte	.LFB16
 3199 0084 20000000 		.4byte	.LFE16
 3200 0088 00000000 		.4byte	.LFB17
 3201 008c 94000000 		.4byte	.LFE17
 3202 0090 00000000 		.4byte	.LFB18
 3203 0094 18000000 		.4byte	.LFE18
 3204 0098 00000000 		.4byte	.LFB19
 3205 009c B8000000 		.4byte	.LFE19
 3206 00a0 00000000 		.4byte	.LFB20
 3207 00a4 40000000 		.4byte	.LFE20
 3208 00a8 00000000 		.4byte	.LFB21
 3209 00ac 40000000 		.4byte	.LFE21
 3210 00b0 00000000 		.4byte	.LFB22
 3211 00b4 30000000 		.4byte	.LFE22
 3212 00b8 00000000 		.4byte	.LFB23
 3213 00bc 78000000 		.4byte	.LFE23
 3214 00c0 00000000 		.4byte	.LFB24
 3215 00c4 68000000 		.4byte	.LFE24
 3216 00c8 00000000 		.4byte	.LFB25
 3217 00cc 9C000000 		.4byte	.LFE25
 3218 00d0 00000000 		.4byte	.LFB26
 3219 00d4 14000000 		.4byte	.LFE26
 3220 00d8 00000000 		.4byte	0
 3221 00dc 00000000 		.4byte	0
 3222              		.section	.debug_line,"",%progbits
 3223              	.Ldebug_line0:
 3224 0000 41030000 		.section	.debug_str,"MS",%progbits,1
 3224      02004500 
 3224      00000201 
 3224      FB0E0D00 
 3224      01010101 
 3225              	.LASF10:
 3226 0000 75696E74 		.ascii	"uint16\000"
 3226      313600
 3227              	.LASF61:
 3228 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 3228      5F315F43 
 3228      6C656172 
 3228      54784275 
 3228      66666572 
 3229              	.LASF48:
 3230 001c 74784461 		.ascii	"txDataByte\000"
 3230      74614279 
 3230      746500
 3231              	.LASF51:
 3232 0027 55415254 		.ascii	"UART_1_PutChar\000"
 3232      5F315F50 
 3232      75744368 
 3232      617200
 3233              	.LASF55:
 3234 0036 73747269 		.ascii	"string\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 86


 3234      6E6700
 3235              	.LASF62:
 3236 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 3236      5F315F53 
 3236      656E6442 
 3236      7265616B 
 3236      00
 3237              	.LASF31:
 3238 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 3238      5F315F52 
 3238      65616452 
 3238      78446174 
 3238      6100
 3239              	.LASF7:
 3240 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 3240      206C6F6E 
 3240      6720756E 
 3240      7369676E 
 3240      65642069 
 3241              	.LASF76:
 3242 0077 55415254 		.ascii	"UART_1_rxBufferOverflow\000"
 3242      5F315F72 
 3242      78427566 
 3242      6665724F 
 3242      76657266 
 3243              	.LASF60:
 3244 008f 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 3244      5F315F47 
 3244      65745478 
 3244      42756666 
 3244      65725369 
 3245              	.LASF6:
 3246 00a6 6C6F6E67 		.ascii	"long long int\000"
 3246      206C6F6E 
 3246      6720696E 
 3246      7400
 3247              	.LASF0:
 3248 00b4 7369676E 		.ascii	"signed char\000"
 3248      65642063 
 3248      68617200 
 3249              	.LASF65:
 3250 00c0 74785065 		.ascii	"txPeriod\000"
 3250      72696F64 
 3250      00
 3251              	.LASF59:
 3252 00c9 55415254 		.ascii	"UART_1_PutCRLF\000"
 3252      5F315F50 
 3252      75744352 
 3252      4C4600
 3253              	.LASF4:
 3254 00d8 6C6F6E67 		.ascii	"long int\000"
 3254      20696E74 
 3254      00
 3255              	.LASF19:
 3256 00e1 55415254 		.ascii	"UART_1_Start\000"
 3256      5F315F53 
 3256      74617274 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 87


 3256      00
 3257              	.LASF9:
 3258 00ee 75696E74 		.ascii	"uint8\000"
 3258      3800
 3259              	.LASF13:
 3260 00f4 646F7562 		.ascii	"double\000"
 3260      6C6500
 3261              	.LASF42:
 3262 00fb 61646472 		.ascii	"addressMode\000"
 3262      6573734D 
 3262      6F646500 
 3263              	.LASF78:
 3264 0107 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_1.c\000"
 3264      6E657261 
 3264      7465645F 
 3264      536F7572 
 3264      63655C50 
 3265              	.LASF11:
 3266 0129 75696E74 		.ascii	"uint32\000"
 3266      333200
 3267              	.LASF26:
 3268 0130 636F6E74 		.ascii	"control\000"
 3268      726F6C00 
 3269              	.LASF25:
 3270 0138 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 3270      5F315F53 
 3270      65745278 
 3270      496E7465 
 3270      72727570 
 3271              	.LASF53:
 3272 0152 6C6F6354 		.ascii	"locTxBufferRead\000"
 3272      78427566 
 3272      66657252 
 3272      65616400 
 3273              	.LASF73:
 3274 0162 55415254 		.ascii	"UART_1_rxBufferRead\000"
 3274      5F315F72 
 3274      78427566 
 3274      66657252 
 3274      65616400 
 3275              	.LASF63:
 3276 0176 7265744D 		.ascii	"retMode\000"
 3276      6F646500 
 3277              	.LASF8:
 3278 017e 756E7369 		.ascii	"unsigned int\000"
 3278      676E6564 
 3278      20696E74 
 3278      00
 3279              	.LASF50:
 3280 018b 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 3280      5F315F52 
 3280      65616454 
 3280      78537461 
 3280      74757300 
 3281              	.LASF30:
 3282 019f 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3282      78427566 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 88


 3282      66657257 
 3282      72697465 
 3282      00
 3283              	.LASF37:
 3284 01b0 6C6F6345 		.ascii	"locErrorStatus\000"
 3284      72726F72 
 3284      53746174 
 3284      757300
 3285              	.LASF5:
 3286 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 3286      20756E73 
 3286      69676E65 
 3286      6420696E 
 3286      7400
 3287              	.LASF52:
 3288 01d1 6C6F6354 		.ascii	"locTxBufferWrite\000"
 3288      78427566 
 3288      66657257 
 3288      72697465 
 3288      00
 3289              	.LASF39:
 3290 01e2 73697A65 		.ascii	"size\000"
 3290      00
 3291              	.LASF3:
 3292 01e7 73686F72 		.ascii	"short unsigned int\000"
 3292      7420756E 
 3292      7369676E 
 3292      65642069 
 3292      6E7400
 3293              	.LASF21:
 3294 01fa 55415254 		.ascii	"UART_1_Enable\000"
 3294      5F315F45 
 3294      6E61626C 
 3294      6500
 3295              	.LASF56:
 3296 0208 62756649 		.ascii	"bufIndex\000"
 3296      6E646578 
 3296      00
 3297              	.LASF71:
 3298 0211 55415254 		.ascii	"UART_1_errorStatus\000"
 3298      5F315F65 
 3298      72726F72 
 3298      53746174 
 3298      757300
 3299              	.LASF66:
 3300 0224 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 3300      5F315F53 
 3300      65745478 
 3300      41646472 
 3300      6573734D 
 3301              	.LASF27:
 3302 023c 696E7453 		.ascii	"intSrc\000"
 3302      726300
 3303              	.LASF49:
 3304 0243 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 3304      5F315F52 
 3304      65616443 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 89


 3304      6F6E7472 
 3304      6F6C5265 
 3305              	.LASF79:
 3306 025e 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor\\"
 3306      73657273 
 3306      5C676C65 
 3306      6E6E5C4F 
 3306      6E654472 
 3307 028b 5553425F 		.ascii	"USB_UART01.cydsn\000"
 3307      55415254 
 3307      30312E63 
 3307      7964736E 
 3307      00
 3308              	.LASF22:
 3309 029c 55415254 		.ascii	"UART_1_Stop\000"
 3309      5F315F53 
 3309      746F7000 
 3310              	.LASF36:
 3311 02a8 55415254 		.ascii	"UART_1_GetByte\000"
 3311      5F315F47 
 3311      65744279 
 3311      746500
 3312              	.LASF17:
 3313 02b7 72656733 		.ascii	"reg32\000"
 3313      3200
 3314              	.LASF47:
 3315 02bd 55415254 		.ascii	"UART_1_WriteTxData\000"
 3315      5F315F57 
 3315      72697465 
 3315      54784461 
 3315      746100
 3316              	.LASF64:
 3317 02d0 746D7053 		.ascii	"tmpStat\000"
 3317      74617400 
 3318              	.LASF18:
 3319 02d8 73697A65 		.ascii	"sizetype\000"
 3319      74797065 
 3319      00
 3320              	.LASF43:
 3321 02e1 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 3321      5F315F53 
 3321      65745278 
 3321      41646472 
 3321      65737331 
 3322              	.LASF45:
 3323 02f6 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 3323      5F315F53 
 3323      65745278 
 3323      41646472 
 3323      65737332 
 3324              	.LASF44:
 3325 030b 61646472 		.ascii	"address\000"
 3325      65737300 
 3326              	.LASF75:
 3327 0313 55415254 		.ascii	"UART_1_rxBufferLoopDetect\000"
 3327      5F315F72 
 3327      78427566 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 90


 3327      6665724C 
 3327      6F6F7044 
 3328              	.LASF77:
 3329 032d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3329      4320342E 
 3329      392E3320 
 3329      32303135 
 3329      30333033 
 3330 0360 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3330      20726576 
 3330      6973696F 
 3330      6E203232 
 3330      31323230 
 3331 0393 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3331      66756E63 
 3331      74696F6E 
 3331      2D736563 
 3331      74696F6E 
 3332              	.LASF35:
 3333 03bb 72785374 		.ascii	"rxStatus\000"
 3333      61747573 
 3333      00
 3334              	.LASF46:
 3335 03c4 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 3335      5F315F53 
 3335      65745478 
 3335      496E7465 
 3335      72727570 
 3336              	.LASF12:
 3337 03de 666C6F61 		.ascii	"float\000"
 3337      7400
 3338              	.LASF54:
 3339 03e4 55415254 		.ascii	"UART_1_PutString\000"
 3339      5F315F50 
 3339      75745374 
 3339      72696E67 
 3339      00
 3340              	.LASF40:
 3341 03f5 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 3341      5F315F43 
 3341      6C656172 
 3341      52784275 
 3341      66666572 
 3342              	.LASF41:
 3343 040a 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 3343      5F315F53 
 3343      65745278 
 3343      41646472 
 3343      6573734D 
 3344              	.LASF16:
 3345 0422 72656738 		.ascii	"reg8\000"
 3345      00
 3346              	.LASF1:
 3347 0427 756E7369 		.ascii	"unsigned char\000"
 3347      676E6564 
 3347      20636861 
 3347      7200
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 91


 3348              	.LASF2:
 3349 0435 73686F72 		.ascii	"short int\000"
 3349      7420696E 
 3349      7400
 3350              	.LASF69:
 3351 043f 55415254 		.ascii	"UART_1_txBufferRead\000"
 3351      5F315F74 
 3351      78427566 
 3351      66657252 
 3351      65616400 
 3352              	.LASF24:
 3353 0453 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 3353      5F315F57 
 3353      72697465 
 3353      436F6E74 
 3353      726F6C52 
 3354              	.LASF67:
 3355 046f 55415254 		.ascii	"UART_1_initVar\000"
 3355      5F315F69 
 3355      6E697456 
 3355      617200
 3356              	.LASF58:
 3357 047e 62797465 		.ascii	"byteCount\000"
 3357      436F756E 
 3357      7400
 3358              	.LASF38:
 3359 0488 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 3359      5F315F47 
 3359      65745278 
 3359      42756666 
 3359      65725369 
 3360              	.LASF28:
 3361 049f 72784461 		.ascii	"rxData\000"
 3361      746100
 3362              	.LASF72:
 3363 04a6 55415254 		.ascii	"UART_1_rxBuffer\000"
 3363      5F315F72 
 3363      78427566 
 3363      66657200 
 3364              	.LASF15:
 3365 04b6 63686172 		.ascii	"char\000"
 3365      00
 3366              	.LASF70:
 3367 04bb 55415254 		.ascii	"UART_1_txBufferWrite\000"
 3367      5F315F74 
 3367      78427566 
 3367      66657257 
 3367      72697465 
 3368              	.LASF14:
 3369 04d0 63686172 		.ascii	"char8\000"
 3369      3800
 3370              	.LASF29:
 3371 04d6 6C6F6352 		.ascii	"locRxBufferRead\000"
 3371      78427566 
 3371      66657252 
 3371      65616400 
 3372              	.LASF20:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0JPkGC.s 			page 92


 3373 04e6 55415254 		.ascii	"UART_1_Init\000"
 3373      5F315F49 
 3373      6E697400 
 3374              	.LASF23:
 3375 04f2 656E6162 		.ascii	"enableInterrupts\000"
 3375      6C65496E 
 3375      74657272 
 3375      75707473 
 3375      00
 3376              	.LASF33:
 3377 0503 73746174 		.ascii	"status\000"
 3377      757300
 3378              	.LASF68:
 3379 050a 55415254 		.ascii	"UART_1_txBuffer\000"
 3379      5F315F74 
 3379      78427566 
 3379      66657200 
 3380              	.LASF74:
 3381 051a 55415254 		.ascii	"UART_1_rxBufferWrite\000"
 3381      5F315F72 
 3381      78427566 
 3381      66657257 
 3381      72697465 
 3382              	.LASF32:
 3383 052f 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 3383      5F315F52 
 3383      65616452 
 3383      78537461 
 3383      74757300 
 3384              	.LASF34:
 3385 0543 55415254 		.ascii	"UART_1_GetChar\000"
 3385      5F315F47 
 3385      65744368 
 3385      617200
 3386              	.LASF57:
 3387 0552 55415254 		.ascii	"UART_1_PutArray\000"
 3387      5F315F50 
 3387      75744172 
 3387      72617900 
 3388              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
