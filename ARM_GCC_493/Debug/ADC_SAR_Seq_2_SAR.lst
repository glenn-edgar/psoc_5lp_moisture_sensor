ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_Seq_2_SAR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_SAR_Seq_2_SAR_initVar
  19              		.bss
  20              		.type	ADC_SAR_Seq_2_SAR_initVar, %object
  21              		.size	ADC_SAR_Seq_2_SAR_initVar, 1
  22              	ADC_SAR_Seq_2_SAR_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_SAR_Seq_2_SAR_offset,2,2
  25              		.comm	ADC_SAR_Seq_2_SAR_countsPerVolt,2,2
  26              		.comm	ADC_SAR_Seq_2_SAR_countsPer10Volt,4,4
  27              		.comm	ADC_SAR_Seq_2_SAR_shift,2,2
  28              		.section	.text.ADC_SAR_Seq_2_SAR_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_SAR_Seq_2_SAR_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_SAR_Seq_2_SAR_Start, %function
  34              	ADC_SAR_Seq_2_SAR_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_Seq_2_SAR.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * File Name: ADC_SAR_Seq_2_SAR.c
   3:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #include "ADC_SAR_Seq_2_SAR.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #if(ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 2


  22:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #include "ADC_SAR_Seq_2_SAR_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** static void ADC_SAR_Seq_2_SAR_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** uint8 ADC_SAR_Seq_2_SAR_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** volatile int16 ADC_SAR_Seq_2_SAR_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** volatile int16 ADC_SAR_Seq_2_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** volatile int32 ADC_SAR_Seq_2_SAR_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** volatile int16 ADC_SAR_Seq_2_SAR_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The ADC_SAR_Seq_2_SAR_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  to zero before call of ADC_SAR_Seq_2_SAR_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Init() and ADC_SAR_Seq_2_SAR_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     if(ADC_SAR_Seq_2_SAR_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_SAR_Seq_2_SAR_Init
  81:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_SAR_Seq_2_SAR_Enable
  84:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_SAR_Seq_2_SAR_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_SAR_Seq_2_SAR_Start, .-ADC_SAR_Seq_2_SAR_Start
  70              		.section	.text.ADC_SAR_Seq_2_SAR_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_SAR_Seq_2_SAR_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_SAR_Seq_2_SAR_Init, %function
  76              	ADC_SAR_Seq_2_SAR_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_Start().
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 4


  95:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The ADC_SAR_Seq_2_SAR_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         CyIntSetPriority(ADC_SAR_Seq_2_SAR_INTC_NUMBER, ADC_SAR_Seq_2_SAR_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         (void)CyIntSetVector(ADC_SAR_Seq_2_SAR_INTC_NUMBER, &ADC_SAR_Seq_2_SAR_ISR);
 118:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif   /* End ADC_SAR_Seq_2_SAR_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR1_REG |= ADC_SAR_Seq_2_SAR_SAR_IRQ_MASK_EN | ADC_SAR_Seq_2_SAR_SAR_IRQ
  88              		.loc 1 121 0
  89 0004 074A     		ldr	r2, .L6
  90 0006 074B     		ldr	r3, .L6
  91 0008 1B78     		ldrb	r3, [r3]
  92 000a DBB2     		uxtb	r3, r3
  93 000c 43F00603 		orr	r3, r3, #6
  94 0010 DBB2     		uxtb	r3, r3
  95 0012 1370     		strb	r3, [r2]
 122:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 123:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SetResolution(ADC_SAR_Seq_2_SAR_DEFAULT_RESOLUTION);
  96              		.loc 1 124 0
  97 0014 0C20     		movs	r0, #12
  98 0016 FFF7FEFF 		bl	ADC_SAR_Seq_2_SAR_SetResolution
 125:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_offset = 0;
  99              		.loc 1 125 0
 100 001a 034B     		ldr	r3, .L6+4
 101 001c 0022     		movs	r2, #0
 102 001e 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 5


 103              		.loc 1 126 0
 104 0020 80BD     		pop	{r7, pc}
 105              	.L7:
 106 0022 00BF     		.align	2
 107              	.L6:
 108 0024 01590040 		.word	1073764609
 109 0028 00000000 		.word	ADC_SAR_Seq_2_SAR_offset
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	ADC_SAR_Seq_2_SAR_Init, .-ADC_SAR_Seq_2_SAR_Init
 113              		.section	.text.ADC_SAR_Seq_2_SAR_Enable,"ax",%progbits
 114              		.align	2
 115              		.global	ADC_SAR_Seq_2_SAR_Enable
 116              		.thumb
 117              		.thumb_func
 118              		.type	ADC_SAR_Seq_2_SAR_Enable, %function
 119              	ADC_SAR_Seq_2_SAR_Enable:
 120              	.LFB2:
 127:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 121              		.loc 1 144 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 133              		.loc 1 147 0
 134 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 135 000a 0346     		mov	r3, r0
 136 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 6


 150:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_PWRMGR_SAR_REG |= ADC_SAR_Seq_2_SAR_ACT_PWR_SAR_EN;
 137              		.loc 1 150 0
 138 000e 244A     		ldr	r2, .L9
 139 0010 234B     		ldr	r3, .L9
 140 0012 1B78     		ldrb	r3, [r3]
 141 0014 DBB2     		uxtb	r3, r3
 142 0016 43F00103 		orr	r3, r3, #1
 143 001a DBB2     		uxtb	r3, r3
 144 001c 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_STBY_PWRMGR_SAR_REG |= ADC_SAR_Seq_2_SAR_STBY_PWR_SAR_EN;
 145              		.loc 1 153 0
 146 001e 214A     		ldr	r2, .L9+4
 147 0020 204B     		ldr	r3, .L9+4
 148 0022 1B78     		ldrb	r3, [r3]
 149 0024 DBB2     		uxtb	r3, r3
 150 0026 43F00103 		orr	r3, r3, #1
 151 002a DBB2     		uxtb	r3, r3
 152 002c 1370     		strb	r3, [r2]
 154:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_PWRMGR_CLK_REG |= ADC_SAR_Seq_2_SAR_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_STBY_PWRMGR_CLK_REG |= ADC_SAR_Seq_2_SAR_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     tmpReg = ADC_SAR_Seq_2_SAR_SAR_CSR3_REG;
 153              		.loc 1 162 0
 154 002e 1E4B     		ldr	r3, .L9+8
 155 0030 1B78     		ldrb	r3, [r3]
 156 0032 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     tmpReg |= ADC_SAR_Seq_2_SAR_SAR_EN_BUF_VCM_EN;
 157              		.loc 1 163 0
 158 0034 BB79     		ldrb	r3, [r7, #6]
 159 0036 43F00203 		orr	r3, r3, #2
 160 003a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if((ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         tmpReg &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_EN_BUF_VREF_EN;
 161              		.loc 1 167 0
 162 003c BB79     		ldrb	r3, [r7, #6]
 163 003e 23F00103 		bic	r3, r3, #1
 164 0042 BB71     		strb	r3, [r7, #6]
 168:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         tmpReg |= ADC_SAR_Seq_2_SAR_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR3_REG = tmpReg;
 165              		.loc 1 171 0
 166 0044 184A     		ldr	r2, .L9+8
 167 0046 BB79     		ldrb	r3, [r7, #6]
 168 0048 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VNEG_VDDA_DIFF)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 7


 175:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #if(ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR6_REG = ADC_SAR_Seq_2_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR6_REG = ADC_SAR_Seq_2_SAR_VDDA_VREF;           /* S7 */
 169              		.loc 1 178 0
 170 004a 184B     		ldr	r3, .L9+12
 171 004c 8022     		movs	r2, #128
 172 004e 1A70     		strb	r2, [r3]
 179:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #endif /* ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #if(ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR6_REG = ADC_SAR_Seq_2_SAR_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR6_REG = ADC_SAR_Seq_2_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #endif /* ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_2_SAR__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_2_SAR_SAR_DLY_INC;
 173              		.loc 1 192 0
 174 0050 174A     		ldr	r2, .L9+16
 175 0052 174B     		ldr	r3, .L9+16
 176 0054 1B78     		ldrb	r3, [r3]
 177 0056 DBB2     		uxtb	r3, r3
 178 0058 43F04003 		orr	r3, r3, #64
 179 005c DBB2     		uxtb	r3, r3
 180 005e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* ADC_SAR_Seq_2_SAR_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_2_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_SEL_CSEL_DFT_CHAR;
 181              		.loc 1 202 0
 182 0060 134A     		ldr	r2, .L9+16
 183 0062 134B     		ldr	r3, .L9+16
 184 0064 1B78     		ldrb	r3, [r3]
 185 0066 DBB2     		uxtb	r3, r3
 186 0068 23F00303 		bic	r3, r3, #3
 187 006c DBB2     		uxtb	r3, r3
 188 006e 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* ADC_SAR_Seq_2_SAR_HIGH_POWER_PULSE == 0u */
 204:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_Seq_2_SAR_DEFAULT_POWER << ADC_SAR_Seq_
 189              		.loc 1 206 0
 190 0070 104B     		ldr	r3, .L9+20
 191 0072 C822     		movs	r2, #200
 192 0074 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 8


 208:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_Seq_2_SAR_DEFAULT_REFERENCE != ADC_SAR_Seq_2_SAR__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         | ADC_SAR_Seq_2_SAR_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_2_SAR__FREE_RUNNING)      /* If triggere
 213:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         | ADC_SAR_Seq_2_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         | ADC_SAR_Seq_2_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_TR0_REG = ADC_SAR_Seq_2_SAR_SAR_CAP_TRIM_2;
 193              		.loc 1 218 0
 194 0076 104B     		ldr	r3, .L9+24
 195 0078 0222     		movs	r2, #2
 196 007a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CLK_REG |= ADC_SAR_Seq_2_SAR_SAR_MX_CLK_EN;
 197              		.loc 1 221 0
 198 007c 0F4A     		ldr	r2, .L9+28
 199 007e 0F4B     		ldr	r3, .L9+28
 200 0080 1B78     		ldrb	r3, [r3]
 201 0082 DBB2     		uxtb	r3, r3
 202 0084 43F00803 		orr	r3, r3, #8
 203 0088 DBB2     		uxtb	r3, r3
 204 008a 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 205              		.loc 1 223 0
 206 008c 0A20     		movs	r0, #10
 207 008e FFF7FEFF 		bl	CyDelayUs
 224:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         CyIntClearPending(ADC_SAR_Seq_2_SAR_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif   /* End ADC_SAR_Seq_2_SAR_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 230 0
 209 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0094 1846     		mov	r0, r3
 211 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 212              		.loc 1 231 0
 213 009a 0837     		adds	r7, r7, #8
 214              		.cfi_def_cfa_offset 8
 215 009c BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 009e 80BD     		pop	{r7, pc}
 219              	.L10:
 220              		.align	2
 221              	.L9:
 222 00a0 AB430040 		.word	1073759147
 223 00a4 BB430040 		.word	1073759163
 224 00a8 03590040 		.word	1073764611
 225 00ac 06590040 		.word	1073764614
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 9


 226 00b0 05590040 		.word	1073764613
 227 00b4 00590040 		.word	1073764608
 228 00b8 14460040 		.word	1073759764
 229 00bc 275B0040 		.word	1073765159
 230              		.cfi_endproc
 231              	.LFE2:
 232              		.size	ADC_SAR_Seq_2_SAR_Enable, .-ADC_SAR_Seq_2_SAR_Enable
 233              		.section	.text.ADC_SAR_Seq_2_SAR_Stop,"ax",%progbits
 234              		.align	2
 235              		.global	ADC_SAR_Seq_2_SAR_Stop
 236              		.thumb
 237              		.thumb_func
 238              		.type	ADC_SAR_Seq_2_SAR_Stop, %function
 239              	ADC_SAR_Seq_2_SAR_Stop:
 240              	.LFB3:
 232:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 241              		.loc 1 249 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 82B0     		sub	sp, sp, #8
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 250:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 251 0
 254 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 255 000a 0346     		mov	r3, r0
 256 000c FB71     		strb	r3, [r7, #7]
 252:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_SOF_START_CONV;
 257              		.loc 1 254 0
 258 000e 0F4A     		ldr	r2, .L12
 259 0010 0E4B     		ldr	r3, .L12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 10


 260 0012 1B78     		ldrb	r3, [r3]
 261 0014 DBB2     		uxtb	r3, r3
 262 0016 23F00103 		bic	r3, r3, #1
 263 001a DBB2     		uxtb	r3, r3
 264 001c 1370     		strb	r3, [r2]
 255:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_2_SAR_ACT_PWR_SAR_EN;
 265              		.loc 1 256 0
 266 001e 0C4A     		ldr	r2, .L12+4
 267 0020 0B4B     		ldr	r3, .L12+4
 268 0022 1B78     		ldrb	r3, [r3]
 269 0024 DBB2     		uxtb	r3, r3
 270 0026 23F00103 		bic	r3, r3, #1
 271 002a DBB2     		uxtb	r3, r3
 272 002c 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_2_SAR_STBY_PWR_SAR_EN;
 273              		.loc 1 258 0
 274 002e 094A     		ldr	r2, .L12+8
 275 0030 084B     		ldr	r3, .L12+8
 276 0032 1B78     		ldrb	r3, [r3]
 277 0034 DBB2     		uxtb	r3, r3
 278 0036 23F00103 		bic	r3, r3, #1
 279 003a DBB2     		uxtb	r3, r3
 280 003c 1370     		strb	r3, [r2]
 259:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* This is only valid if there is an internal clock */
 261:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_2_SAR_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_2_SAR_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 281              		.loc 1 266 0
 282 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 283 0040 1846     		mov	r0, r3
 284 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 285              		.loc 1 268 0
 286 0046 0837     		adds	r7, r7, #8
 287              		.cfi_def_cfa_offset 8
 288 0048 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 004a 80BD     		pop	{r7, pc}
 292              	.L13:
 293              		.align	2
 294              	.L12:
 295 004c 00590040 		.word	1073764608
 296 0050 AB430040 		.word	1073759147
 297 0054 BB430040 		.word	1073759163
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	ADC_SAR_Seq_2_SAR_Stop, .-ADC_SAR_Seq_2_SAR_Stop
 301              		.section	.text.ADC_SAR_Seq_2_SAR_SetPower,"ax",%progbits
 302              		.align	2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 11


 303              		.global	ADC_SAR_Seq_2_SAR_SetPower
 304              		.thumb
 305              		.thumb_func
 306              		.type	ADC_SAR_Seq_2_SAR_SetPower, %function
 307              	ADC_SAR_Seq_2_SAR_SetPower:
 308              	.LFB4:
 269:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 309              		.loc 1 291 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 85B0     		sub	sp, sp, #20
 318              		.cfi_def_cfa_offset 24
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 0346     		mov	r3, r0
 322 0008 FB71     		strb	r3, [r7, #7]
 292:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     power &= ADC_SAR_Seq_2_SAR_SAR_API_POWER_MASK;
 323              		.loc 1 295 0
 324 000a FB79     		ldrb	r3, [r7, #7]
 325 000c 03F00303 		and	r3, r3, #3
 326 0010 FB71     		strb	r3, [r7, #7]
 296:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     tmpReg = ADC_SAR_Seq_2_SAR_SAR_CSR0_REG & (uint8)~ADC_SAR_Seq_2_SAR_SAR_POWER_MASK;
 327              		.loc 1 298 0
 328 0012 0A4B     		ldr	r3, .L15
 329 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 12


 330 0016 DBB2     		uxtb	r3, r3
 331 0018 03F03F03 		and	r3, r3, #63
 332 001c FB73     		strb	r3, [r7, #15]
 299:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     tmpReg |= (uint8)(power << ADC_SAR_Seq_2_SAR_SAR_POWER_SHIFT);
 333              		.loc 1 299 0
 334 001e FB79     		ldrb	r3, [r7, #7]
 335 0020 9B01     		lsls	r3, r3, #6
 336 0022 DAB2     		uxtb	r2, r3
 337 0024 FB7B     		ldrb	r3, [r7, #15]
 338 0026 1343     		orrs	r3, r3, r2
 339 0028 FB73     		strb	r3, [r7, #15]
 300:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR0_REG = tmpReg;
 340              		.loc 1 300 0
 341 002a 044A     		ldr	r2, .L15
 342 002c FB7B     		ldrb	r3, [r7, #15]
 343 002e 1370     		strb	r3, [r2]
 301:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 344              		.loc 1 301 0
 345 0030 1437     		adds	r7, r7, #20
 346              		.cfi_def_cfa_offset 4
 347 0032 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 0034 5DF8047B 		ldr	r7, [sp], #4
 351              		.cfi_restore 7
 352              		.cfi_def_cfa_offset 0
 353 0038 7047     		bx	lr
 354              	.L16:
 355 003a 00BF     		.align	2
 356              	.L15:
 357 003c 00590040 		.word	1073764608
 358              		.cfi_endproc
 359              	.LFE4:
 360              		.size	ADC_SAR_Seq_2_SAR_SetPower, .-ADC_SAR_Seq_2_SAR_SetPower
 361              		.section	.text.ADC_SAR_Seq_2_SAR_SetResolution,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_SAR_Seq_2_SAR_SetResolution
 364              		.thumb
 365              		.thumb_func
 366              		.type	ADC_SAR_Seq_2_SAR_SetResolution, %function
 367              	ADC_SAR_Seq_2_SAR_SetResolution:
 368              	.LFB5:
 302:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 13


 317:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 318:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 369              		.loc 1 341 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 80B5     		push	{r7, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 84B0     		sub	sp, sp, #16
 378              		.cfi_def_cfa_offset 24
 379 0004 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 381 0006 0346     		mov	r3, r0
 382 0008 FB71     		strb	r3, [r7, #7]
 342:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     switch (resolution)
 383              		.loc 1 345 0
 384 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 000c 0A2B     		cmp	r3, #10
 386 000e 07D0     		beq	.L19
 387 0010 0C2B     		cmp	r3, #12
 388 0012 02D0     		beq	.L20
 389 0014 082B     		cmp	r3, #8
 390 0016 06D0     		beq	.L21
 391 0018 08E0     		b	.L23
 392              	.L20:
 346:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             tmpReg = ADC_SAR_Seq_2_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_2_SAR_SAR_SAMPLE_WIDTH;
 393              		.loc 1 348 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 14


 394 001a C423     		movs	r3, #196
 395 001c FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 396              		.loc 1 349 0
 397 001e 0BE0     		b	.L22
 398              	.L19:
 350:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             tmpReg = ADC_SAR_Seq_2_SAR_SAR_RESOLUTION_10BIT | ADC_SAR_Seq_2_SAR_SAR_SAMPLE_WIDTH;
 399              		.loc 1 351 0
 400 0020 8423     		movs	r3, #132
 401 0022 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 402              		.loc 1 352 0
 403 0024 08E0     		b	.L22
 404              	.L21:
 353:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             tmpReg = ADC_SAR_Seq_2_SAR_SAR_RESOLUTION_8BIT | ADC_SAR_Seq_2_SAR_SAR_SAMPLE_WIDTH;
 405              		.loc 1 354 0
 406 0026 4423     		movs	r3, #68
 407 0028 FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 408              		.loc 1 355 0
 409 002a 05E0     		b	.L22
 410              	.L23:
 356:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             tmpReg = ADC_SAR_Seq_2_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_2_SAR_SAR_SAMPLE_WIDTH;
 411              		.loc 1 357 0
 412 002c C423     		movs	r3, #196
 413 002e FB73     		strb	r3, [r7, #15]
 358:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             CYASSERT(0u != 0u);
 414              		.loc 1 359 0
 415 0030 0020     		movs	r0, #0
 416 0032 FFF7FEFF 		bl	CyHalt
 360:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 417              		.loc 1 360 0
 418 0036 00BF     		nop
 419              	.L22:
 361:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_SAR_CSR2_REG = tmpReg;
 420              		.loc 1 362 0
 421 0038 044A     		ldr	r2, .L24
 422 003a FB7B     		ldrb	r3, [r7, #15]
 423 003c 1370     		strb	r3, [r2]
 363:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_CalcGain(resolution);
 424              		.loc 1 365 0
 425 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 0040 1846     		mov	r0, r3
 427 0042 FFF7FEFF 		bl	ADC_SAR_Seq_2_SAR_CalcGain
 366:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 428              		.loc 1 366 0
 429 0046 1037     		adds	r7, r7, #16
 430              		.cfi_def_cfa_offset 8
 431 0048 BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 15


 433              		@ sp needed
 434 004a 80BD     		pop	{r7, pc}
 435              	.L25:
 436              		.align	2
 437              	.L24:
 438 004c 02590040 		.word	1073764610
 439              		.cfi_endproc
 440              	.LFE5:
 441              		.size	ADC_SAR_Seq_2_SAR_SetResolution, .-ADC_SAR_Seq_2_SAR_SetResolution
 442              		.section	.text.ADC_SAR_Seq_2_SAR_StartConvert,"ax",%progbits
 443              		.align	2
 444              		.global	ADC_SAR_Seq_2_SAR_StartConvert
 445              		.thumb
 446              		.thumb_func
 447              		.type	ADC_SAR_Seq_2_SAR_StartConvert, %function
 448              	ADC_SAR_Seq_2_SAR_StartConvert:
 449              	.LFB6:
 367:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #if(ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_2_SAR__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Function Name: ADC_SAR_Seq_2_SAR_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ********************************************************************************
 375:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  ADC_SAR_Seq_2_SAR_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     void ADC_SAR_Seq_2_SAR_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 450              		.loc 1 402 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 16


 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #if(ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_2_SAR__FREE_RUNNING)  /* If software
 404:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_MX_SOF_UDB;   /* source
 405:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 407:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_2_SAR_SAR_SOF_START_CONV;
 460              		.loc 1 408 0
 461 0004 054A     		ldr	r2, .L27
 462 0006 054B     		ldr	r3, .L27
 463 0008 1B78     		ldrb	r3, [r3]
 464 000a DBB2     		uxtb	r3, r3
 465 000c 43F00103 		orr	r3, r3, #1
 466 0010 DBB2     		uxtb	r3, r3
 467 0012 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 468              		.loc 1 409 0
 469 0014 BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0016 5DF8047B 		ldr	r7, [sp], #4
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 001a 7047     		bx	lr
 476              	.L28:
 477              		.align	2
 478              	.L27:
 479 001c 00590040 		.word	1073764608
 480              		.cfi_endproc
 481              	.LFE6:
 482              		.size	ADC_SAR_Seq_2_SAR_StartConvert, .-ADC_SAR_Seq_2_SAR_StartConvert
 483              		.section	.text.ADC_SAR_Seq_2_SAR_StopConvert,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_SAR_Seq_2_SAR_StopConvert
 486              		.thumb
 487              		.thumb_func
 488              		.type	ADC_SAR_Seq_2_SAR_StopConvert, %function
 489              	ADC_SAR_Seq_2_SAR_StopConvert:
 490              	.LFB7:
 410:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Function Name: ADC_SAR_Seq_2_SAR_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  None.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 17


 423:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 427:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     void ADC_SAR_Seq_2_SAR_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 491              		.loc 1 436 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              		.cfi_def_cfa_offset 4
 498              		.cfi_offset 7, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 437:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_2_SAR_SAR_SOF_START_CONV;
 501              		.loc 1 438 0
 502 0004 054A     		ldr	r2, .L30
 503 0006 054B     		ldr	r3, .L30
 504 0008 1B78     		ldrb	r3, [r3]
 505 000a DBB2     		uxtb	r3, r3
 506 000c 23F00103 		bic	r3, r3, #1
 507 0010 DBB2     		uxtb	r3, r3
 508 0012 1370     		strb	r3, [r2]
 439:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #if(ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_2_SAR__FREE_RUNNING)  /* If software
 441:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             ADC_SAR_Seq_2_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_2_SAR_SAR_MX_SOF_UDB;    /* source: UDB *
 443:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 509              		.loc 1 445 0
 510 0014 BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0016 5DF8047B 		ldr	r7, [sp], #4
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
 516 001a 7047     		bx	lr
 517              	.L31:
 518              		.align	2
 519              	.L30:
 520 001c 00590040 		.word	1073764608
 521              		.cfi_endproc
 522              	.LFE7:
 523              		.size	ADC_SAR_Seq_2_SAR_StopConvert, .-ADC_SAR_Seq_2_SAR_StopConvert
 524              		.section	.text.ADC_SAR_Seq_2_SAR_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 18


 525              		.align	2
 526              		.global	ADC_SAR_Seq_2_SAR_IsEndConversion
 527              		.thumb
 528              		.thumb_func
 529              		.type	ADC_SAR_Seq_2_SAR_IsEndConversion, %function
 530              	ADC_SAR_Seq_2_SAR_IsEndConversion:
 531              	.LFB8:
 446:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_2_SAR__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *   ADC_SAR_Seq_2_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *   ADC_SAR_Seq_2_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** uint8 ADC_SAR_Seq_2_SAR_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 532              		.loc 1 476 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 0346     		mov	r3, r0
 545 0008 FB71     		strb	r3, [r7, #7]
 546              	.L34:
 477:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 19


 481:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         status = ADC_SAR_Seq_2_SAR_SAR_CSR1_REG & ADC_SAR_Seq_2_SAR_SAR_EOF_1;
 547              		.loc 1 481 0 discriminator 2
 548 000a 0C4B     		ldr	r3, .L37
 549 000c 1B78     		ldrb	r3, [r3]
 550 000e DBB2     		uxtb	r3, r3
 551 0010 03F00103 		and	r3, r3, #1
 552 0014 FB73     		strb	r3, [r7, #15]
 482:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     } while ((status != ADC_SAR_Seq_2_SAR_SAR_EOF_1) && (retMode == ADC_SAR_Seq_2_SAR_WAIT_FOR_RESU
 553              		.loc 1 482 0 discriminator 2
 554 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 555 0018 012B     		cmp	r3, #1
 556 001a 02D0     		beq	.L33
 557              		.loc 1 482 0 is_stmt 0 discriminator 1
 558 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 001e 002B     		cmp	r3, #0
 560 0020 F3D0     		beq	.L34
 561              	.L33:
 483:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     if(status == ADC_SAR_Seq_2_SAR_SAR_EOF_1)
 562              		.loc 1 484 0 is_stmt 1
 563 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 564 0024 012B     		cmp	r3, #1
 565 0026 04D1     		bne	.L35
 485:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         CyDelayUs(1u);
 566              		.loc 1 487 0
 567 0028 0120     		movs	r0, #1
 568 002a FFF7FEFF 		bl	CyDelayUs
 488:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         CY_GET_REG8(ADC_SAR_Seq_2_SAR_SAR_CSR1_PTR);
 569              		.loc 1 489 0
 570 002e 034B     		ldr	r3, .L37
 571 0030 1B78     		ldrb	r3, [r3]
 572              	.L35:
 490:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return(status);
 573              		.loc 1 492 0
 574 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 575              		.loc 1 493 0
 576 0034 1846     		mov	r0, r3
 577 0036 1037     		adds	r7, r7, #16
 578              		.cfi_def_cfa_offset 8
 579 0038 BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 003a 80BD     		pop	{r7, pc}
 583              	.L38:
 584              		.align	2
 585              	.L37:
 586 003c 01590040 		.word	1073764609
 587              		.cfi_endproc
 588              	.LFE8:
 589              		.size	ADC_SAR_Seq_2_SAR_IsEndConversion, .-ADC_SAR_Seq_2_SAR_IsEndConversion
 590              		.section	.text.ADC_SAR_Seq_2_SAR_GetResult8,"ax",%progbits
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 20


 591              		.align	2
 592              		.global	ADC_SAR_Seq_2_SAR_GetResult8
 593              		.thumb
 594              		.thumb_func
 595              		.type	ADC_SAR_Seq_2_SAR_GetResult8, %function
 596              	ADC_SAR_Seq_2_SAR_GetResult8:
 597              	.LFB9:
 494:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** int8 ADC_SAR_Seq_2_SAR_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 598              		.loc 1 521 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603 0000 80B4     		push	{r7}
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 7, -4
 606 0002 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return( (int8)ADC_SAR_Seq_2_SAR_SAR_WRK0_REG - (int8)ADC_SAR_Seq_2_SAR_shift);
 608              		.loc 1 522 0
 609 0004 074B     		ldr	r3, .L41
 610 0006 1B78     		ldrb	r3, [r3]
 611 0008 DAB2     		uxtb	r2, r3
 612 000a 074B     		ldr	r3, .L41+4
 613 000c 1B88     		ldrh	r3, [r3]	@ movhi
 614 000e 9BB2     		uxth	r3, r3
 615 0010 DBB2     		uxtb	r3, r3
 616 0012 D31A     		subs	r3, r2, r3
 617 0014 DBB2     		uxtb	r3, r3
 618 0016 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 21


 619 0018 5BB2     		sxtb	r3, r3
 523:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 620              		.loc 1 523 0
 621 001a 1846     		mov	r0, r3
 622 001c BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 001e 5DF8047B 		ldr	r7, [sp], #4
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 0022 7047     		bx	lr
 629              	.L42:
 630              		.align	2
 631              	.L41:
 632 0024 A05B0040 		.word	1073765280
 633 0028 00000000 		.word	ADC_SAR_Seq_2_SAR_shift
 634              		.cfi_endproc
 635              	.LFE9:
 636              		.size	ADC_SAR_Seq_2_SAR_GetResult8, .-ADC_SAR_Seq_2_SAR_GetResult8
 637              		.section	.text.ADC_SAR_Seq_2_SAR_GetResult16,"ax",%progbits
 638              		.align	2
 639              		.global	ADC_SAR_Seq_2_SAR_GetResult16
 640              		.thumb
 641              		.thumb_func
 642              		.type	ADC_SAR_Seq_2_SAR_GetResult16, %function
 643              	ADC_SAR_Seq_2_SAR_GetResult16:
 644              	.LFB10:
 524:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 546:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** int16 ADC_SAR_Seq_2_SAR_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 645              		.loc 1 551 0
 646              		.cfi_startproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 22


 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 83B0     		sub	sp, sp, #12
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 552:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     res = CY_GET_REG16(ADC_SAR_Seq_2_SAR_SAR_WRK_PTR);
 657              		.loc 1 554 0
 658 0006 094B     		ldr	r3, .L45
 659 0008 1B88     		ldrh	r3, [r3]	@ movhi
 660 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return( (int16)res - ADC_SAR_Seq_2_SAR_shift );
 661              		.loc 1 556 0
 662 000c 084B     		ldr	r3, .L45+4
 663 000e 1B88     		ldrh	r3, [r3]	@ movhi
 664 0010 9BB2     		uxth	r3, r3
 665 0012 9BB2     		uxth	r3, r3
 666 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 667 0016 D31A     		subs	r3, r2, r3
 668 0018 9BB2     		uxth	r3, r3
 669 001a 9BB2     		uxth	r3, r3
 670 001c 1BB2     		sxth	r3, r3
 557:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 671              		.loc 1 557 0
 672 001e 1846     		mov	r0, r3
 673 0020 0C37     		adds	r7, r7, #12
 674              		.cfi_def_cfa_offset 4
 675 0022 BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 0024 5DF8047B 		ldr	r7, [sp], #4
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0028 7047     		bx	lr
 682              	.L46:
 683 002a 00BF     		.align	2
 684              	.L45:
 685 002c A05B0040 		.word	1073765280
 686 0030 00000000 		.word	ADC_SAR_Seq_2_SAR_shift
 687              		.cfi_endproc
 688              	.LFE10:
 689              		.size	ADC_SAR_Seq_2_SAR_GetResult16, .-ADC_SAR_Seq_2_SAR_GetResult16
 690              		.section	.text.ADC_SAR_Seq_2_SAR_SetOffset,"ax",%progbits
 691              		.align	2
 692              		.global	ADC_SAR_Seq_2_SAR_SetOffset
 693              		.thumb
 694              		.thumb_func
 695              		.type	ADC_SAR_Seq_2_SAR_SetOffset, %function
 696              	ADC_SAR_Seq_2_SAR_SetOffset:
 697              	.LFB11:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 23


 558:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_SetOffset
 562:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Sets the ADC offset, which is used by ADC_SAR_Seq_2_SAR_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_CountsTo_mVolts(), and ADC_SAR_Seq_2_SAR_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  The ADC_SAR_Seq_2_SAR_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Affects the ADC_SAR_Seq_2_SAR_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_CountsTo_mVolts, ADC_SAR_Seq_2_SAR_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 584:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 698              		.loc 1 586 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 0346     		mov	r3, r0
 711 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_offset = offset;
 712              		.loc 1 587 0
 713 000a 044A     		ldr	r2, .L48
 714 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 715 000e 1380     		strh	r3, [r2]	@ movhi
 588:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 716              		.loc 1 588 0
 717 0010 0C37     		adds	r7, r7, #12
 718              		.cfi_def_cfa_offset 4
 719 0012 BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 0014 5DF8047B 		ldr	r7, [sp], #4
 723              		.cfi_restore 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 24


 724              		.cfi_def_cfa_offset 0
 725 0018 7047     		bx	lr
 726              	.L49:
 727 001a 00BF     		.align	2
 728              	.L48:
 729 001c 00000000 		.word	ADC_SAR_Seq_2_SAR_offset
 730              		.cfi_endproc
 731              	.LFE11:
 732              		.size	ADC_SAR_Seq_2_SAR_SetOffset, .-ADC_SAR_Seq_2_SAR_SetOffset
 733              		.section	.text.ADC_SAR_Seq_2_SAR_CalcGain,"ax",%progbits
 734              		.align	2
 735              		.thumb
 736              		.thumb_func
 737              		.type	ADC_SAR_Seq_2_SAR_CalcGain, %function
 738              	ADC_SAR_Seq_2_SAR_CalcGain:
 739              	.LFB12:
 589:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 603:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** static void ADC_SAR_Seq_2_SAR_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 740              		.loc 1 612 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 16
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744 0000 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 84B0     		sub	sp, sp, #16
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 0346     		mov	r3, r0
 753 0008 FB71     		strb	r3, [r7, #7]
 613:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if(!((ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****          (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 25


 616:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****          (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 620:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     switch (resolution)
 754              		.loc 1 620 0
 755 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 756 000c 0A2B     		cmp	r3, #10
 757 000e 0BD0     		beq	.L52
 758 0010 0C2B     		cmp	r3, #12
 759 0012 02D0     		beq	.L53
 760 0014 082B     		cmp	r3, #8
 761 0016 0ED0     		beq	.L54
 762 0018 13E0     		b	.L56
 763              	.L53:
 621:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             counts = (int32)ADC_SAR_Seq_2_SAR_SAR_WRK_MAX_12BIT;
 764              		.loc 1 623 0
 765 001a 4FF48053 		mov	r3, #4096
 766 001e FB60     		str	r3, [r7, #12]
 624:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #if(!((ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                 diff_zero = ADC_SAR_Seq_2_SAR_SAR_DIFF_SHIFT;
 767              		.loc 1 627 0
 768 0020 4FF40063 		mov	r3, #2048
 769 0024 7B81     		strh	r3, [r7, #10]	@ movhi
 628:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 770              		.loc 1 629 0
 771 0026 14E0     		b	.L55
 772              	.L52:
 630:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             counts = (int32)ADC_SAR_Seq_2_SAR_SAR_WRK_MAX_10BIT;
 773              		.loc 1 631 0
 774 0028 4FF48063 		mov	r3, #1024
 775 002c FB60     		str	r3, [r7, #12]
 632:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #if(!((ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                 diff_zero = ADC_SAR_Seq_2_SAR_SAR_DIFF_SHIFT >> 2u;
 776              		.loc 1 635 0
 777 002e 4FF40073 		mov	r3, #512
 778 0032 7B81     		strh	r3, [r7, #10]	@ movhi
 636:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 779              		.loc 1 637 0
 780 0034 0DE0     		b	.L55
 781              	.L54:
 638:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         case (uint8)ADC_SAR_Seq_2_SAR__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             counts = (int32)ADC_SAR_Seq_2_SAR_SAR_WRK_MAX_8BIT;
 782              		.loc 1 639 0
 783 0036 4FF48073 		mov	r3, #256
 784 003a FB60     		str	r3, [r7, #12]
 640:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #if(!((ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 26


 642:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                 diff_zero = ADC_SAR_Seq_2_SAR_SAR_DIFF_SHIFT >> 4u;
 785              		.loc 1 643 0
 786 003c 8023     		movs	r3, #128
 787 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 644:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 788              		.loc 1 645 0
 789 0040 07E0     		b	.L55
 790              	.L56:
 646:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             counts = 0;
 791              		.loc 1 647 0
 792 0042 0023     		movs	r3, #0
 793 0044 FB60     		str	r3, [r7, #12]
 648:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #if(!((ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                  (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                 diff_zero = 0u;
 794              		.loc 1 651 0
 795 0046 0023     		movs	r3, #0
 796 0048 7B81     		strh	r3, [r7, #10]	@ movhi
 652:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             CYASSERT(0u != 0u);
 797              		.loc 1 653 0
 798 004a 0020     		movs	r0, #0
 799 004c FFF7FEFF 		bl	CyHalt
 654:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****             break;
 800              		.loc 1 654 0
 801 0050 00BF     		nop
 802              	.L55:
 655:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_countsPerVolt = 0; /* Clear obsolete variable */
 803              		.loc 1 656 0
 804 0052 0C4B     		ldr	r3, .L57
 805 0054 0022     		movs	r2, #0
 806 0056 1A80     		strh	r2, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_countsPer10Volt = (((counts * ADC_SAR_Seq_2_SAR_10MV_COUNTS) +
 807              		.loc 1 658 0
 808 0058 FB68     		ldr	r3, [r7, #12]
 809 005a 42F21072 		movw	r2, #10000
 810 005e 02FB03F3 		mul	r3, r2, r3
 811 0062 03F59C53 		add	r3, r3, #4992
 812 0066 0833     		adds	r3, r3, #8
 659:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                         ADC_SAR_Seq_2_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_Seq_2_SAR_DEFAULT_REF_
 813              		.loc 1 659 0
 814 0068 074A     		ldr	r2, .L57+4
 815 006a 82FB0312 		smull	r1, r2, r2, r3
 816 006e 1213     		asrs	r2, r2, #12
 817 0070 DB17     		asrs	r3, r3, #31
 818 0072 D31A     		subs	r3, r2, r3
 658:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                         ADC_SAR_Seq_2_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_Seq_2_SAR_DEFAULT_REF_
 819              		.loc 1 658 0
 820 0074 054A     		ldr	r2, .L57+8
 821 0076 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 27


 661:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #if( (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****          (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****          (ADC_SAR_Seq_2_SAR_DEFAULT_RANGE == ADC_SAR_Seq_2_SAR__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_shift = 0;
 665:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         ADC_SAR_Seq_2_SAR_shift = diff_zero;
 822              		.loc 1 666 0
 823 0078 7A89     		ldrh	r2, [r7, #10]
 824 007a 054B     		ldr	r3, .L57+12
 825 007c 1A80     		strh	r2, [r3]	@ movhi
 667:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     #endif /* End ADC_SAR_Seq_2_SAR_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 826              		.loc 1 668 0
 827 007e 1037     		adds	r7, r7, #16
 828              		.cfi_def_cfa_offset 8
 829 0080 BD46     		mov	sp, r7
 830              		.cfi_def_cfa_register 13
 831              		@ sp needed
 832 0082 80BD     		pop	{r7, pc}
 833              	.L58:
 834              		.align	2
 835              	.L57:
 836 0084 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPerVolt
 837 0088 AD8BDB68 		.word	1759218605
 838 008c 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 839 0090 00000000 		.word	ADC_SAR_Seq_2_SAR_shift
 840              		.cfi_endproc
 841              	.LFE12:
 842              		.size	ADC_SAR_Seq_2_SAR_CalcGain, .-ADC_SAR_Seq_2_SAR_CalcGain
 843              		.section	.text.ADC_SAR_Seq_2_SAR_SetGain,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SAR_Seq_2_SAR_SetGain
 846              		.thumb
 847              		.thumb_func
 848              		.type	ADC_SAR_Seq_2_SAR_SetGain, %function
 849              	ADC_SAR_Seq_2_SAR_SetGain:
 850              	.LFB13:
 669:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt variable modified. This variable is used
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 28


 689:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 851              		.loc 1 693 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0000 80B4     		push	{r7}
 857              		.cfi_def_cfa_offset 4
 858              		.cfi_offset 7, -4
 859 0002 83B0     		sub	sp, sp, #12
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 863 0006 0346     		mov	r3, r0
 864 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_countsPer10Volt = (int32)adcGain * 10;
 865              		.loc 1 694 0
 866 000a B7F90620 		ldrsh	r2, [r7, #6]
 867 000e 1346     		mov	r3, r2
 868 0010 9B00     		lsls	r3, r3, #2
 869 0012 1344     		add	r3, r3, r2
 870 0014 5B00     		lsls	r3, r3, #1
 871 0016 1A46     		mov	r2, r3
 872 0018 034B     		ldr	r3, .L60
 873 001a 1A60     		str	r2, [r3]
 695:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 874              		.loc 1 695 0
 875 001c 0C37     		adds	r7, r7, #12
 876              		.cfi_def_cfa_offset 4
 877 001e BD46     		mov	sp, r7
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 0020 5DF8047B 		ldr	r7, [sp], #4
 881              		.cfi_restore 7
 882              		.cfi_def_cfa_offset 0
 883 0024 7047     		bx	lr
 884              	.L61:
 885 0026 00BF     		.align	2
 886              	.L60:
 887 0028 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 888              		.cfi_endproc
 889              	.LFE13:
 890              		.size	ADC_SAR_Seq_2_SAR_SetGain, .-ADC_SAR_Seq_2_SAR_SetGain
 891              		.section	.text.ADC_SAR_Seq_2_SAR_SetScaledGain,"ax",%progbits
 892              		.align	2
 893              		.global	ADC_SAR_Seq_2_SAR_SetScaledGain
 894              		.thumb
 895              		.thumb_func
 896              		.type	ADC_SAR_Seq_2_SAR_SetScaledGain, %function
 897              	ADC_SAR_Seq_2_SAR_SetScaledGain:
 898              	.LFB14:
 696:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 29


 698:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 714:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** void ADC_SAR_Seq_2_SAR_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 899              		.loc 1 720 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 8
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903              		@ link register save eliminated.
 904 0000 80B4     		push	{r7}
 905              		.cfi_def_cfa_offset 4
 906              		.cfi_offset 7, -4
 907 0002 83B0     		sub	sp, sp, #12
 908              		.cfi_def_cfa_offset 16
 909 0004 00AF     		add	r7, sp, #0
 910              		.cfi_def_cfa_register 7
 911 0006 7860     		str	r0, [r7, #4]
 721:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     ADC_SAR_Seq_2_SAR_countsPer10Volt = adcGain;
 912              		.loc 1 721 0
 913 0008 034A     		ldr	r2, .L63
 914 000a 7B68     		ldr	r3, [r7, #4]
 915 000c 1360     		str	r3, [r2]
 722:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 916              		.loc 1 722 0
 917 000e 0C37     		adds	r7, r7, #12
 918              		.cfi_def_cfa_offset 4
 919 0010 BD46     		mov	sp, r7
 920              		.cfi_def_cfa_register 13
 921              		@ sp needed
 922 0012 5DF8047B 		ldr	r7, [sp], #4
 923              		.cfi_restore 7
 924              		.cfi_def_cfa_offset 0
 925 0016 7047     		bx	lr
 926              	.L64:
 927              		.align	2
 928              	.L63:
 929 0018 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 930              		.cfi_endproc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 30


 931              	.LFE14:
 932              		.size	ADC_SAR_Seq_2_SAR_SetScaledGain, .-ADC_SAR_Seq_2_SAR_SetScaledGain
 933              		.section	.text.ADC_SAR_Seq_2_SAR_CountsTo_mVolts,"ax",%progbits
 934              		.align	2
 935              		.global	ADC_SAR_Seq_2_SAR_CountsTo_mVolts
 936              		.thumb
 937              		.thumb_func
 938              		.type	ADC_SAR_Seq_2_SAR_CountsTo_mVolts, %function
 939              	ADC_SAR_Seq_2_SAR_CountsTo_mVolts:
 940              	.LFB15:
 723:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 729:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** int16 ADC_SAR_Seq_2_SAR_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 941              		.loc 1 744 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 16
 944              		@ frame_needed = 1, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 946 0000 80B4     		push	{r7}
 947              		.cfi_def_cfa_offset 4
 948              		.cfi_offset 7, -4
 949 0002 85B0     		sub	sp, sp, #20
 950              		.cfi_def_cfa_offset 24
 951 0004 00AF     		add	r7, sp, #0
 952              		.cfi_def_cfa_register 7
 953 0006 0346     		mov	r3, r0
 954 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     if(ADC_SAR_Seq_2_SAR_countsPerVolt != 0)
 955              		.loc 1 748 0
 956 000a 1D4B     		ldr	r3, .L71
 957 000c 1B88     		ldrh	r3, [r3]	@ movhi
 958 000e 9BB2     		uxth	r3, r3
 959 0010 002B     		cmp	r3, #0
 960 0012 09D0     		beq	.L66
 749:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {   /* Support obsolete method */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 31


 750:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_2_SAR_countsPerVolt * 10;
 961              		.loc 1 750 0
 962 0014 1A4B     		ldr	r3, .L71
 963 0016 1B88     		ldrh	r3, [r3]	@ movhi
 964 0018 9BB2     		uxth	r3, r3
 965 001a 1AB2     		sxth	r2, r3
 966 001c 1346     		mov	r3, r2
 967 001e 9B00     		lsls	r3, r3, #2
 968 0020 1344     		add	r3, r3, r2
 969 0022 5B00     		lsls	r3, r3, #1
 970 0024 FB60     		str	r3, [r7, #12]
 971 0026 02E0     		b	.L67
 972              	.L66:
 751:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 754:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_2_SAR_countsPer10Volt;
 973              		.loc 1 754 0
 974 0028 164B     		ldr	r3, .L71+4
 975 002a 1B68     		ldr	r3, [r3]
 976 002c FB60     		str	r3, [r7, #12]
 977              	.L67:
 755:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     adcCounts -= ADC_SAR_Seq_2_SAR_offset;
 978              		.loc 1 758 0
 979 002e 164B     		ldr	r3, .L71+8
 980 0030 1B88     		ldrh	r3, [r3]	@ movhi
 981 0032 9BB2     		uxth	r3, r3
 982 0034 FA88     		ldrh	r2, [r7, #6]
 983 0036 9BB2     		uxth	r3, r3
 984 0038 D31A     		subs	r3, r2, r3
 985 003a 9BB2     		uxth	r3, r3
 986 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_Seq_2_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 987              		.loc 1 760 0
 988 003e B7F90630 		ldrsh	r3, [r7, #6]
 989 0042 42F21072 		movw	r2, #10000
 990 0046 02FB03F2 		mul	r2, r2, r3
 761:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 991              		.loc 1 761 0
 992 004a B7F90630 		ldrsh	r3, [r7, #6]
 993 004e 002B     		cmp	r3, #0
 994 0050 04DD     		ble	.L68
 995              		.loc 1 761 0 is_stmt 0 discriminator 1
 996 0052 FB68     		ldr	r3, [r7, #12]
 997 0054 D90F     		lsrs	r1, r3, #31
 998 0056 0B44     		add	r3, r3, r1
 999 0058 5B10     		asrs	r3, r3, #1
 1000 005a 04E0     		b	.L69
 1001              	.L68:
 1002              		.loc 1 761 0 discriminator 2
 1003 005c FB68     		ldr	r3, [r7, #12]
 1004 005e D90F     		lsrs	r1, r3, #31
 1005 0060 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 32


 1006 0062 5B10     		asrs	r3, r3, #1
 1007 0064 5B42     		negs	r3, r3
 1008              	.L69:
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1009              		.loc 1 760 0 is_stmt 1
 1010 0066 1A44     		add	r2, r2, r3
 1011              		.loc 1 761 0
 1012 0068 FB68     		ldr	r3, [r7, #12]
 1013 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1014              		.loc 1 760 0
 1015 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return( mVolts );
 1016              		.loc 1 763 0
 1017 0070 7B89     		ldrh	r3, [r7, #10]
 1018 0072 1BB2     		sxth	r3, r3
 764:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 1019              		.loc 1 764 0
 1020 0074 1846     		mov	r0, r3
 1021 0076 1437     		adds	r7, r7, #20
 1022              		.cfi_def_cfa_offset 4
 1023 0078 BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 007a 5DF8047B 		ldr	r7, [sp], #4
 1027              		.cfi_restore 7
 1028              		.cfi_def_cfa_offset 0
 1029 007e 7047     		bx	lr
 1030              	.L72:
 1031              		.align	2
 1032              	.L71:
 1033 0080 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPerVolt
 1034 0084 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 1035 0088 00000000 		.word	ADC_SAR_Seq_2_SAR_offset
 1036              		.cfi_endproc
 1037              	.LFE15:
 1038              		.size	ADC_SAR_Seq_2_SAR_CountsTo_mVolts, .-ADC_SAR_Seq_2_SAR_CountsTo_mVolts
 1039              		.global	__aeabi_ldivmod
 1040              		.section	.text.ADC_SAR_Seq_2_SAR_CountsTo_uVolts,"ax",%progbits
 1041              		.align	2
 1042              		.global	ADC_SAR_Seq_2_SAR_CountsTo_uVolts
 1043              		.thumb
 1044              		.thumb_func
 1045              		.type	ADC_SAR_Seq_2_SAR_CountsTo_uVolts, %function
 1046              	ADC_SAR_Seq_2_SAR_CountsTo_uVolts:
 1047              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 33


 775:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 784:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** int32 ADC_SAR_Seq_2_SAR_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 1048              		.loc 1 786 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 24
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 B0B5     		push	{r4, r5, r7, lr}
 1053              		.cfi_def_cfa_offset 16
 1054              		.cfi_offset 4, -16
 1055              		.cfi_offset 5, -12
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 86B0     		sub	sp, sp, #24
 1059              		.cfi_def_cfa_offset 40
 1060 0004 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
 1062 0006 0346     		mov	r3, r0
 1063 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     if(ADC_SAR_Seq_2_SAR_countsPerVolt != 0)
 1064              		.loc 1 791 0
 1065 000a 1E4B     		ldr	r3, .L77
 1066 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1067 000e 9BB2     		uxth	r3, r3
 1068 0010 002B     		cmp	r3, #0
 1069 0012 09D0     		beq	.L74
 792:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_2_SAR_countsPerVolt * 10;
 1070              		.loc 1 793 0
 1071 0014 1B4B     		ldr	r3, .L77
 1072 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1073 0018 9BB2     		uxth	r3, r3
 1074 001a 1AB2     		sxth	r2, r3
 1075 001c 1346     		mov	r3, r2
 1076 001e 9B00     		lsls	r3, r3, #2
 1077 0020 1344     		add	r3, r3, r2
 1078 0022 5B00     		lsls	r3, r3, #1
 1079 0024 7B61     		str	r3, [r7, #20]
 1080 0026 02E0     		b	.L75
 1081              	.L74:
 794:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_2_SAR_countsPer10Volt;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 34


 1082              		.loc 1 797 0
 1083 0028 174B     		ldr	r3, .L77+4
 1084 002a 1B68     		ldr	r3, [r3]
 1085 002c 7B61     		str	r3, [r7, #20]
 1086              	.L75:
 798:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     adcCounts -= ADC_SAR_Seq_2_SAR_offset;
 1087              		.loc 1 801 0
 1088 002e 174B     		ldr	r3, .L77+8
 1089 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1090 0032 9BB2     		uxth	r3, r3
 1091 0034 FA88     		ldrh	r2, [r7, #6]
 1092 0036 9BB2     		uxth	r3, r3
 1093 0038 D31A     		subs	r3, r2, r3
 1094 003a 9BB2     		uxth	r3, r3
 1095 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_Seq_2_SAR_10UV_COUNTS ) / countsPer10Volt);
 1096              		.loc 1 805 0
 1097 003e B7F90620 		ldrsh	r2, [r7, #6]
 1098 0042 4FEAE273 		asr	r3, r2, #31
 1099 0046 1249     		ldr	r1, .L77+12
 1100 0048 01FB03F0 		mul	r0, r1, r3
 1101 004c 0021     		movs	r1, #0
 1102 004e 01FB02F1 		mul	r1, r1, r2
 1103 0052 0144     		add	r1, r1, r0
 1104 0054 0E48     		ldr	r0, .L77+12
 1105 0056 A2FB0023 		umull	r2, r3, r2, r0
 1106 005a 1944     		add	r1, r1, r3
 1107 005c 0B46     		mov	r3, r1
 1108 005e 7969     		ldr	r1, [r7, #20]
 1109 0060 0C46     		mov	r4, r1
 1110 0062 4FEAE475 		asr	r5, r4, #31
 1111 0066 1046     		mov	r0, r2
 1112 0068 1946     		mov	r1, r3
 1113 006a 2246     		mov	r2, r4
 1114 006c 2B46     		mov	r3, r5
 1115 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1116 0072 0246     		mov	r2, r0
 1117 0074 0B46     		mov	r3, r1
 1118 0076 C7E90223 		strd	r2, [r7, #8]
 806:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return( uVolts );
 1119              		.loc 1 807 0
 1120 007a BB68     		ldr	r3, [r7, #8]
 808:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 1121              		.loc 1 808 0
 1122 007c 1846     		mov	r0, r3
 1123 007e 1837     		adds	r7, r7, #24
 1124              		.cfi_def_cfa_offset 16
 1125 0080 BD46     		mov	sp, r7
 1126              		.cfi_def_cfa_register 13
 1127              		@ sp needed
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 35


 1128 0082 B0BD     		pop	{r4, r5, r7, pc}
 1129              	.L78:
 1130              		.align	2
 1131              	.L77:
 1132 0084 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPerVolt
 1133 0088 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 1134 008c 00000000 		.word	ADC_SAR_Seq_2_SAR_offset
 1135 0090 80969800 		.word	10000000
 1136              		.cfi_endproc
 1137              	.LFE16:
 1138              		.size	ADC_SAR_Seq_2_SAR_CountsTo_uVolts, .-ADC_SAR_Seq_2_SAR_CountsTo_uVolts
 1139              		.global	__aeabi_i2f
 1140              		.global	__aeabi_fmul
 1141              		.global	__aeabi_fdiv
 1142              		.section	.text.ADC_SAR_Seq_2_SAR_CountsTo_Volts,"ax",%progbits
 1143              		.align	2
 1144              		.global	ADC_SAR_Seq_2_SAR_CountsTo_Volts
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	ADC_SAR_Seq_2_SAR_CountsTo_Volts, %function
 1148              	ADC_SAR_Seq_2_SAR_CountsTo_Volts:
 1149              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Function Name: ADC_SAR_Seq_2_SAR_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *  ADC_SAR_Seq_2_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** float32 ADC_SAR_Seq_2_SAR_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** {
 1150              		.loc 1 830 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 16
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154 0000 90B5     		push	{r4, r7, lr}
 1155              		.cfi_def_cfa_offset 12
 1156              		.cfi_offset 4, -12
 1157              		.cfi_offset 7, -8
 1158              		.cfi_offset 14, -4
 1159 0002 85B0     		sub	sp, sp, #20
 1160              		.cfi_def_cfa_offset 32
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 36


 1163 0006 0346     		mov	r3, r0
 1164 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     if(ADC_SAR_Seq_2_SAR_countsPerVolt != 0)
 1165              		.loc 1 834 0
 1166 000a 1A4B     		ldr	r3, .L83
 1167 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1168 000e 9BB2     		uxth	r3, r3
 1169 0010 002B     		cmp	r3, #0
 1170 0012 09D0     		beq	.L80
 835:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_2_SAR_countsPerVolt * 10;
 1171              		.loc 1 836 0
 1172 0014 174B     		ldr	r3, .L83
 1173 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1174 0018 9BB2     		uxth	r3, r3
 1175 001a 1AB2     		sxth	r2, r3
 1176 001c 1346     		mov	r3, r2
 1177 001e 9B00     		lsls	r3, r3, #2
 1178 0020 1344     		add	r3, r3, r2
 1179 0022 5B00     		lsls	r3, r3, #1
 1180 0024 FB60     		str	r3, [r7, #12]
 1181 0026 02E0     		b	.L81
 1182              	.L80:
 837:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_2_SAR_countsPer10Volt;
 1183              		.loc 1 840 0
 1184 0028 134B     		ldr	r3, .L83+4
 1185 002a 1B68     		ldr	r3, [r3]
 1186 002c FB60     		str	r3, [r7, #12]
 1187              	.L81:
 841:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     adcCounts -= ADC_SAR_Seq_2_SAR_offset;
 1188              		.loc 1 844 0
 1189 002e 134B     		ldr	r3, .L83+8
 1190 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1191 0032 9BB2     		uxth	r3, r3
 1192 0034 FA88     		ldrh	r2, [r7, #6]
 1193 0036 9BB2     		uxth	r3, r3
 1194 0038 D31A     		subs	r3, r2, r3
 1195 003a 9BB2     		uxth	r3, r3
 1196 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     volts = ((float32)adcCounts * ADC_SAR_Seq_2_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1197              		.loc 1 846 0
 1198 003e B7F90630 		ldrsh	r3, [r7, #6]
 1199 0042 1846     		mov	r0, r3
 1200 0044 FFF7FEFF 		bl	__aeabi_i2f
 1201 0048 0346     		mov	r3, r0
 1202 004a 1846     		mov	r0, r3
 1203 004c 0C49     		ldr	r1, .L83+12
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 37


 1204 004e FFF7FEFF 		bl	__aeabi_fmul
 1205 0052 0346     		mov	r3, r0
 1206 0054 1C46     		mov	r4, r3
 1207 0056 F868     		ldr	r0, [r7, #12]
 1208 0058 FFF7FEFF 		bl	__aeabi_i2f
 1209 005c 0346     		mov	r3, r0
 1210 005e 2046     		mov	r0, r4
 1211 0060 1946     		mov	r1, r3
 1212 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1213 0066 0346     		mov	r3, r0
 1214 0068 BB60     		str	r3, [r7, #8]	@ float
 847:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c ****     return( volts );
 1215              		.loc 1 848 0
 1216 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:.\Generated_Source\PSoC5/ADC_SAR_Seq_2_SAR.c **** }
 1217              		.loc 1 849 0
 1218 006c 1846     		mov	r0, r3
 1219 006e 1437     		adds	r7, r7, #20
 1220              		.cfi_def_cfa_offset 12
 1221 0070 BD46     		mov	sp, r7
 1222              		.cfi_def_cfa_register 13
 1223              		@ sp needed
 1224 0072 90BD     		pop	{r4, r7, pc}
 1225              	.L84:
 1226              		.align	2
 1227              	.L83:
 1228 0074 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPerVolt
 1229 0078 00000000 		.word	ADC_SAR_Seq_2_SAR_countsPer10Volt
 1230 007c 00000000 		.word	ADC_SAR_Seq_2_SAR_offset
 1231 0080 00002041 		.word	1092616192
 1232              		.cfi_endproc
 1233              	.LFE17:
 1234              		.size	ADC_SAR_Seq_2_SAR_CountsTo_Volts, .-ADC_SAR_Seq_2_SAR_CountsTo_Volts
 1235              		.text
 1236              	.Letext0:
 1237              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1238              		.section	.debug_info,"",%progbits
 1239              	.Ldebug_info0:
 1240 0000 66040000 		.4byte	0x466
 1241 0004 0400     		.2byte	0x4
 1242 0006 00000000 		.4byte	.Ldebug_abbrev0
 1243 000a 04       		.byte	0x4
 1244 000b 01       		.uleb128 0x1
 1245 000c A5010000 		.4byte	.LASF58
 1246 0010 01       		.byte	0x1
 1247 0011 33030000 		.4byte	.LASF59
 1248 0015 89030000 		.4byte	.LASF60
 1249 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1250 001d 00000000 		.4byte	0
 1251 0021 00000000 		.4byte	.Ldebug_line0
 1252 0025 02       		.uleb128 0x2
 1253 0026 04       		.byte	0x4
 1254 0027 05       		.byte	0x5
 1255 0028 696E7400 		.ascii	"int\000"
 1256 002c 03       		.uleb128 0x3
 1257 002d 04       		.byte	0x4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 38


 1258 002e 07       		.byte	0x7
 1259 002f CD000000 		.4byte	.LASF0
 1260 0033 03       		.uleb128 0x3
 1261 0034 01       		.byte	0x1
 1262 0035 06       		.byte	0x6
 1263 0036 6B000000 		.4byte	.LASF1
 1264 003a 03       		.uleb128 0x3
 1265 003b 01       		.byte	0x1
 1266 003c 08       		.byte	0x8
 1267 003d 98020000 		.4byte	.LASF2
 1268 0041 03       		.uleb128 0x3
 1269 0042 02       		.byte	0x2
 1270 0043 05       		.byte	0x5
 1271 0044 EA020000 		.4byte	.LASF3
 1272 0048 03       		.uleb128 0x3
 1273 0049 02       		.byte	0x2
 1274 004a 07       		.byte	0x7
 1275 004b 33010000 		.4byte	.LASF4
 1276 004f 03       		.uleb128 0x3
 1277 0050 04       		.byte	0x4
 1278 0051 05       		.byte	0x5
 1279 0052 7D000000 		.4byte	.LASF5
 1280 0056 03       		.uleb128 0x3
 1281 0057 04       		.byte	0x4
 1282 0058 07       		.byte	0x7
 1283 0059 1B010000 		.4byte	.LASF6
 1284 005d 03       		.uleb128 0x3
 1285 005e 08       		.byte	0x8
 1286 005f 05       		.byte	0x5
 1287 0060 5D000000 		.4byte	.LASF7
 1288 0064 03       		.uleb128 0x3
 1289 0065 08       		.byte	0x8
 1290 0066 07       		.byte	0x7
 1291 0067 46000000 		.4byte	.LASF8
 1292 006b 03       		.uleb128 0x3
 1293 006c 04       		.byte	0x4
 1294 006d 07       		.byte	0x7
 1295 006e 9C010000 		.4byte	.LASF9
 1296 0072 03       		.uleb128 0x3
 1297 0073 01       		.byte	0x1
 1298 0074 08       		.byte	0x8
 1299 0075 D8030000 		.4byte	.LASF10
 1300 0079 04       		.uleb128 0x4
 1301 007a 8C000000 		.4byte	.LASF11
 1302 007e 02       		.byte	0x2
 1303 007f 9201     		.2byte	0x192
 1304 0081 3A000000 		.4byte	0x3a
 1305 0085 04       		.uleb128 0x4
 1306 0086 00000000 		.4byte	.LASF12
 1307 008a 02       		.byte	0x2
 1308 008b 9301     		.2byte	0x193
 1309 008d 48000000 		.4byte	0x48
 1310 0091 04       		.uleb128 0x4
 1311 0092 46010000 		.4byte	.LASF13
 1312 0096 02       		.byte	0x2
 1313 0097 9501     		.2byte	0x195
 1314 0099 33000000 		.4byte	0x33
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 39


 1315 009d 04       		.uleb128 0x4
 1316 009e D8040000 		.4byte	.LASF14
 1317 00a2 02       		.byte	0x2
 1318 00a3 9601     		.2byte	0x196
 1319 00a5 41000000 		.4byte	0x41
 1320 00a9 04       		.uleb128 0x4
 1321 00aa 77000000 		.4byte	.LASF15
 1322 00ae 02       		.byte	0x2
 1323 00af 9701     		.2byte	0x197
 1324 00b1 4F000000 		.4byte	0x4f
 1325 00b5 04       		.uleb128 0x4
 1326 00b6 94010000 		.4byte	.LASF16
 1327 00ba 02       		.byte	0x2
 1328 00bb 9801     		.2byte	0x198
 1329 00bd C1000000 		.4byte	0xc1
 1330 00c1 03       		.uleb128 0x3
 1331 00c2 04       		.byte	0x4
 1332 00c3 04       		.byte	0x4
 1333 00c4 52020000 		.4byte	.LASF17
 1334 00c8 03       		.uleb128 0x3
 1335 00c9 08       		.byte	0x8
 1336 00ca 04       		.byte	0x4
 1337 00cb AE000000 		.4byte	.LASF18
 1338 00cf 04       		.uleb128 0x4
 1339 00d0 33020000 		.4byte	.LASF19
 1340 00d4 02       		.byte	0x2
 1341 00d5 9D01     		.2byte	0x19d
 1342 00d7 5D000000 		.4byte	0x5d
 1343 00db 04       		.uleb128 0x4
 1344 00dc 93020000 		.4byte	.LASF20
 1345 00e0 02       		.byte	0x2
 1346 00e1 3C02     		.2byte	0x23c
 1347 00e3 E7000000 		.4byte	0xe7
 1348 00e7 05       		.uleb128 0x5
 1349 00e8 79000000 		.4byte	0x79
 1350 00ec 04       		.uleb128 0x4
 1351 00ed 86000000 		.4byte	.LASF21
 1352 00f1 02       		.byte	0x2
 1353 00f2 3D02     		.2byte	0x23d
 1354 00f4 F8000000 		.4byte	0xf8
 1355 00f8 05       		.uleb128 0x5
 1356 00f9 85000000 		.4byte	0x85
 1357 00fd 06       		.uleb128 0x6
 1358 00fe DE040000 		.4byte	.LASF22
 1359 0102 01       		.byte	0x1
 1360 0103 4A       		.byte	0x4a
 1361 0104 00000000 		.4byte	.LFB0
 1362 0108 20000000 		.4byte	.LFE0-.LFB0
 1363 010c 01       		.uleb128 0x1
 1364 010d 9C       		.byte	0x9c
 1365 010e 06       		.uleb128 0x6
 1366 010f 16000000 		.4byte	.LASF23
 1367 0113 01       		.byte	0x1
 1368 0114 6A       		.byte	0x6a
 1369 0115 00000000 		.4byte	.LFB1
 1370 0119 2C000000 		.4byte	.LFE1-.LFB1
 1371 011d 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 40


 1372 011e 9C       		.byte	0x9c
 1373 011f 07       		.uleb128 0x7
 1374 0120 2D000000 		.4byte	.LASF26
 1375 0124 01       		.byte	0x1
 1376 0125 8F       		.byte	0x8f
 1377 0126 00000000 		.4byte	.LFB2
 1378 012a C0000000 		.4byte	.LFE2-.LFB2
 1379 012e 01       		.uleb128 0x1
 1380 012f 9C       		.byte	0x9c
 1381 0130 51010000 		.4byte	0x151
 1382 0134 08       		.uleb128 0x8
 1383 0135 F6040000 		.4byte	.LASF24
 1384 0139 01       		.byte	0x1
 1385 013a 91       		.byte	0x91
 1386 013b 79000000 		.4byte	0x79
 1387 013f 02       		.uleb128 0x2
 1388 0140 91       		.byte	0x91
 1389 0141 76       		.sleb128 -10
 1390 0142 08       		.uleb128 0x8
 1391 0143 6C040000 		.4byte	.LASF25
 1392 0147 01       		.byte	0x1
 1393 0148 92       		.byte	0x92
 1394 0149 79000000 		.4byte	0x79
 1395 014d 02       		.uleb128 0x2
 1396 014e 91       		.byte	0x91
 1397 014f 77       		.sleb128 -9
 1398 0150 00       		.byte	0
 1399 0151 07       		.uleb128 0x7
 1400 0152 7C020000 		.4byte	.LASF27
 1401 0156 01       		.byte	0x1
 1402 0157 F8       		.byte	0xf8
 1403 0158 00000000 		.4byte	.LFB3
 1404 015c 58000000 		.4byte	.LFE3-.LFB3
 1405 0160 01       		.uleb128 0x1
 1406 0161 9C       		.byte	0x9c
 1407 0162 75010000 		.4byte	0x175
 1408 0166 08       		.uleb128 0x8
 1409 0167 6C040000 		.4byte	.LASF25
 1410 016b 01       		.byte	0x1
 1411 016c FA       		.byte	0xfa
 1412 016d 79000000 		.4byte	0x79
 1413 0171 02       		.uleb128 0x2
 1414 0172 91       		.byte	0x91
 1415 0173 77       		.sleb128 -9
 1416 0174 00       		.byte	0
 1417 0175 09       		.uleb128 0x9
 1418 0176 B0020000 		.4byte	.LASF28
 1419 017a 01       		.byte	0x1
 1420 017b 2201     		.2byte	0x122
 1421 017d 00000000 		.4byte	.LFB4
 1422 0181 40000000 		.4byte	.LFE4-.LFB4
 1423 0185 01       		.uleb128 0x1
 1424 0186 9C       		.byte	0x9c
 1425 0187 AA010000 		.4byte	0x1aa
 1426 018b 0A       		.uleb128 0xa
 1427 018c 76020000 		.4byte	.LASF30
 1428 0190 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 41


 1429 0191 2201     		.2byte	0x122
 1430 0193 79000000 		.4byte	0x79
 1431 0197 02       		.uleb128 0x2
 1432 0198 91       		.byte	0x91
 1433 0199 6F       		.sleb128 -17
 1434 019a 0B       		.uleb128 0xb
 1435 019b F6040000 		.4byte	.LASF24
 1436 019f 01       		.byte	0x1
 1437 01a0 2401     		.2byte	0x124
 1438 01a2 79000000 		.4byte	0x79
 1439 01a6 02       		.uleb128 0x2
 1440 01a7 91       		.byte	0x91
 1441 01a8 77       		.sleb128 -9
 1442 01a9 00       		.byte	0
 1443 01aa 0C       		.uleb128 0xc
 1444 01ab 4C040000 		.4byte	.LASF29
 1445 01af 01       		.byte	0x1
 1446 01b0 5401     		.2byte	0x154
 1447 01b2 00000000 		.4byte	.LFB5
 1448 01b6 50000000 		.4byte	.LFE5-.LFB5
 1449 01ba 01       		.uleb128 0x1
 1450 01bb 9C       		.byte	0x9c
 1451 01bc DF010000 		.4byte	0x1df
 1452 01c0 0A       		.uleb128 0xa
 1453 01c1 7E030000 		.4byte	.LASF31
 1454 01c5 01       		.byte	0x1
 1455 01c6 5401     		.2byte	0x154
 1456 01c8 79000000 		.4byte	0x79
 1457 01cc 02       		.uleb128 0x2
 1458 01cd 91       		.byte	0x91
 1459 01ce 6F       		.sleb128 -17
 1460 01cf 0B       		.uleb128 0xb
 1461 01d0 F6040000 		.4byte	.LASF24
 1462 01d4 01       		.byte	0x1
 1463 01d5 5601     		.2byte	0x156
 1464 01d7 79000000 		.4byte	0x79
 1465 01db 02       		.uleb128 0x2
 1466 01dc 91       		.byte	0x91
 1467 01dd 77       		.sleb128 -9
 1468 01de 00       		.byte	0
 1469 01df 0D       		.uleb128 0xd
 1470 01e0 CB020000 		.4byte	.LASF32
 1471 01e4 01       		.byte	0x1
 1472 01e5 9101     		.2byte	0x191
 1473 01e7 00000000 		.4byte	.LFB6
 1474 01eb 20000000 		.4byte	.LFE6-.LFB6
 1475 01ef 01       		.uleb128 0x1
 1476 01f0 9C       		.byte	0x9c
 1477 01f1 0D       		.uleb128 0xd
 1478 01f2 60030000 		.4byte	.LASF33
 1479 01f6 01       		.byte	0x1
 1480 01f7 B301     		.2byte	0x1b3
 1481 01f9 00000000 		.4byte	.LFB7
 1482 01fd 20000000 		.4byte	.LFE7-.LFB7
 1483 0201 01       		.uleb128 0x1
 1484 0202 9C       		.byte	0x9c
 1485 0203 0E       		.uleb128 0xe
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 42


 1486 0204 F4020000 		.4byte	.LASF36
 1487 0208 01       		.byte	0x1
 1488 0209 DB01     		.2byte	0x1db
 1489 020b 79000000 		.4byte	0x79
 1490 020f 00000000 		.4byte	.LFB8
 1491 0213 40000000 		.4byte	.LFE8-.LFB8
 1492 0217 01       		.uleb128 0x1
 1493 0218 9C       		.byte	0x9c
 1494 0219 3C020000 		.4byte	0x23c
 1495 021d 0A       		.uleb128 0xa
 1496 021e C5000000 		.4byte	.LASF34
 1497 0222 01       		.byte	0x1
 1498 0223 DB01     		.2byte	0x1db
 1499 0225 79000000 		.4byte	0x79
 1500 0229 02       		.uleb128 0x2
 1501 022a 91       		.byte	0x91
 1502 022b 6F       		.sleb128 -17
 1503 022c 0B       		.uleb128 0xb
 1504 022d 7D040000 		.4byte	.LASF35
 1505 0231 01       		.byte	0x1
 1506 0232 DD01     		.2byte	0x1dd
 1507 0234 79000000 		.4byte	0x79
 1508 0238 02       		.uleb128 0x2
 1509 0239 91       		.byte	0x91
 1510 023a 77       		.sleb128 -9
 1511 023b 00       		.byte	0
 1512 023c 0F       		.uleb128 0xf
 1513 023d 16030000 		.4byte	.LASF61
 1514 0241 01       		.byte	0x1
 1515 0242 0802     		.2byte	0x208
 1516 0244 91000000 		.4byte	0x91
 1517 0248 00000000 		.4byte	.LFB9
 1518 024c 2C000000 		.4byte	.LFE9-.LFB9
 1519 0250 01       		.uleb128 0x1
 1520 0251 9C       		.byte	0x9c
 1521 0252 10       		.uleb128 0x10
 1522 0253 58020000 		.4byte	.LASF37
 1523 0257 01       		.byte	0x1
 1524 0258 2602     		.2byte	0x226
 1525 025a 9D000000 		.4byte	0x9d
 1526 025e 00000000 		.4byte	.LFB10
 1527 0262 34000000 		.4byte	.LFE10-.LFB10
 1528 0266 01       		.uleb128 0x1
 1529 0267 9C       		.byte	0x9c
 1530 0268 7C020000 		.4byte	0x27c
 1531 026c 11       		.uleb128 0x11
 1532 026d 72657300 		.ascii	"res\000"
 1533 0271 01       		.byte	0x1
 1534 0272 2802     		.2byte	0x228
 1535 0274 85000000 		.4byte	0x85
 1536 0278 02       		.uleb128 0x2
 1537 0279 91       		.byte	0x91
 1538 027a 76       		.sleb128 -10
 1539 027b 00       		.byte	0
 1540 027c 09       		.uleb128 0x9
 1541 027d 92000000 		.4byte	.LASF38
 1542 0281 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 43


 1543 0282 4902     		.2byte	0x249
 1544 0284 00000000 		.4byte	.LFB11
 1545 0288 20000000 		.4byte	.LFE11-.LFB11
 1546 028c 01       		.uleb128 0x1
 1547 028d 9C       		.byte	0x9c
 1548 028e A2020000 		.4byte	0x2a2
 1549 0292 0A       		.uleb128 0xa
 1550 0293 1A040000 		.4byte	.LASF39
 1551 0297 01       		.byte	0x1
 1552 0298 4902     		.2byte	0x249
 1553 029a 9D000000 		.4byte	0x9d
 1554 029e 02       		.uleb128 0x2
 1555 029f 91       		.byte	0x91
 1556 02a0 76       		.sleb128 -10
 1557 02a1 00       		.byte	0
 1558 02a2 12       		.uleb128 0x12
 1559 02a3 FF030000 		.4byte	.LASF62
 1560 02a7 01       		.byte	0x1
 1561 02a8 6302     		.2byte	0x263
 1562 02aa 00000000 		.4byte	.LFB12
 1563 02ae 94000000 		.4byte	.LFE12-.LFB12
 1564 02b2 01       		.uleb128 0x1
 1565 02b3 9C       		.byte	0x9c
 1566 02b4 E6020000 		.4byte	0x2e6
 1567 02b8 0A       		.uleb128 0xa
 1568 02b9 7E030000 		.4byte	.LASF31
 1569 02bd 01       		.byte	0x1
 1570 02be 6302     		.2byte	0x263
 1571 02c0 79000000 		.4byte	0x79
 1572 02c4 02       		.uleb128 0x2
 1573 02c5 91       		.byte	0x91
 1574 02c6 6F       		.sleb128 -17
 1575 02c7 0B       		.uleb128 0xb
 1576 02c8 0F000000 		.4byte	.LASF40
 1577 02cc 01       		.byte	0x1
 1578 02cd 6502     		.2byte	0x265
 1579 02cf A9000000 		.4byte	0xa9
 1580 02d3 02       		.uleb128 0x2
 1581 02d4 91       		.byte	0x91
 1582 02d5 74       		.sleb128 -12
 1583 02d6 0B       		.uleb128 0xb
 1584 02d7 A6020000 		.4byte	.LASF41
 1585 02db 01       		.byte	0x1
 1586 02dc 6902     		.2byte	0x269
 1587 02de 85000000 		.4byte	0x85
 1588 02e2 02       		.uleb128 0x2
 1589 02e3 91       		.byte	0x91
 1590 02e4 72       		.sleb128 -14
 1591 02e5 00       		.byte	0
 1592 02e6 09       		.uleb128 0x9
 1593 02e7 84040000 		.4byte	.LASF42
 1594 02eb 01       		.byte	0x1
 1595 02ec B402     		.2byte	0x2b4
 1596 02ee 00000000 		.4byte	.LFB13
 1597 02f2 2C000000 		.4byte	.LFE13-.LFB13
 1598 02f6 01       		.uleb128 0x1
 1599 02f7 9C       		.byte	0x9c
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 44


 1600 02f8 0C030000 		.4byte	0x30c
 1601 02fc 0A       		.uleb128 0xa
 1602 02fd 07000000 		.4byte	.LASF43
 1603 0301 01       		.byte	0x1
 1604 0302 B402     		.2byte	0x2b4
 1605 0304 9D000000 		.4byte	0x9d
 1606 0308 02       		.uleb128 0x2
 1607 0309 91       		.byte	0x91
 1608 030a 76       		.sleb128 -10
 1609 030b 00       		.byte	0
 1610 030c 09       		.uleb128 0x9
 1611 030d 4B010000 		.4byte	.LASF44
 1612 0311 01       		.byte	0x1
 1613 0312 CF02     		.2byte	0x2cf
 1614 0314 00000000 		.4byte	.LFB14
 1615 0318 1C000000 		.4byte	.LFE14-.LFB14
 1616 031c 01       		.uleb128 0x1
 1617 031d 9C       		.byte	0x9c
 1618 031e 32030000 		.4byte	0x332
 1619 0322 0A       		.uleb128 0xa
 1620 0323 07000000 		.4byte	.LASF43
 1621 0327 01       		.byte	0x1
 1622 0328 CF02     		.2byte	0x2cf
 1623 032a A9000000 		.4byte	0xa9
 1624 032e 02       		.uleb128 0x2
 1625 032f 91       		.byte	0x91
 1626 0330 74       		.sleb128 -12
 1627 0331 00       		.byte	0
 1628 0332 10       		.uleb128 0x10
 1629 0333 72010000 		.4byte	.LASF45
 1630 0337 01       		.byte	0x1
 1631 0338 E702     		.2byte	0x2e7
 1632 033a 9D000000 		.4byte	0x9d
 1633 033e 00000000 		.4byte	.LFB15
 1634 0342 8C000000 		.4byte	.LFE15-.LFB15
 1635 0346 01       		.uleb128 0x1
 1636 0347 9C       		.byte	0x9c
 1637 0348 7A030000 		.4byte	0x37a
 1638 034c 0A       		.uleb128 0xa
 1639 034d 42040000 		.4byte	.LASF46
 1640 0351 01       		.byte	0x1
 1641 0352 E702     		.2byte	0x2e7
 1642 0354 9D000000 		.4byte	0x9d
 1643 0358 02       		.uleb128 0x2
 1644 0359 91       		.byte	0x91
 1645 035a 6E       		.sleb128 -18
 1646 035b 0B       		.uleb128 0xb
 1647 035c 6B010000 		.4byte	.LASF47
 1648 0360 01       		.byte	0x1
 1649 0361 E902     		.2byte	0x2e9
 1650 0363 9D000000 		.4byte	0x9d
 1651 0367 02       		.uleb128 0x2
 1652 0368 91       		.byte	0x91
 1653 0369 72       		.sleb128 -14
 1654 036a 0B       		.uleb128 0xb
 1655 036b B5000000 		.4byte	.LASF48
 1656 036f 01       		.byte	0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 45


 1657 0370 EA02     		.2byte	0x2ea
 1658 0372 A9000000 		.4byte	0xa9
 1659 0376 02       		.uleb128 0x2
 1660 0377 91       		.byte	0x91
 1661 0378 74       		.sleb128 -12
 1662 0379 00       		.byte	0
 1663 037a 0E       		.uleb128 0xe
 1664 037b F9000000 		.4byte	.LASF49
 1665 037f 01       		.byte	0x1
 1666 0380 1103     		.2byte	0x311
 1667 0382 A9000000 		.4byte	0xa9
 1668 0386 00000000 		.4byte	.LFB16
 1669 038a 94000000 		.4byte	.LFE16-.LFB16
 1670 038e 01       		.uleb128 0x1
 1671 038f 9C       		.byte	0x9c
 1672 0390 C2030000 		.4byte	0x3c2
 1673 0394 0A       		.uleb128 0xa
 1674 0395 42040000 		.4byte	.LASF46
 1675 0399 01       		.byte	0x1
 1676 039a 1103     		.2byte	0x311
 1677 039c 9D000000 		.4byte	0x9d
 1678 03a0 02       		.uleb128 0x2
 1679 03a1 91       		.byte	0x91
 1680 03a2 5E       		.sleb128 -34
 1681 03a3 0B       		.uleb128 0xb
 1682 03a4 F2000000 		.4byte	.LASF50
 1683 03a8 01       		.byte	0x1
 1684 03a9 1403     		.2byte	0x314
 1685 03ab CF000000 		.4byte	0xcf
 1686 03af 02       		.uleb128 0x2
 1687 03b0 91       		.byte	0x91
 1688 03b1 60       		.sleb128 -32
 1689 03b2 0B       		.uleb128 0xb
 1690 03b3 B5000000 		.4byte	.LASF48
 1691 03b7 01       		.byte	0x1
 1692 03b8 1503     		.2byte	0x315
 1693 03ba A9000000 		.4byte	0xa9
 1694 03be 02       		.uleb128 0x2
 1695 03bf 91       		.byte	0x91
 1696 03c0 6C       		.sleb128 -20
 1697 03c1 00       		.byte	0
 1698 03c2 0E       		.uleb128 0xe
 1699 03c3 21040000 		.4byte	.LASF51
 1700 03c7 01       		.byte	0x1
 1701 03c8 3D03     		.2byte	0x33d
 1702 03ca B5000000 		.4byte	0xb5
 1703 03ce 00000000 		.4byte	.LFB17
 1704 03d2 84000000 		.4byte	.LFE17-.LFB17
 1705 03d6 01       		.uleb128 0x1
 1706 03d7 9C       		.byte	0x9c
 1707 03d8 0A040000 		.4byte	0x40a
 1708 03dc 0A       		.uleb128 0xa
 1709 03dd 42040000 		.4byte	.LASF46
 1710 03e1 01       		.byte	0x1
 1711 03e2 3D03     		.2byte	0x33d
 1712 03e4 9D000000 		.4byte	0x9d
 1713 03e8 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 46


 1714 03e9 91       		.byte	0x91
 1715 03ea 66       		.sleb128 -26
 1716 03eb 0B       		.uleb128 0xb
 1717 03ec 2D010000 		.4byte	.LASF52
 1718 03f0 01       		.byte	0x1
 1719 03f1 3F03     		.2byte	0x33f
 1720 03f3 B5000000 		.4byte	0xb5
 1721 03f7 02       		.uleb128 0x2
 1722 03f8 91       		.byte	0x91
 1723 03f9 68       		.sleb128 -24
 1724 03fa 0B       		.uleb128 0xb
 1725 03fb B5000000 		.4byte	.LASF48
 1726 03ff 01       		.byte	0x1
 1727 0400 4003     		.2byte	0x340
 1728 0402 A9000000 		.4byte	0xa9
 1729 0406 02       		.uleb128 0x2
 1730 0407 91       		.byte	0x91
 1731 0408 6C       		.sleb128 -20
 1732 0409 00       		.byte	0
 1733 040a 13       		.uleb128 0x13
 1734 040b 9E040000 		.4byte	.LASF53
 1735 040f 01       		.byte	0x1
 1736 0410 23       		.byte	0x23
 1737 0411 79000000 		.4byte	0x79
 1738 0415 05       		.uleb128 0x5
 1739 0416 03       		.byte	0x3
 1740 0417 00000000 		.4byte	ADC_SAR_Seq_2_SAR_initVar
 1741 041b 13       		.uleb128 0x13
 1742 041c 39020000 		.4byte	.LASF54
 1743 0420 01       		.byte	0x1
 1744 0421 24       		.byte	0x24
 1745 0422 2C040000 		.4byte	0x42c
 1746 0426 05       		.uleb128 0x5
 1747 0427 03       		.byte	0x3
 1748 0428 00000000 		.4byte	ADC_SAR_Seq_2_SAR_offset
 1749 042c 05       		.uleb128 0x5
 1750 042d 9D000000 		.4byte	0x9d
 1751 0431 13       		.uleb128 0x13
 1752 0432 B8040000 		.4byte	.LASF55
 1753 0436 01       		.byte	0x1
 1754 0437 25       		.byte	0x25
 1755 0438 2C040000 		.4byte	0x42c
 1756 043c 05       		.uleb128 0x5
 1757 043d 03       		.byte	0x3
 1758 043e 00000000 		.4byte	ADC_SAR_Seq_2_SAR_countsPerVolt
 1759 0442 13       		.uleb128 0x13
 1760 0443 DD030000 		.4byte	.LASF56
 1761 0447 01       		.byte	0x1
 1762 0448 26       		.byte	0x26
 1763 0449 53040000 		.4byte	0x453
 1764 044d 05       		.uleb128 0x5
 1765 044e 03       		.byte	0x3
 1766 044f 00000000 		.4byte	ADC_SAR_Seq_2_SAR_countsPer10Volt
 1767 0453 05       		.uleb128 0x5
 1768 0454 A9000000 		.4byte	0xa9
 1769 0458 13       		.uleb128 0x13
 1770 0459 DA000000 		.4byte	.LASF57
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 47


 1771 045d 01       		.byte	0x1
 1772 045e 27       		.byte	0x27
 1773 045f 2C040000 		.4byte	0x42c
 1774 0463 05       		.uleb128 0x5
 1775 0464 03       		.byte	0x3
 1776 0465 00000000 		.4byte	ADC_SAR_Seq_2_SAR_shift
 1777 0469 00       		.byte	0
 1778              		.section	.debug_abbrev,"",%progbits
 1779              	.Ldebug_abbrev0:
 1780 0000 01       		.uleb128 0x1
 1781 0001 11       		.uleb128 0x11
 1782 0002 01       		.byte	0x1
 1783 0003 25       		.uleb128 0x25
 1784 0004 0E       		.uleb128 0xe
 1785 0005 13       		.uleb128 0x13
 1786 0006 0B       		.uleb128 0xb
 1787 0007 03       		.uleb128 0x3
 1788 0008 0E       		.uleb128 0xe
 1789 0009 1B       		.uleb128 0x1b
 1790 000a 0E       		.uleb128 0xe
 1791 000b 55       		.uleb128 0x55
 1792 000c 17       		.uleb128 0x17
 1793 000d 11       		.uleb128 0x11
 1794 000e 01       		.uleb128 0x1
 1795 000f 10       		.uleb128 0x10
 1796 0010 17       		.uleb128 0x17
 1797 0011 00       		.byte	0
 1798 0012 00       		.byte	0
 1799 0013 02       		.uleb128 0x2
 1800 0014 24       		.uleb128 0x24
 1801 0015 00       		.byte	0
 1802 0016 0B       		.uleb128 0xb
 1803 0017 0B       		.uleb128 0xb
 1804 0018 3E       		.uleb128 0x3e
 1805 0019 0B       		.uleb128 0xb
 1806 001a 03       		.uleb128 0x3
 1807 001b 08       		.uleb128 0x8
 1808 001c 00       		.byte	0
 1809 001d 00       		.byte	0
 1810 001e 03       		.uleb128 0x3
 1811 001f 24       		.uleb128 0x24
 1812 0020 00       		.byte	0
 1813 0021 0B       		.uleb128 0xb
 1814 0022 0B       		.uleb128 0xb
 1815 0023 3E       		.uleb128 0x3e
 1816 0024 0B       		.uleb128 0xb
 1817 0025 03       		.uleb128 0x3
 1818 0026 0E       		.uleb128 0xe
 1819 0027 00       		.byte	0
 1820 0028 00       		.byte	0
 1821 0029 04       		.uleb128 0x4
 1822 002a 16       		.uleb128 0x16
 1823 002b 00       		.byte	0
 1824 002c 03       		.uleb128 0x3
 1825 002d 0E       		.uleb128 0xe
 1826 002e 3A       		.uleb128 0x3a
 1827 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 48


 1828 0030 3B       		.uleb128 0x3b
 1829 0031 05       		.uleb128 0x5
 1830 0032 49       		.uleb128 0x49
 1831 0033 13       		.uleb128 0x13
 1832 0034 00       		.byte	0
 1833 0035 00       		.byte	0
 1834 0036 05       		.uleb128 0x5
 1835 0037 35       		.uleb128 0x35
 1836 0038 00       		.byte	0
 1837 0039 49       		.uleb128 0x49
 1838 003a 13       		.uleb128 0x13
 1839 003b 00       		.byte	0
 1840 003c 00       		.byte	0
 1841 003d 06       		.uleb128 0x6
 1842 003e 2E       		.uleb128 0x2e
 1843 003f 00       		.byte	0
 1844 0040 3F       		.uleb128 0x3f
 1845 0041 19       		.uleb128 0x19
 1846 0042 03       		.uleb128 0x3
 1847 0043 0E       		.uleb128 0xe
 1848 0044 3A       		.uleb128 0x3a
 1849 0045 0B       		.uleb128 0xb
 1850 0046 3B       		.uleb128 0x3b
 1851 0047 0B       		.uleb128 0xb
 1852 0048 27       		.uleb128 0x27
 1853 0049 19       		.uleb128 0x19
 1854 004a 11       		.uleb128 0x11
 1855 004b 01       		.uleb128 0x1
 1856 004c 12       		.uleb128 0x12
 1857 004d 06       		.uleb128 0x6
 1858 004e 40       		.uleb128 0x40
 1859 004f 18       		.uleb128 0x18
 1860 0050 9642     		.uleb128 0x2116
 1861 0052 19       		.uleb128 0x19
 1862 0053 00       		.byte	0
 1863 0054 00       		.byte	0
 1864 0055 07       		.uleb128 0x7
 1865 0056 2E       		.uleb128 0x2e
 1866 0057 01       		.byte	0x1
 1867 0058 3F       		.uleb128 0x3f
 1868 0059 19       		.uleb128 0x19
 1869 005a 03       		.uleb128 0x3
 1870 005b 0E       		.uleb128 0xe
 1871 005c 3A       		.uleb128 0x3a
 1872 005d 0B       		.uleb128 0xb
 1873 005e 3B       		.uleb128 0x3b
 1874 005f 0B       		.uleb128 0xb
 1875 0060 27       		.uleb128 0x27
 1876 0061 19       		.uleb128 0x19
 1877 0062 11       		.uleb128 0x11
 1878 0063 01       		.uleb128 0x1
 1879 0064 12       		.uleb128 0x12
 1880 0065 06       		.uleb128 0x6
 1881 0066 40       		.uleb128 0x40
 1882 0067 18       		.uleb128 0x18
 1883 0068 9642     		.uleb128 0x2116
 1884 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 49


 1885 006b 01       		.uleb128 0x1
 1886 006c 13       		.uleb128 0x13
 1887 006d 00       		.byte	0
 1888 006e 00       		.byte	0
 1889 006f 08       		.uleb128 0x8
 1890 0070 34       		.uleb128 0x34
 1891 0071 00       		.byte	0
 1892 0072 03       		.uleb128 0x3
 1893 0073 0E       		.uleb128 0xe
 1894 0074 3A       		.uleb128 0x3a
 1895 0075 0B       		.uleb128 0xb
 1896 0076 3B       		.uleb128 0x3b
 1897 0077 0B       		.uleb128 0xb
 1898 0078 49       		.uleb128 0x49
 1899 0079 13       		.uleb128 0x13
 1900 007a 02       		.uleb128 0x2
 1901 007b 18       		.uleb128 0x18
 1902 007c 00       		.byte	0
 1903 007d 00       		.byte	0
 1904 007e 09       		.uleb128 0x9
 1905 007f 2E       		.uleb128 0x2e
 1906 0080 01       		.byte	0x1
 1907 0081 3F       		.uleb128 0x3f
 1908 0082 19       		.uleb128 0x19
 1909 0083 03       		.uleb128 0x3
 1910 0084 0E       		.uleb128 0xe
 1911 0085 3A       		.uleb128 0x3a
 1912 0086 0B       		.uleb128 0xb
 1913 0087 3B       		.uleb128 0x3b
 1914 0088 05       		.uleb128 0x5
 1915 0089 27       		.uleb128 0x27
 1916 008a 19       		.uleb128 0x19
 1917 008b 11       		.uleb128 0x11
 1918 008c 01       		.uleb128 0x1
 1919 008d 12       		.uleb128 0x12
 1920 008e 06       		.uleb128 0x6
 1921 008f 40       		.uleb128 0x40
 1922 0090 18       		.uleb128 0x18
 1923 0091 9742     		.uleb128 0x2117
 1924 0093 19       		.uleb128 0x19
 1925 0094 01       		.uleb128 0x1
 1926 0095 13       		.uleb128 0x13
 1927 0096 00       		.byte	0
 1928 0097 00       		.byte	0
 1929 0098 0A       		.uleb128 0xa
 1930 0099 05       		.uleb128 0x5
 1931 009a 00       		.byte	0
 1932 009b 03       		.uleb128 0x3
 1933 009c 0E       		.uleb128 0xe
 1934 009d 3A       		.uleb128 0x3a
 1935 009e 0B       		.uleb128 0xb
 1936 009f 3B       		.uleb128 0x3b
 1937 00a0 05       		.uleb128 0x5
 1938 00a1 49       		.uleb128 0x49
 1939 00a2 13       		.uleb128 0x13
 1940 00a3 02       		.uleb128 0x2
 1941 00a4 18       		.uleb128 0x18
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 50


 1942 00a5 00       		.byte	0
 1943 00a6 00       		.byte	0
 1944 00a7 0B       		.uleb128 0xb
 1945 00a8 34       		.uleb128 0x34
 1946 00a9 00       		.byte	0
 1947 00aa 03       		.uleb128 0x3
 1948 00ab 0E       		.uleb128 0xe
 1949 00ac 3A       		.uleb128 0x3a
 1950 00ad 0B       		.uleb128 0xb
 1951 00ae 3B       		.uleb128 0x3b
 1952 00af 05       		.uleb128 0x5
 1953 00b0 49       		.uleb128 0x49
 1954 00b1 13       		.uleb128 0x13
 1955 00b2 02       		.uleb128 0x2
 1956 00b3 18       		.uleb128 0x18
 1957 00b4 00       		.byte	0
 1958 00b5 00       		.byte	0
 1959 00b6 0C       		.uleb128 0xc
 1960 00b7 2E       		.uleb128 0x2e
 1961 00b8 01       		.byte	0x1
 1962 00b9 3F       		.uleb128 0x3f
 1963 00ba 19       		.uleb128 0x19
 1964 00bb 03       		.uleb128 0x3
 1965 00bc 0E       		.uleb128 0xe
 1966 00bd 3A       		.uleb128 0x3a
 1967 00be 0B       		.uleb128 0xb
 1968 00bf 3B       		.uleb128 0x3b
 1969 00c0 05       		.uleb128 0x5
 1970 00c1 27       		.uleb128 0x27
 1971 00c2 19       		.uleb128 0x19
 1972 00c3 11       		.uleb128 0x11
 1973 00c4 01       		.uleb128 0x1
 1974 00c5 12       		.uleb128 0x12
 1975 00c6 06       		.uleb128 0x6
 1976 00c7 40       		.uleb128 0x40
 1977 00c8 18       		.uleb128 0x18
 1978 00c9 9642     		.uleb128 0x2116
 1979 00cb 19       		.uleb128 0x19
 1980 00cc 01       		.uleb128 0x1
 1981 00cd 13       		.uleb128 0x13
 1982 00ce 00       		.byte	0
 1983 00cf 00       		.byte	0
 1984 00d0 0D       		.uleb128 0xd
 1985 00d1 2E       		.uleb128 0x2e
 1986 00d2 00       		.byte	0
 1987 00d3 3F       		.uleb128 0x3f
 1988 00d4 19       		.uleb128 0x19
 1989 00d5 03       		.uleb128 0x3
 1990 00d6 0E       		.uleb128 0xe
 1991 00d7 3A       		.uleb128 0x3a
 1992 00d8 0B       		.uleb128 0xb
 1993 00d9 3B       		.uleb128 0x3b
 1994 00da 05       		.uleb128 0x5
 1995 00db 27       		.uleb128 0x27
 1996 00dc 19       		.uleb128 0x19
 1997 00dd 11       		.uleb128 0x11
 1998 00de 01       		.uleb128 0x1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 51


 1999 00df 12       		.uleb128 0x12
 2000 00e0 06       		.uleb128 0x6
 2001 00e1 40       		.uleb128 0x40
 2002 00e2 18       		.uleb128 0x18
 2003 00e3 9742     		.uleb128 0x2117
 2004 00e5 19       		.uleb128 0x19
 2005 00e6 00       		.byte	0
 2006 00e7 00       		.byte	0
 2007 00e8 0E       		.uleb128 0xe
 2008 00e9 2E       		.uleb128 0x2e
 2009 00ea 01       		.byte	0x1
 2010 00eb 3F       		.uleb128 0x3f
 2011 00ec 19       		.uleb128 0x19
 2012 00ed 03       		.uleb128 0x3
 2013 00ee 0E       		.uleb128 0xe
 2014 00ef 3A       		.uleb128 0x3a
 2015 00f0 0B       		.uleb128 0xb
 2016 00f1 3B       		.uleb128 0x3b
 2017 00f2 05       		.uleb128 0x5
 2018 00f3 27       		.uleb128 0x27
 2019 00f4 19       		.uleb128 0x19
 2020 00f5 49       		.uleb128 0x49
 2021 00f6 13       		.uleb128 0x13
 2022 00f7 11       		.uleb128 0x11
 2023 00f8 01       		.uleb128 0x1
 2024 00f9 12       		.uleb128 0x12
 2025 00fa 06       		.uleb128 0x6
 2026 00fb 40       		.uleb128 0x40
 2027 00fc 18       		.uleb128 0x18
 2028 00fd 9642     		.uleb128 0x2116
 2029 00ff 19       		.uleb128 0x19
 2030 0100 01       		.uleb128 0x1
 2031 0101 13       		.uleb128 0x13
 2032 0102 00       		.byte	0
 2033 0103 00       		.byte	0
 2034 0104 0F       		.uleb128 0xf
 2035 0105 2E       		.uleb128 0x2e
 2036 0106 00       		.byte	0
 2037 0107 3F       		.uleb128 0x3f
 2038 0108 19       		.uleb128 0x19
 2039 0109 03       		.uleb128 0x3
 2040 010a 0E       		.uleb128 0xe
 2041 010b 3A       		.uleb128 0x3a
 2042 010c 0B       		.uleb128 0xb
 2043 010d 3B       		.uleb128 0x3b
 2044 010e 05       		.uleb128 0x5
 2045 010f 27       		.uleb128 0x27
 2046 0110 19       		.uleb128 0x19
 2047 0111 49       		.uleb128 0x49
 2048 0112 13       		.uleb128 0x13
 2049 0113 11       		.uleb128 0x11
 2050 0114 01       		.uleb128 0x1
 2051 0115 12       		.uleb128 0x12
 2052 0116 06       		.uleb128 0x6
 2053 0117 40       		.uleb128 0x40
 2054 0118 18       		.uleb128 0x18
 2055 0119 9742     		.uleb128 0x2117
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 52


 2056 011b 19       		.uleb128 0x19
 2057 011c 00       		.byte	0
 2058 011d 00       		.byte	0
 2059 011e 10       		.uleb128 0x10
 2060 011f 2E       		.uleb128 0x2e
 2061 0120 01       		.byte	0x1
 2062 0121 3F       		.uleb128 0x3f
 2063 0122 19       		.uleb128 0x19
 2064 0123 03       		.uleb128 0x3
 2065 0124 0E       		.uleb128 0xe
 2066 0125 3A       		.uleb128 0x3a
 2067 0126 0B       		.uleb128 0xb
 2068 0127 3B       		.uleb128 0x3b
 2069 0128 05       		.uleb128 0x5
 2070 0129 27       		.uleb128 0x27
 2071 012a 19       		.uleb128 0x19
 2072 012b 49       		.uleb128 0x49
 2073 012c 13       		.uleb128 0x13
 2074 012d 11       		.uleb128 0x11
 2075 012e 01       		.uleb128 0x1
 2076 012f 12       		.uleb128 0x12
 2077 0130 06       		.uleb128 0x6
 2078 0131 40       		.uleb128 0x40
 2079 0132 18       		.uleb128 0x18
 2080 0133 9742     		.uleb128 0x2117
 2081 0135 19       		.uleb128 0x19
 2082 0136 01       		.uleb128 0x1
 2083 0137 13       		.uleb128 0x13
 2084 0138 00       		.byte	0
 2085 0139 00       		.byte	0
 2086 013a 11       		.uleb128 0x11
 2087 013b 34       		.uleb128 0x34
 2088 013c 00       		.byte	0
 2089 013d 03       		.uleb128 0x3
 2090 013e 08       		.uleb128 0x8
 2091 013f 3A       		.uleb128 0x3a
 2092 0140 0B       		.uleb128 0xb
 2093 0141 3B       		.uleb128 0x3b
 2094 0142 05       		.uleb128 0x5
 2095 0143 49       		.uleb128 0x49
 2096 0144 13       		.uleb128 0x13
 2097 0145 02       		.uleb128 0x2
 2098 0146 18       		.uleb128 0x18
 2099 0147 00       		.byte	0
 2100 0148 00       		.byte	0
 2101 0149 12       		.uleb128 0x12
 2102 014a 2E       		.uleb128 0x2e
 2103 014b 01       		.byte	0x1
 2104 014c 03       		.uleb128 0x3
 2105 014d 0E       		.uleb128 0xe
 2106 014e 3A       		.uleb128 0x3a
 2107 014f 0B       		.uleb128 0xb
 2108 0150 3B       		.uleb128 0x3b
 2109 0151 05       		.uleb128 0x5
 2110 0152 27       		.uleb128 0x27
 2111 0153 19       		.uleb128 0x19
 2112 0154 11       		.uleb128 0x11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 53


 2113 0155 01       		.uleb128 0x1
 2114 0156 12       		.uleb128 0x12
 2115 0157 06       		.uleb128 0x6
 2116 0158 40       		.uleb128 0x40
 2117 0159 18       		.uleb128 0x18
 2118 015a 9642     		.uleb128 0x2116
 2119 015c 19       		.uleb128 0x19
 2120 015d 01       		.uleb128 0x1
 2121 015e 13       		.uleb128 0x13
 2122 015f 00       		.byte	0
 2123 0160 00       		.byte	0
 2124 0161 13       		.uleb128 0x13
 2125 0162 34       		.uleb128 0x34
 2126 0163 00       		.byte	0
 2127 0164 03       		.uleb128 0x3
 2128 0165 0E       		.uleb128 0xe
 2129 0166 3A       		.uleb128 0x3a
 2130 0167 0B       		.uleb128 0xb
 2131 0168 3B       		.uleb128 0x3b
 2132 0169 0B       		.uleb128 0xb
 2133 016a 49       		.uleb128 0x49
 2134 016b 13       		.uleb128 0x13
 2135 016c 3F       		.uleb128 0x3f
 2136 016d 19       		.uleb128 0x19
 2137 016e 02       		.uleb128 0x2
 2138 016f 18       		.uleb128 0x18
 2139 0170 00       		.byte	0
 2140 0171 00       		.byte	0
 2141 0172 00       		.byte	0
 2142              		.section	.debug_aranges,"",%progbits
 2143 0000 A4000000 		.4byte	0xa4
 2144 0004 0200     		.2byte	0x2
 2145 0006 00000000 		.4byte	.Ldebug_info0
 2146 000a 04       		.byte	0x4
 2147 000b 00       		.byte	0
 2148 000c 0000     		.2byte	0
 2149 000e 0000     		.2byte	0
 2150 0010 00000000 		.4byte	.LFB0
 2151 0014 20000000 		.4byte	.LFE0-.LFB0
 2152 0018 00000000 		.4byte	.LFB1
 2153 001c 2C000000 		.4byte	.LFE1-.LFB1
 2154 0020 00000000 		.4byte	.LFB2
 2155 0024 C0000000 		.4byte	.LFE2-.LFB2
 2156 0028 00000000 		.4byte	.LFB3
 2157 002c 58000000 		.4byte	.LFE3-.LFB3
 2158 0030 00000000 		.4byte	.LFB4
 2159 0034 40000000 		.4byte	.LFE4-.LFB4
 2160 0038 00000000 		.4byte	.LFB5
 2161 003c 50000000 		.4byte	.LFE5-.LFB5
 2162 0040 00000000 		.4byte	.LFB6
 2163 0044 20000000 		.4byte	.LFE6-.LFB6
 2164 0048 00000000 		.4byte	.LFB7
 2165 004c 20000000 		.4byte	.LFE7-.LFB7
 2166 0050 00000000 		.4byte	.LFB8
 2167 0054 40000000 		.4byte	.LFE8-.LFB8
 2168 0058 00000000 		.4byte	.LFB9
 2169 005c 2C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 54


 2170 0060 00000000 		.4byte	.LFB10
 2171 0064 34000000 		.4byte	.LFE10-.LFB10
 2172 0068 00000000 		.4byte	.LFB11
 2173 006c 20000000 		.4byte	.LFE11-.LFB11
 2174 0070 00000000 		.4byte	.LFB12
 2175 0074 94000000 		.4byte	.LFE12-.LFB12
 2176 0078 00000000 		.4byte	.LFB13
 2177 007c 2C000000 		.4byte	.LFE13-.LFB13
 2178 0080 00000000 		.4byte	.LFB14
 2179 0084 1C000000 		.4byte	.LFE14-.LFB14
 2180 0088 00000000 		.4byte	.LFB15
 2181 008c 8C000000 		.4byte	.LFE15-.LFB15
 2182 0090 00000000 		.4byte	.LFB16
 2183 0094 94000000 		.4byte	.LFE16-.LFB16
 2184 0098 00000000 		.4byte	.LFB17
 2185 009c 84000000 		.4byte	.LFE17-.LFB17
 2186 00a0 00000000 		.4byte	0
 2187 00a4 00000000 		.4byte	0
 2188              		.section	.debug_ranges,"",%progbits
 2189              	.Ldebug_ranges0:
 2190 0000 00000000 		.4byte	.LFB0
 2191 0004 20000000 		.4byte	.LFE0
 2192 0008 00000000 		.4byte	.LFB1
 2193 000c 2C000000 		.4byte	.LFE1
 2194 0010 00000000 		.4byte	.LFB2
 2195 0014 C0000000 		.4byte	.LFE2
 2196 0018 00000000 		.4byte	.LFB3
 2197 001c 58000000 		.4byte	.LFE3
 2198 0020 00000000 		.4byte	.LFB4
 2199 0024 40000000 		.4byte	.LFE4
 2200 0028 00000000 		.4byte	.LFB5
 2201 002c 50000000 		.4byte	.LFE5
 2202 0030 00000000 		.4byte	.LFB6
 2203 0034 20000000 		.4byte	.LFE6
 2204 0038 00000000 		.4byte	.LFB7
 2205 003c 20000000 		.4byte	.LFE7
 2206 0040 00000000 		.4byte	.LFB8
 2207 0044 40000000 		.4byte	.LFE8
 2208 0048 00000000 		.4byte	.LFB9
 2209 004c 2C000000 		.4byte	.LFE9
 2210 0050 00000000 		.4byte	.LFB10
 2211 0054 34000000 		.4byte	.LFE10
 2212 0058 00000000 		.4byte	.LFB11
 2213 005c 20000000 		.4byte	.LFE11
 2214 0060 00000000 		.4byte	.LFB12
 2215 0064 94000000 		.4byte	.LFE12
 2216 0068 00000000 		.4byte	.LFB13
 2217 006c 2C000000 		.4byte	.LFE13
 2218 0070 00000000 		.4byte	.LFB14
 2219 0074 1C000000 		.4byte	.LFE14
 2220 0078 00000000 		.4byte	.LFB15
 2221 007c 8C000000 		.4byte	.LFE15
 2222 0080 00000000 		.4byte	.LFB16
 2223 0084 94000000 		.4byte	.LFE16
 2224 0088 00000000 		.4byte	.LFB17
 2225 008c 84000000 		.4byte	.LFE17
 2226 0090 00000000 		.4byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 55


 2227 0094 00000000 		.4byte	0
 2228              		.section	.debug_line,"",%progbits
 2229              	.Ldebug_line0:
 2230 0000 11020000 		.section	.debug_str,"MS",%progbits,1
 2230      02005000 
 2230      00000201 
 2230      FB0E0D00 
 2230      01010101 
 2231              	.LASF12:
 2232 0000 75696E74 		.ascii	"uint16\000"
 2232      313600
 2233              	.LASF43:
 2234 0007 61646347 		.ascii	"adcGain\000"
 2234      61696E00 
 2235              	.LASF40:
 2236 000f 636F756E 		.ascii	"counts\000"
 2236      747300
 2237              	.LASF23:
 2238 0016 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_Init\000"
 2238      5341525F 
 2238      5365715F 
 2238      325F5341 
 2238      525F496E 
 2239              	.LASF26:
 2240 002d 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_Enable\000"
 2240      5341525F 
 2240      5365715F 
 2240      325F5341 
 2240      525F456E 
 2241              	.LASF8:
 2242 0046 6C6F6E67 		.ascii	"long long unsigned int\000"
 2242      206C6F6E 
 2242      6720756E 
 2242      7369676E 
 2242      65642069 
 2243              	.LASF7:
 2244 005d 6C6F6E67 		.ascii	"long long int\000"
 2244      206C6F6E 
 2244      6720696E 
 2244      7400
 2245              	.LASF1:
 2246 006b 7369676E 		.ascii	"signed char\000"
 2246      65642063 
 2246      68617200 
 2247              	.LASF15:
 2248 0077 696E7433 		.ascii	"int32\000"
 2248      3200
 2249              	.LASF5:
 2250 007d 6C6F6E67 		.ascii	"long int\000"
 2250      20696E74 
 2250      00
 2251              	.LASF21:
 2252 0086 72656731 		.ascii	"reg16\000"
 2252      3600
 2253              	.LASF11:
 2254 008c 75696E74 		.ascii	"uint8\000"
 2254      3800
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 56


 2255              	.LASF38:
 2256 0092 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_SetOffset\000"
 2256      5341525F 
 2256      5365715F 
 2256      325F5341 
 2256      525F5365 
 2257              	.LASF18:
 2258 00ae 646F7562 		.ascii	"double\000"
 2258      6C6500
 2259              	.LASF48:
 2260 00b5 636F756E 		.ascii	"countsPer10Volt\000"
 2260      74735065 
 2260      72313056 
 2260      6F6C7400 
 2261              	.LASF34:
 2262 00c5 7265744D 		.ascii	"retMode\000"
 2262      6F646500 
 2263              	.LASF0:
 2264 00cd 756E7369 		.ascii	"unsigned int\000"
 2264      676E6564 
 2264      20696E74 
 2264      00
 2265              	.LASF57:
 2266 00da 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_shift\000"
 2266      5341525F 
 2266      5365715F 
 2266      325F5341 
 2266      525F7368 
 2267              	.LASF50:
 2268 00f2 75566F6C 		.ascii	"uVolts\000"
 2268      747300
 2269              	.LASF49:
 2270 00f9 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_CountsTo_uVolts\000"
 2270      5341525F 
 2270      5365715F 
 2270      325F5341 
 2270      525F436F 
 2271              	.LASF6:
 2272 011b 6C6F6E67 		.ascii	"long unsigned int\000"
 2272      20756E73 
 2272      69676E65 
 2272      6420696E 
 2272      7400
 2273              	.LASF52:
 2274 012d 766F6C74 		.ascii	"volts\000"
 2274      7300
 2275              	.LASF4:
 2276 0133 73686F72 		.ascii	"short unsigned int\000"
 2276      7420756E 
 2276      7369676E 
 2276      65642069 
 2276      6E7400
 2277              	.LASF13:
 2278 0146 696E7438 		.ascii	"int8\000"
 2278      00
 2279              	.LASF44:
 2280 014b 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_SetScaledGain\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 57


 2280      5341525F 
 2280      5365715F 
 2280      325F5341 
 2280      525F5365 
 2281              	.LASF47:
 2282 016b 6D566F6C 		.ascii	"mVolts\000"
 2282      747300
 2283              	.LASF45:
 2284 0172 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_CountsTo_mVolts\000"
 2284      5341525F 
 2284      5365715F 
 2284      325F5341 
 2284      525F436F 
 2285              	.LASF16:
 2286 0194 666C6F61 		.ascii	"float32\000"
 2286      74333200 
 2287              	.LASF9:
 2288 019c 73697A65 		.ascii	"sizetype\000"
 2288      74797065 
 2288      00
 2289              	.LASF58:
 2290 01a5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2290      4320342E 
 2290      392E3320 
 2290      32303135 
 2290      30333033 
 2291 01d8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2291      20726576 
 2291      6973696F 
 2291      6E203232 
 2291      31323230 
 2292 020b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2292      66756E63 
 2292      74696F6E 
 2292      2D736563 
 2292      74696F6E 
 2293              	.LASF19:
 2294 0233 696E7436 		.ascii	"int64\000"
 2294      3400
 2295              	.LASF54:
 2296 0239 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_offset\000"
 2296      5341525F 
 2296      5365715F 
 2296      325F5341 
 2296      525F6F66 
 2297              	.LASF17:
 2298 0252 666C6F61 		.ascii	"float\000"
 2298      7400
 2299              	.LASF37:
 2300 0258 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_GetResult16\000"
 2300      5341525F 
 2300      5365715F 
 2300      325F5341 
 2300      525F4765 
 2301              	.LASF30:
 2302 0276 706F7765 		.ascii	"power\000"
 2302      7200
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 58


 2303              	.LASF27:
 2304 027c 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_Stop\000"
 2304      5341525F 
 2304      5365715F 
 2304      325F5341 
 2304      525F5374 
 2305              	.LASF20:
 2306 0293 72656738 		.ascii	"reg8\000"
 2306      00
 2307              	.LASF2:
 2308 0298 756E7369 		.ascii	"unsigned char\000"
 2308      676E6564 
 2308      20636861 
 2308      7200
 2309              	.LASF41:
 2310 02a6 64696666 		.ascii	"diff_zero\000"
 2310      5F7A6572 
 2310      6F00
 2311              	.LASF28:
 2312 02b0 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_SetPower\000"
 2312      5341525F 
 2312      5365715F 
 2312      325F5341 
 2312      525F5365 
 2313              	.LASF32:
 2314 02cb 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_StartConvert\000"
 2314      5341525F 
 2314      5365715F 
 2314      325F5341 
 2314      525F5374 
 2315              	.LASF3:
 2316 02ea 73686F72 		.ascii	"short int\000"
 2316      7420696E 
 2316      7400
 2317              	.LASF36:
 2318 02f4 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_IsEndConversion\000"
 2318      5341525F 
 2318      5365715F 
 2318      325F5341 
 2318      525F4973 
 2319              	.LASF61:
 2320 0316 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_GetResult8\000"
 2320      5341525F 
 2320      5365715F 
 2320      325F5341 
 2320      525F4765 
 2321              	.LASF59:
 2322 0333 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_Seq_2_SAR.c\000"
 2322      6E657261 
 2322      7465645F 
 2322      536F7572 
 2322      63655C50 
 2323              	.LASF33:
 2324 0360 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_StopConvert\000"
 2324      5341525F 
 2324      5365715F 
 2324      325F5341 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 59


 2324      525F5374 
 2325              	.LASF31:
 2326 037e 7265736F 		.ascii	"resolution\000"
 2326      6C757469 
 2326      6F6E00
 2327              	.LASF60:
 2328 0389 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\psoc-5lp\\5lp-rtu"
 2328      73657273 
 2328      5C676C65 
 2328      6E6E5C4F 
 2328      6E654472 
 2329 03b6 5C637572 		.ascii	"\\current_monitor\\USB_UART01.cydsn\000"
 2329      72656E74 
 2329      5F6D6F6E 
 2329      69746F72 
 2329      5C555342 
 2330              	.LASF10:
 2331 03d8 63686172 		.ascii	"char\000"
 2331      00
 2332              	.LASF56:
 2333 03dd 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_countsPer10Volt\000"
 2333      5341525F 
 2333      5365715F 
 2333      325F5341 
 2333      525F636F 
 2334              	.LASF62:
 2335 03ff 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_CalcGain\000"
 2335      5341525F 
 2335      5365715F 
 2335      325F5341 
 2335      525F4361 
 2336              	.LASF39:
 2337 041a 6F666673 		.ascii	"offset\000"
 2337      657400
 2338              	.LASF51:
 2339 0421 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_CountsTo_Volts\000"
 2339      5341525F 
 2339      5365715F 
 2339      325F5341 
 2339      525F436F 
 2340              	.LASF46:
 2341 0442 61646343 		.ascii	"adcCounts\000"
 2341      6F756E74 
 2341      7300
 2342              	.LASF29:
 2343 044c 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_SetResolution\000"
 2343      5341525F 
 2343      5365715F 
 2343      325F5341 
 2343      525F5365 
 2344              	.LASF25:
 2345 046c 656E6162 		.ascii	"enableInterrupts\000"
 2345      6C65496E 
 2345      74657272 
 2345      75707473 
 2345      00
 2346              	.LASF35:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cc0t9kJ2.s 			page 60


 2347 047d 73746174 		.ascii	"status\000"
 2347      757300
 2348              	.LASF42:
 2349 0484 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_SetGain\000"
 2349      5341525F 
 2349      5365715F 
 2349      325F5341 
 2349      525F5365 
 2350              	.LASF53:
 2351 049e 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_initVar\000"
 2351      5341525F 
 2351      5365715F 
 2351      325F5341 
 2351      525F696E 
 2352              	.LASF55:
 2353 04b8 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_countsPerVolt\000"
 2353      5341525F 
 2353      5365715F 
 2353      325F5341 
 2353      525F636F 
 2354              	.LASF14:
 2355 04d8 696E7431 		.ascii	"int16\000"
 2355      3600
 2356              	.LASF22:
 2357 04de 4144435F 		.ascii	"ADC_SAR_Seq_2_SAR_Start\000"
 2357      5341525F 
 2357      5365715F 
 2357      325F5341 
 2357      525F5374 
 2358              	.LASF24:
 2359 04f6 746D7052 		.ascii	"tmpReg\000"
 2359      656700
 2360              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
