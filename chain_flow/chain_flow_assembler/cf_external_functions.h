/*
**
** File: cf_external_functions.h
** This file is automatically generated by the
** chain flow assembler
** Build Time: 2016-10-12 17:45:46.158000  
**
*/

#ifndef _EXTERNAL_FUNCTIONS_H_
#define _EXTERNAL_FUNCTIONS_H_ 

#include <device.h>
#include "cf_chain_flow_support.h" 
#include "cf_events.h"
/*
This is the symbolic definitions of the chains
*/



#define  initialization   0
#define  second_tick_chain   1
#define  minute_tick_chain   2
#define  sequence_moisture_measurement   3
#define  measure_channel   4
#define  reset_log   5
#define  set_measurement_rate   6
#define  update_moisture_configuration_parameters   7
#define  update_reference_resistor   8
#define  update_temperature_parameters   9
#define  hour_tick_chain   10
#define  commissioning_heart_beat   11
#define  heart_beat   12
#define  handle_commissioning   13



/*
This is the symbolic definitions of the links for chain initialization
*/
#define  initialization_0   0
#define  initialization_1   1
#define  initialization_2   2
#define  initialization_3   3
#define  initialization_4   4
#define  initialization_5   5
#define  initialization_6   6
#define  initialization_7   7
#define  initialization_8   8
#define  initialization_9   9
#define  initialization_10   10
#define  initialization_11   11
#define  initialization_12   12
#define  initialization_13   13
#define  initialization_14   14
#define  initialization_15   15
#define  initialization_16   16



/*
This is the symbolic definitions of the links for chain second_tick_chain
*/
#define  second_tick_chain_0   0
#define  second_tick_chain_1   1
#define  second_tick_chain_2   2
#define  second_tick_chain_3   3
#define  second_tick_chain_4   4
#define  second_tick_chain_5   5
#define  second_tick_chain_6   6
#define  second_tick_chain_7   7
#define  second_tick_chain_8   8



/*
This is the symbolic definitions of the links for chain minute_tick_chain
*/
#define  minute_tick_chain_0   0
#define  minute_tick_chain_1   1
#define  minute_tick_chain_2   2
#define  minute_tick_chain_3   3



/*
This is the symbolic definitions of the links for chain sequence_moisture_measurement
*/
#define  sequence_moisture_measurement_0   0
#define  sequence_moisture_measurement_1   1
#define  sequence_moisture_measurement_2   2
#define  sequence_moisture_measurement_3   3
#define  sequence_moisture_measurement_4   4
#define  sequence_moisture_measurement_5   5
#define  sequence_moisture_measurement_6   6
#define  sequence_moisture_measurement_7   7
#define  sequence_moisture_measurement_8   8
#define  sequence_moisture_measurement_9   9
#define  sequence_moisture_measurement_10   10
#define  sequence_moisture_measurement_11   11
#define  sequence_moisture_measurement_12   12
#define  sequence_moisture_measurement_13   13
#define  sequence_moisture_measurement_14   14
#define  sequence_moisture_measurement_15   15
#define  sequence_moisture_measurement_16   16
#define  sequence_moisture_measurement_17   17
#define  sequence_moisture_measurement_18   18
#define  sequence_moisture_measurement_19   19
#define  sequence_moisture_measurement_20   20
#define  sequence_moisture_measurement_21   21
#define  sequence_moisture_measurement_22   22
#define  sequence_moisture_measurement_23   23
#define  sequence_moisture_measurement_24   24
#define  sequence_moisture_measurement_25   25
#define  sequence_moisture_measurement_26   26
#define  sequence_moisture_measurement_27   27
#define  sequence_moisture_measurement_28   28
#define  sequence_moisture_measurement_29   29
#define  sequence_moisture_measurement_30   30
#define  sequence_moisture_measurement_31   31
#define  sequence_moisture_measurement_32   32
#define  sequence_moisture_measurement_33   33
#define  sequence_moisture_measurement_34   34



/*
This is the symbolic definitions of the links for chain measure_channel
*/
#define  measure_channel_0   0
#define  measure_channel_1   1
#define  measure_channel_2   2
#define  measure_channel_3   3
#define  measure_channel_4   4
#define  measure_channel_5   5
#define  measure_channel_6   6
#define  measure_channel_7   7
#define  measure_channel_8   8
#define  measure_channel_9   9
#define  measure_channel_10   10
#define  measure_channel_11   11
#define  measure_channel_12   12
#define  measure_channel_13   13



/*
This is the symbolic definitions of the links for chain reset_log
*/
#define  reset_log_0   0
#define  reset_log_1   1
#define  reset_log_2   2



/*
This is the symbolic definitions of the links for chain set_measurement_rate
*/
#define  set_measurement_rate_0   0
#define  set_measurement_rate_1   1
#define  set_measurement_rate_2   2



/*
This is the symbolic definitions of the links for chain update_moisture_configuration_parameters
*/
#define  update_moisture_configuration_parameters_0   0
#define  update_moisture_configuration_parameters_1   1
#define  update_moisture_configuration_parameters_2   2



/*
This is the symbolic definitions of the links for chain update_reference_resistor
*/
#define  update_reference_resistor_0   0
#define  update_reference_resistor_1   1
#define  update_reference_resistor_2   2



/*
This is the symbolic definitions of the links for chain update_temperature_parameters
*/
#define  update_temperature_parameters_0   0
#define  update_temperature_parameters_1   1
#define  update_temperature_parameters_2   2



/*
This is the symbolic definitions of the links for chain hour_tick_chain
*/
#define  hour_tick_chain_0   0
#define  hour_tick_chain_1   1



/*
This is the symbolic definitions of the links for chain commissioning_heart_beat
*/
#define  commissioning_heart_beat_0   0
#define  commissioning_heart_beat_1   1
#define  commissioning_heart_beat_2   2
#define  commissioning_heart_beat_3   3



/*
This is the symbolic definitions of the links for chain heart_beat
*/
#define  heart_beat_0   0
#define  heart_beat_1   1
#define  heart_beat_2   2
#define  heart_beat_3   3



/*
This is the symbolic definitions of the links for chain handle_commissioning
*/
#define  handle_commissioning_0   0
#define  handle_commissioning_1   1
#define  handle_commissioning_2   2
#define  handle_commissioning_3   3
#define  handle_commissioning_4   4
#define  handle_commissioning_5   5
#define  handle_commissioning_6   6
#define  handle_commissioning_7   7
#define  handle_commissioning_8   8
#define  handle_commissioning_9   9
#define  handle_commissioning_10   10
#define  handle_commissioning_11   11



int make_source_measurement(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int enable_eeprom(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_up_moisture_interrupt(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_measurement_rate(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int init_moisture_processing(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_modbus_rtc_values(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_minute_rollover(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int store_moisture_data(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int  toggle_heart_beat(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int enable_interrupts(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_modbus_watch_dog_flag(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_temperature_configuration(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int meaure_die_temperature(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_source_channel(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_new_measurement_available(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int initialize_die_temp_measurement(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int check_logging_active_flag(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int remove_power(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_modbus_reset_flag(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int check_for_moisture_measurement(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int initialize_controller_wd_flag(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int check_moisture_active_flag(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int setup_soil_temperature_measurements(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int switch_on_fn(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int init_event_queue(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int init_rtc(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int reset_eeprom_log(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int switch_off_fn(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_sink_channel(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int store_default_resistor_calibration_values_to_modbus_registers(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_normal_modbus_address(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int pat_watch_dog(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int store_default_temperature_calibration_values_to_modbus_registers(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int setup_measurement_channel(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int start_watchdog(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int enable_timer_interrupt(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_soil_temperature_minute(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int measure_soil_temperature(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_reference_resistor_configuration(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int update_moisture_configuration(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int initialize_modbus_rtu(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);


int set_commissiong_address(unsigned link_id, unsigned param_1,
  unsigned param_2, unsigned param_3, unsigned event, unsigned data);






#endif
