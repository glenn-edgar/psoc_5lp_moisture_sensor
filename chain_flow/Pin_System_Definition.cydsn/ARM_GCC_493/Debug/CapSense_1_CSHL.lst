ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_1_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_1_rawFilterData1,2,4
  19              		.comm	CapSense_1_sensorBaseline,2,4
  20              		.comm	CapSense_1_sensorBaselineLow,1,4
  21              		.comm	CapSense_1_sensorSignal,2,4
  22              		.comm	CapSense_1_sensorOnMask,1,4
  23              		.comm	CapSense_1_lowBaselineResetCnt,1,4
  24              		.global	CapSense_1_fingerThreshold
  25              		.section	.rodata
  26              		.align	2
  27              		.type	CapSense_1_fingerThreshold, %object
  28              		.size	CapSense_1_fingerThreshold, 2
  29              	CapSense_1_fingerThreshold:
  30 0000 6400     		.short	100
  31              		.global	CapSense_1_noiseThreshold
  32 0002 0000     		.align	2
  33              		.type	CapSense_1_noiseThreshold, %object
  34              		.size	CapSense_1_noiseThreshold, 2
  35              	CapSense_1_noiseThreshold:
  36 0004 1400     		.short	20
  37              		.global	CapSense_1_hysteresis
  38 0006 0000     		.align	2
  39              		.type	CapSense_1_hysteresis, %object
  40              		.size	CapSense_1_hysteresis, 2
  41              	CapSense_1_hysteresis:
  42 0008 0A00     		.short	10
  43              		.global	CapSense_1_debounce
  44 000a 0000     		.align	2
  45              		.type	CapSense_1_debounce, %object
  46              		.size	CapSense_1_debounce, 1
  47              	CapSense_1_debounce:
  48 000c 05       		.byte	5
  49              		.global	CapSense_1_debounceCounter
  50              		.bss
  51              		.align	2
  52              		.type	CapSense_1_debounceCounter, %object
  53              		.size	CapSense_1_debounceCounter, 2
  54              	CapSense_1_debounceCounter:
  55 0000 0000     		.space	2
  56              		.global	CapSense_1_rawDataIndex
  57 0002 0000     		.section	.rodata
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 2


  58 000d 000000   		.align	2
  59              		.type	CapSense_1_rawDataIndex, %object
  60              		.size	CapSense_1_rawDataIndex, 1
  61              	CapSense_1_rawDataIndex:
  62 0010 00       		.space	1
  63              		.global	CapSense_1_numberOfSensors
  64 0011 000000   		.align	2
  65              		.type	CapSense_1_numberOfSensors, %object
  66              		.size	CapSense_1_numberOfSensors, 1
  67              	CapSense_1_numberOfSensors:
  68 0014 01       		.byte	1
  69 0015 000000   		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  70              		.align	2
  71              		.global	CapSense_1_BaseInit
  72              		.thumb
  73              		.thumb_func
  74              		.type	CapSense_1_BaseInit, %function
  75              	CapSense_1_BaseInit:
  76              	.LFB0:
  77              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 3


  38:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint16 CYCODE CapSense_1_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 
  50:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint16 CYCODE CapSense_1_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 
  54:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint16 CYCODE CapSense_1_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     10u, 
  58:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, 
  62:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  70:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  72:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  74:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  75:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  77:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  79:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  81:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  83:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  84:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  85:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
  86:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
  87:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
  88:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
  89:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
  90:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
  91:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
  92:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
  93:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
  94:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 4


  95:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  96:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
  97:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
  98:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  99:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  78              		.loc 1 122 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 16
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 85B0     		sub	sp, sp, #20
  87              		.cfi_def_cfa_offset 24
  88 0004 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
  90 0006 0346     		mov	r3, r0
  91 0008 FB71     		strb	r3, [r7, #7]
 123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
  92              		.loc 1 125 0
  93 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  94 000c 124A     		ldr	r2, .L2
  95 000e D35C     		ldrb	r3, [r2, r3]
  96 0010 FB73     		strb	r3, [r7, #15]
 126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 5


 133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
  97              		.loc 1 139 0
  98 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  99 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 100 0016 1149     		ldr	r1, .L2+4
 101 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 102 001c 104A     		ldr	r2, .L2+8
 103 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
 104              		.loc 1 140 0
 105 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 106 0024 0F4A     		ldr	r2, .L2+12
 107 0026 0021     		movs	r1, #0
 108 0028 D154     		strb	r1, [r2, r3]
 141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
 109              		.loc 1 141 0
 110 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 111 002c 0E4A     		ldr	r2, .L2+16
 112 002e 0021     		movs	r1, #0
 113 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
 114              		.loc 1 143 0
 115 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 116 0036 0521     		movs	r1, #5
 117 0038 0C4A     		ldr	r2, .L2+20
 118 003a D154     		strb	r1, [r2, r3]
 144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 119              		.loc 1 158 0
 120 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 121 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 122 0040 0649     		ldr	r1, .L2+4
 123 0042 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 124 0046 0A4A     		ldr	r2, .L2+24
 125 0048 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 6


 161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 126              		.loc 1 170 0
 127 004c 1437     		adds	r7, r7, #20
 128              		.cfi_def_cfa_offset 4
 129 004e BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0050 5DF8047B 		ldr	r7, [sp], #4
 133              		.cfi_restore 7
 134              		.cfi_def_cfa_offset 0
 135 0054 7047     		bx	lr
 136              	.L3:
 137 0056 00BF     		.align	2
 138              	.L2:
 139 0058 00000000 		.word	CapSense_1_widgetNumber
 140 005c 00000000 		.word	CapSense_1_sensorRaw
 141 0060 00000000 		.word	CapSense_1_sensorBaseline
 142 0064 00000000 		.word	CapSense_1_sensorBaselineLow
 143 0068 00000000 		.word	CapSense_1_sensorSignal
 144 006c 00000000 		.word	CapSense_1_debounceCounter
 145 0070 00000000 		.word	CapSense_1_rawFilterData1
 146              		.cfi_endproc
 147              	.LFE0:
 148              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
 149              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
 150              		.align	2
 151              		.global	CapSense_1_InitializeSensorBaseline
 152              		.thumb
 153              		.thumb_func
 154              		.type	CapSense_1_InitializeSensorBaseline, %function
 155              	CapSense_1_InitializeSensorBaseline:
 156              	.LFB1:
 171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 7


 187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 157              		.loc 1 196 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 8
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 80B5     		push	{r7, lr}
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 82B0     		sub	sp, sp, #8
 166              		.cfi_def_cfa_offset 16
 167 0004 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 169 0006 0346     		mov	r3, r0
 170 0008 FB71     		strb	r3, [r7, #7]
 197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
 171              		.loc 1 198 0
 172 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 173 000c 1846     		mov	r0, r3
 174 000e FFF7FEFF 		bl	CapSense_1_ScanSensor
 199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 175              		.loc 1 199 0
 176 0012 00BF     		nop
 177              	.L5:
 178              		.loc 1 199 0 is_stmt 0 discriminator 1
 179 0014 FFF7FEFF 		bl	CapSense_1_IsBusy
 180 0018 0346     		mov	r3, r0
 181 001a 002B     		cmp	r3, #0
 182 001c FAD1     		bne	.L5
 200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 183              		.loc 1 206 0 is_stmt 1
 184 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 185 0020 1846     		mov	r0, r3
 186 0022 FFF7FEFF 		bl	CapSense_1_BaseInit
 207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 8


 214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 187              		.loc 1 223 0
 188 0026 0837     		adds	r7, r7, #8
 189              		.cfi_def_cfa_offset 8
 190 0028 BD46     		mov	sp, r7
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 002a 80BD     		pop	{r7, pc}
 194              		.cfi_endproc
 195              	.LFE1:
 196              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 197              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 198              		.align	2
 199              		.global	CapSense_1_InitializeAllBaselines
 200              		.thumb
 201              		.thumb_func
 202              		.type	CapSense_1_InitializeAllBaselines, %function
 203              	CapSense_1_InitializeAllBaselines:
 204              	.LFB2:
 224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 205              		.loc 1 248 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 9


 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 217              		.loc 1 252 0
 218 0006 0023     		movs	r3, #0
 219 0008 FB71     		strb	r3, [r7, #7]
 220 000a 06E0     		b	.L7
 221              	.L8:
 253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 222              		.loc 1 254 0 discriminator 3
 223 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 000e 1846     		mov	r0, r3
 225 0010 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 226              		.loc 1 252 0 discriminator 3
 227 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 228 0016 0133     		adds	r3, r3, #1
 229 0018 FB71     		strb	r3, [r7, #7]
 230              	.L7:
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 231              		.loc 1 252 0 is_stmt 0 discriminator 1
 232 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 001c 002B     		cmp	r3, #0
 234 001e F5D0     		beq	.L8
 255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 235              		.loc 1 256 0 is_stmt 1
 236 0020 0837     		adds	r7, r7, #8
 237              		.cfi_def_cfa_offset 8
 238 0022 BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 0024 80BD     		pop	{r7, pc}
 242              		.cfi_endproc
 243              	.LFE2:
 244              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 245 0026 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 246              		.align	2
 247              		.global	CapSense_1_InitializeEnabledBaselines
 248              		.thumb
 249              		.thumb_func
 250              		.type	CapSense_1_InitializeEnabledBaselines, %function
 251              	CapSense_1_InitializeEnabledBaselines:
 252              	.LFB3:
 257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 10


 260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 253              		.loc 1 281 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 265              		.loc 1 286 0
 266 0006 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 267              		.loc 1 287 0
 268 000a 00BF     		nop
 269              	.L10:
 270              		.loc 1 287 0 is_stmt 0 discriminator 1
 271 000c FFF7FEFF 		bl	CapSense_1_IsBusy
 272 0010 0346     		mov	r3, r0
 273 0012 002B     		cmp	r3, #0
 274 0014 FAD1     		bne	.L10
 288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 275              		.loc 1 292 0 is_stmt 1
 276 0016 0023     		movs	r3, #0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 11


 277 0018 FB71     		strb	r3, [r7, #7]
 278 001a 1DE0     		b	.L11
 279              	.L13:
 293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 280              		.loc 1 294 0
 281 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 282 001e DB08     		lsrs	r3, r3, #3
 283 0020 BB71     		strb	r3, [r7, #6]
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 284              		.loc 1 295 0
 285 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 286 0024 03F00703 		and	r3, r3, #7
 287 0028 0122     		movs	r2, #1
 288 002a 02FA03F3 		lsl	r3, r2, r3
 289 002e 7B71     		strb	r3, [r7, #5]
 296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 290              		.loc 1 298 0
 291 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 292 0032 0C4A     		ldr	r2, .L14
 293 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 294 0036 7B79     		ldrb	r3, [r7, #5]
 295 0038 1340     		ands	r3, r3, r2
 296 003a DBB2     		uxtb	r3, r3
 297 003c 002B     		cmp	r3, #0
 298 003e 04D1     		bne	.L12
 299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 299              		.loc 1 300 0
 300 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 301 0042 094A     		ldr	r2, .L14+4
 302 0044 0021     		movs	r1, #0
 303 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 304              	.L12:
 301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 305              		.loc 1 304 0 discriminator 2
 306 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 307 004c 1846     		mov	r0, r3
 308 004e FFF7FEFF 		bl	CapSense_1_BaseInit
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 309              		.loc 1 292 0 discriminator 2
 310 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 311 0054 0133     		adds	r3, r3, #1
 312 0056 FB71     		strb	r3, [r7, #7]
 313              	.L11:
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 314              		.loc 1 292 0 is_stmt 0 discriminator 1
 315 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 316 005a 002B     		cmp	r3, #0
 317 005c DED0     		beq	.L13
 305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 12


 318              		.loc 1 306 0 is_stmt 1
 319 005e 0837     		adds	r7, r7, #8
 320              		.cfi_def_cfa_offset 8
 321 0060 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 0062 80BD     		pop	{r7, pc}
 325              	.L15:
 326              		.align	2
 327              	.L14:
 328 0064 00000000 		.word	CapSense_1_sensorEnableMask
 329 0068 00000000 		.word	CapSense_1_sensorRaw
 330              		.cfi_endproc
 331              	.LFE3:
 332              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 333              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 334              		.align	2
 335              		.global	CapSense_1_UpdateSensorBaseline
 336              		.thumb
 337              		.thumb_func
 338              		.type	CapSense_1_UpdateSensorBaseline, %function
 339              	CapSense_1_UpdateSensorBaseline:
 340              	.LFB4:
 307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 13


 341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 341              		.loc 1 348 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 24
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 86B0     		sub	sp, sp, #24
 350              		.cfi_def_cfa_offset 32
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 0346     		mov	r3, r0
 354 0008 FB71     		strb	r3, [r7, #7]
 349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 355              		.loc 1 352 0
 356 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 357 000c 4B4A     		ldr	r2, .L26
 358 000e D35C     		ldrb	r3, [r2, r3]
 359 0010 7B75     		strb	r3, [r7, #21]
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 noiseThreshold = CapSense_1_noiseThreshold[widget];
 360              		.loc 1 353 0
 361 0012 1423     		movs	r3, #20
 362 0014 7B82     		strh	r3, [r7, #18]	@ movhi
 354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 363              		.loc 1 361 0
 364 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 365 0018 494A     		ldr	r2, .L26+4
 366 001a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 367 001e 3B82     		strh	r3, [r7, #16]	@ movhi
 362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 14


 371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 368              		.loc 1 382 0
 369 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 370 0022 484A     		ldr	r2, .L26+8
 371 0024 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 372 0028 3A8A     		ldrh	r2, [r7, #16]
 373 002a 1046     		mov	r0, r2
 374 002c 1946     		mov	r1, r3
 375 002e FFF7FEFF 		bl	CapSense_1_IIR4Filter
 376 0032 0346     		mov	r3, r0
 377 0034 3B82     		strh	r3, [r7, #16]	@ movhi
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 378              		.loc 1 383 0
 379 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 380 0038 4249     		ldr	r1, .L26+8
 381 003a 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 382 003c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 383              		.loc 1 408 0
 384 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 0042 414A     		ldr	r2, .L26+12
 386 0044 32F81330 		ldrh	r3, [r2, r3, lsl #1]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 15


 387 0048 3A8A     		ldrh	r2, [r7, #16]
 388 004a 9A42     		cmp	r2, r3
 389 004c 09D3     		bcc	.L17
 409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 390              		.loc 1 410 0
 391 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 392 0050 3D4A     		ldr	r2, .L26+12
 393 0052 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 394 0056 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 395 0058 D31A     		subs	r3, r2, r3
 396 005a FB82     		strh	r3, [r7, #22]	@ movhi
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 397              		.loc 1 411 0
 398 005c 0123     		movs	r3, #1
 399 005e 7B75     		strb	r3, [r7, #21]
 400 0060 08E0     		b	.L18
 401              	.L17:
 412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 402              		.loc 1 415 0
 403 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 404 0064 384A     		ldr	r2, .L26+12
 405 0066 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 406 006a 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 407 006c D31A     		subs	r3, r2, r3
 408 006e FB82     		strh	r3, [r7, #22]	@ movhi
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 409              		.loc 1 416 0
 410 0070 0023     		movs	r3, #0
 411 0072 7B75     		strb	r3, [r7, #21]
 412              	.L18:
 417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 413              		.loc 1 419 0
 414 0074 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 415 0076 002B     		cmp	r3, #0
 416 0078 18D1     		bne	.L19
 417              		.loc 1 419 0 is_stmt 0 discriminator 1
 418 007a FB8A     		ldrh	r3, [r7, #22]
 419 007c 142B     		cmp	r3, #20
 420 007e 15D9     		bls	.L19
 420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 421              		.loc 1 421 0 is_stmt 1
 422 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 423 0082 324A     		ldr	r2, .L26+16
 424 0084 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 425 0086 042B     		cmp	r3, #4
 426 0088 08D9     		bls	.L20
 422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 427              		.loc 1 423 0
 428 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 16


 429 008c 1846     		mov	r0, r3
 430 008e FFF7FEFF 		bl	CapSense_1_BaseInit
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 431              		.loc 1 424 0
 432 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 0094 2D4A     		ldr	r2, .L26+16
 434 0096 0021     		movs	r1, #0
 435 0098 D154     		strb	r1, [r2, r3]
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 436              		.loc 1 421 0
 437 009a 3AE0     		b	.L22
 438              	.L20:
 425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 439              		.loc 1 428 0
 440 009c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 441 009e 2B4A     		ldr	r2, .L26+16
 442 00a0 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 443 00a2 0132     		adds	r2, r2, #1
 444 00a4 D1B2     		uxtb	r1, r2
 445 00a6 294A     		ldr	r2, .L26+16
 446 00a8 D154     		strb	r1, [r2, r3]
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 447              		.loc 1 421 0
 448 00aa 32E0     		b	.L22
 449              	.L19:
 429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 450              		.loc 1 435 0
 451 00ac FA8A     		ldrh	r2, [r7, #22]
 452 00ae 7B8A     		ldrh	r3, [r7, #18]
 453 00b0 9A42     		cmp	r2, r3
 454 00b2 05D9     		bls	.L23
 455              		.loc 1 435 0 is_stmt 0 discriminator 1
 456 00b4 FB8A     		ldrh	r3, [r7, #22]
 457 00b6 132B     		cmp	r3, #19
 458 00b8 2BD8     		bhi	.L22
 436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 459              		.loc 1 437 0 is_stmt 1
 460 00ba 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 461 00bc 002B     		cmp	r3, #0
 462 00be 28D1     		bne	.L22
 463              	.L23:
 438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 464              		.loc 1 441 0
 465 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 17


 466 00c2 214A     		ldr	r2, .L26+12
 467 00c4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 468 00c8 1B02     		lsls	r3, r3, #8
 469 00ca FB60     		str	r3, [r7, #12]
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 470              		.loc 1 442 0
 471 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 472 00ce 204A     		ldr	r2, .L26+20
 473 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 474 00d2 1A46     		mov	r2, r3
 475 00d4 FB68     		ldr	r3, [r7, #12]
 476 00d6 1343     		orrs	r3, r3, r2
 477 00d8 FB60     		str	r3, [r7, #12]
 443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 478              		.loc 1 445 0
 479 00da 3B8A     		ldrh	r3, [r7, #16]
 480 00dc FA68     		ldr	r2, [r7, #12]
 481 00de 1344     		add	r3, r3, r2
 482 00e0 FB60     		str	r3, [r7, #12]
 446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 483              		.loc 1 448 0
 484 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 485 00e4 184A     		ldr	r2, .L26+12
 486 00e6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 487 00ea 1A46     		mov	r2, r3
 488 00ec FB68     		ldr	r3, [r7, #12]
 489 00ee 9B1A     		subs	r3, r3, r2
 490 00f0 FB60     		str	r3, [r7, #12]
 449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 491              		.loc 1 451 0
 492 00f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 493 00f4 FA68     		ldr	r2, [r7, #12]
 494 00f6 120A     		lsrs	r2, r2, #8
 495 00f8 91B2     		uxth	r1, r2
 496 00fa 134A     		ldr	r2, .L26+12
 497 00fc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 498              		.loc 1 452 0
 499 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500 0102 FA68     		ldr	r2, [r7, #12]
 501 0104 D1B2     		uxtb	r1, r2
 502 0106 124A     		ldr	r2, .L26+20
 503 0108 D154     		strb	r1, [r2, r3]
 453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 504              		.loc 1 454 0
 505 010a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 506 010c 0F4A     		ldr	r2, .L26+16
 507 010e 0021     		movs	r1, #0
 508 0110 D154     		strb	r1, [r2, r3]
 509              	.L22:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 18


 455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 510              		.loc 1 461 0
 511 0112 FA8A     		ldrh	r2, [r7, #22]
 512 0114 7B8A     		ldrh	r3, [r7, #18]
 513 0116 9A42     		cmp	r2, r3
 514 0118 08D9     		bls	.L24
 515              		.loc 1 461 0 is_stmt 0 discriminator 1
 516 011a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 517 011c 002B     		cmp	r3, #0
 518 011e 05D0     		beq	.L24
 462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 519              		.loc 1 474 0 is_stmt 1
 520 0120 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 521 0122 0C49     		ldr	r1, .L26+24
 522 0124 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 523 0126 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 524 012a 04E0     		b	.L16
 525              	.L24:
 475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 526              		.loc 1 480 0
 527 012c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 528 012e 094A     		ldr	r2, .L26+24
 529 0130 0021     		movs	r1, #0
 530 0132 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 531              	.L16:
 481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 532              		.loc 1 487 0
 533 0136 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 19


 534              		.cfi_def_cfa_offset 8
 535 0138 BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 013a 80BD     		pop	{r7, pc}
 539              	.L27:
 540              		.align	2
 541              	.L26:
 542 013c 00000000 		.word	CapSense_1_widgetNumber
 543 0140 00000000 		.word	CapSense_1_sensorRaw
 544 0144 00000000 		.word	CapSense_1_rawFilterData1
 545 0148 00000000 		.word	CapSense_1_sensorBaseline
 546 014c 00000000 		.word	CapSense_1_lowBaselineResetCnt
 547 0150 00000000 		.word	CapSense_1_sensorBaselineLow
 548 0154 00000000 		.word	CapSense_1_sensorSignal
 549              		.cfi_endproc
 550              	.LFE4:
 551              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 552              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 553              		.align	2
 554              		.global	CapSense_1_UpdateEnabledBaselines
 555              		.thumb
 556              		.thumb_func
 557              		.type	CapSense_1_UpdateEnabledBaselines, %function
 558              	CapSense_1_UpdateEnabledBaselines:
 559              	.LFB5:
 488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 20


 519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 560              		.loc 1 521 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 8
 563              		@ frame_needed = 1, uses_anonymous_args = 0
 564 0000 80B5     		push	{r7, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 82B0     		sub	sp, sp, #8
 569              		.cfi_def_cfa_offset 16
 570 0004 00AF     		add	r7, sp, #0
 571              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 572              		.loc 1 526 0
 573 0006 0023     		movs	r3, #0
 574 0008 FB71     		strb	r3, [r7, #7]
 575 000a 18E0     		b	.L29
 576              	.L31:
 527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 577              		.loc 1 528 0
 578 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 579 000e DB08     		lsrs	r3, r3, #3
 580 0010 BB71     		strb	r3, [r7, #6]
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 581              		.loc 1 529 0
 582 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 583 0014 03F00703 		and	r3, r3, #7
 584 0018 0122     		movs	r2, #1
 585 001a 02FA03F3 		lsl	r3, r2, r3
 586 001e 7B71     		strb	r3, [r7, #5]
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 587              		.loc 1 530 0
 588 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 589 0022 0A4A     		ldr	r2, .L32
 590 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 591 0026 7B79     		ldrb	r3, [r7, #5]
 592 0028 1340     		ands	r3, r3, r2
 593 002a DBB2     		uxtb	r3, r3
 594 002c 002B     		cmp	r3, #0
 595 002e 03D0     		beq	.L30
 531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 596              		.loc 1 532 0
 597 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 598 0032 1846     		mov	r0, r3
 599 0034 FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 600              	.L30:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 601              		.loc 1 526 0 discriminator 2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 21


 602 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 603 003a 0133     		adds	r3, r3, #1
 604 003c FB71     		strb	r3, [r7, #7]
 605              	.L29:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 606              		.loc 1 526 0 is_stmt 0 discriminator 1
 607 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 608 0040 002B     		cmp	r3, #0
 609 0042 E3D0     		beq	.L31
 533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 610              		.loc 1 535 0 is_stmt 1
 611 0044 0837     		adds	r7, r7, #8
 612              		.cfi_def_cfa_offset 8
 613 0046 BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 0048 80BD     		pop	{r7, pc}
 617              	.L33:
 618 004a 00BF     		.align	2
 619              	.L32:
 620 004c 00000000 		.word	CapSense_1_sensorEnableMask
 621              		.cfi_endproc
 622              	.LFE5:
 623              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 624              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 625              		.align	2
 626              		.global	CapSense_1_CheckIsSensorActive
 627              		.thumb
 628              		.thumb_func
 629              		.type	CapSense_1_CheckIsSensorActive, %function
 630              	CapSense_1_CheckIsSensorActive:
 631              	.LFB6:
 536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 22


 559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 632              		.loc 1 579 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 24
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 87B0     		sub	sp, sp, #28
 641              		.cfi_def_cfa_offset 32
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 644 0006 0346     		mov	r3, r0
 645 0008 FB71     		strb	r3, [r7, #7]
 580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 646              		.loc 1 582 0
 647 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 648 000c DB08     		lsrs	r3, r3, #3
 649 000e FB75     		strb	r3, [r7, #23]
 583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 650              		.loc 1 583 0
 651 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 652 0012 03F00703 		and	r3, r3, #7
 653 0016 0122     		movs	r2, #1
 654 0018 02FA03F3 		lsl	r3, r2, r3
 655 001c BB75     		strb	r3, [r7, #22]
 584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 656              		.loc 1 585 0
 657 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 658 0020 304A     		ldr	r2, .L43
 659 0022 D35C     		ldrb	r3, [r2, r3]
 660 0024 7B75     		strb	r3, [r7, #21]
 586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 fingerThreshold = CapSense_1_fingerThreshold[widget];
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 23


 661              		.loc 1 586 0
 662 0026 6423     		movs	r3, #100
 663 0028 7B82     		strh	r3, [r7, #18]	@ movhi
 587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 hysteresis = CapSense_1_hysteresis[widget];
 664              		.loc 1 587 0
 665 002a 0A23     		movs	r3, #10
 666 002c 3B82     		strh	r3, [r7, #16]	@ movhi
 588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 667              		.loc 1 588 0
 668 002e 0523     		movs	r3, #5
 669 0030 FB73     		strb	r3, [r7, #15]
 589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = widget;
 670              		.loc 1 590 0
 671 0032 7B7D     		ldrb	r3, [r7, #21]
 672 0034 BB73     		strb	r3, [r7, #14]
 591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 673              		.loc 1 594 0
 674 0036 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 675 0038 2B4A     		ldr	r2, .L43+4
 676 003a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 677 003c BB7D     		ldrb	r3, [r7, #22]
 678 003e 1340     		ands	r3, r3, r2
 679 0040 DBB2     		uxtb	r3, r3
 680 0042 002B     		cmp	r3, #0
 681 0044 19D0     		beq	.L35
 595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 682              		.loc 1 597 0
 683 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 684 0048 284A     		ldr	r2, .L43+8
 685 004a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 686 004e 1946     		mov	r1, r3
 687 0050 7A8A     		ldrh	r2, [r7, #18]
 688 0052 3B8A     		ldrh	r3, [r7, #16]
 689 0054 D31A     		subs	r3, r2, r3
 690 0056 9942     		cmp	r1, r3
 691 0058 33DA     		bge	.L37
 598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 692              		.loc 1 599 0
 693 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 694 005c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 695 005e 2249     		ldr	r1, .L43+4
 696 0060 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 697 0062 BA7D     		ldrb	r2, [r7, #22]
 698 0064 D243     		mvns	r2, r2
 699 0066 D2B2     		uxtb	r2, r2
 700 0068 0A40     		ands	r2, r2, r1
 701 006a D1B2     		uxtb	r1, r2
 702 006c 1E4A     		ldr	r2, .L43+4
 703 006e D154     		strb	r1, [r2, r3]
 600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 24


 704              		.loc 1 600 0
 705 0070 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 706 0072 1F49     		ldr	r1, .L43+12
 707 0074 FA7B     		ldrb	r2, [r7, #15]
 708 0076 CA54     		strb	r2, [r1, r3]
 709 0078 23E0     		b	.L37
 710              	.L35:
 601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 711              		.loc 1 606 0
 712 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 713 007c 1B4A     		ldr	r2, .L43+8
 714 007e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 715 0082 1946     		mov	r1, r3
 716 0084 7A8A     		ldrh	r2, [r7, #18]
 717 0086 3B8A     		ldrh	r3, [r7, #16]
 718 0088 1344     		add	r3, r3, r2
 719 008a 9942     		cmp	r1, r3
 720 008c 15DD     		ble	.L38
 607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 721              		.loc 1 609 0
 722 008e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 723 0090 174A     		ldr	r2, .L43+12
 724 0092 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 725 0094 012B     		cmp	r3, #1
 726 0096 08D8     		bhi	.L39
 610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 727              		.loc 1 611 0
 728 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 729 009a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 730 009c 1249     		ldr	r1, .L43+4
 731 009e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 732 00a0 BA7D     		ldrb	r2, [r7, #22]
 733 00a2 0A43     		orrs	r2, r2, r1
 734 00a4 D1B2     		uxtb	r1, r2
 735 00a6 104A     		ldr	r2, .L43+4
 736 00a8 D154     		strb	r1, [r2, r3]
 737              	.L39:
 612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 738              		.loc 1 613 0
 739 00aa BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 740 00ac 104A     		ldr	r2, .L43+12
 741 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 742 00b0 013A     		subs	r2, r2, #1
 743 00b2 D1B2     		uxtb	r1, r2
 744 00b4 0E4A     		ldr	r2, .L43+12
 745 00b6 D154     		strb	r1, [r2, r3]
 746 00b8 03E0     		b	.L37
 747              	.L38:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 25


 614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 748              		.loc 1 618 0
 749 00ba BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 750 00bc 0C49     		ldr	r1, .L43+12
 751 00be FA7B     		ldrb	r2, [r7, #15]
 752 00c0 CA54     		strb	r2, [r1, r3]
 753              	.L37:
 619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 754              		.loc 1 622 0
 755 00c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 756 00c4 084A     		ldr	r2, .L43+4
 757 00c6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 758 00c8 BB7D     		ldrb	r3, [r7, #22]
 759 00ca 1340     		ands	r3, r3, r2
 760 00cc DBB2     		uxtb	r3, r3
 761 00ce 002B     		cmp	r3, #0
 762 00d0 01D0     		beq	.L40
 763              		.loc 1 622 0 is_stmt 0 discriminator 1
 764 00d2 0123     		movs	r3, #1
 765 00d4 00E0     		b	.L41
 766              	.L40:
 767              		.loc 1 622 0 discriminator 2
 768 00d6 0023     		movs	r3, #0
 769              	.L41:
 623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 770              		.loc 1 623 0 is_stmt 1 discriminator 4
 771 00d8 1846     		mov	r0, r3
 772 00da 1C37     		adds	r7, r7, #28
 773              		.cfi_def_cfa_offset 4
 774 00dc BD46     		mov	sp, r7
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 00de 5DF8047B 		ldr	r7, [sp], #4
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 00e2 7047     		bx	lr
 781              	.L44:
 782              		.align	2
 783              	.L43:
 784 00e4 00000000 		.word	CapSense_1_widgetNumber
 785 00e8 00000000 		.word	CapSense_1_sensorOnMask
 786 00ec 00000000 		.word	CapSense_1_sensorSignal
 787 00f0 00000000 		.word	CapSense_1_debounceCounter
 788              		.cfi_endproc
 789              	.LFE6:
 790              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 791              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 792              		.align	2
 793              		.global	CapSense_1_CheckIsWidgetActive
 794              		.thumb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 26


 795              		.thumb_func
 796              		.type	CapSense_1_CheckIsWidgetActive, %function
 797              	CapSense_1_CheckIsWidgetActive:
 798              	.LFB7:
 624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 799              		.loc 1 651 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 16
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 84B0     		sub	sp, sp, #16
 808              		.cfi_def_cfa_offset 24
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 0346     		mov	r3, r0
 812 0008 FB71     		strb	r3, [r7, #7]
 652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 813              		.loc 1 652 0
 814 000a 0023     		movs	r3, #0
 815 000c FB73     		strb	r3, [r7, #15]
 653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 816              		.loc 1 653 0
 817 000e 0122     		movs	r2, #1
 818 0010 FB7B     		ldrb	r3, [r7, #15]
 819 0012 1344     		add	r3, r3, r2
 820 0014 7B73     		strb	r3, [r7, #13]
 654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 27


 821              		.loc 1 654 0
 822 0016 0023     		movs	r3, #0
 823 0018 BB73     		strb	r3, [r7, #14]
 824              	.L47:
 655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 825              		.loc 1 659 0
 826 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 827 001c 1846     		mov	r0, r3
 828 001e FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 829 0022 0346     		mov	r3, r0
 830 0024 002B     		cmp	r3, #0
 831 0026 01D0     		beq	.L46
 660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 832              		.loc 1 661 0
 833 0028 0123     		movs	r3, #1
 834 002a BB73     		strb	r3, [r7, #14]
 835              	.L46:
 662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 836              		.loc 1 663 0
 837 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 838 002e 0133     		adds	r3, r3, #1
 839 0030 FB73     		strb	r3, [r7, #15]
 664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 840              		.loc 1 665 0
 841 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 842 0034 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 843 0036 9A42     		cmp	r2, r3
 844 0038 EFD3     		bcc	.L47
 666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 845              		.loc 1 669 0
 846 003a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 847              		.loc 1 670 0
 848 003c 1846     		mov	r0, r3
 849 003e 1037     		adds	r7, r7, #16
 850              		.cfi_def_cfa_offset 8
 851 0040 BD46     		mov	sp, r7
 852              		.cfi_def_cfa_register 13
 853              		@ sp needed
 854 0042 80BD     		pop	{r7, pc}
 855              		.cfi_endproc
 856              	.LFE7:
 857              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 858              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 859              		.align	2
 860              		.global	CapSense_1_CheckIsAnyWidgetActive
 861              		.thumb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 28


 862              		.thumb_func
 863              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 864              	CapSense_1_CheckIsAnyWidgetActive:
 865              	.LFB8:
 671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 866              		.loc 1 695 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 8
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 82B0     		sub	sp, sp, #8
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 878              		.loc 1 697 0
 879 0006 0023     		movs	r3, #0
 880 0008 BB71     		strb	r3, [r7, #6]
 698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 881              		.loc 1 699 0
 882 000a 0023     		movs	r3, #0
 883 000c FB71     		strb	r3, [r7, #7]
 884 000e 0BE0     		b	.L50
 885              	.L52:
 700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 886              		.loc 1 701 0
 887 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 29


 888 0012 1846     		mov	r0, r3
 889 0014 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 890 0018 0346     		mov	r3, r0
 891 001a 002B     		cmp	r3, #0
 892 001c 01D0     		beq	.L51
 702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 893              		.loc 1 703 0
 894 001e 0123     		movs	r3, #1
 895 0020 BB71     		strb	r3, [r7, #6]
 896              	.L51:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 897              		.loc 1 699 0 discriminator 2
 898 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 899 0024 0133     		adds	r3, r3, #1
 900 0026 FB71     		strb	r3, [r7, #7]
 901              	.L50:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 902              		.loc 1 699 0 is_stmt 0 discriminator 1
 903 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 904 002a 002B     		cmp	r3, #0
 905 002c F0D0     		beq	.L52
 704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 906              		.loc 1 708 0 is_stmt 1
 907 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 908              		.loc 1 709 0
 909 0030 1846     		mov	r0, r3
 910 0032 0837     		adds	r7, r7, #8
 911              		.cfi_def_cfa_offset 8
 912 0034 BD46     		mov	sp, r7
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 0036 80BD     		pop	{r7, pc}
 916              		.cfi_endproc
 917              	.LFE8:
 918              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 919              		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 920              		.align	2
 921              		.global	CapSense_1_EnableWidget
 922              		.thumb
 923              		.thumb_func
 924              		.type	CapSense_1_EnableWidget, %function
 925              	CapSense_1_EnableWidget:
 926              	.LFB9:
 710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 30


 718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 927              		.loc 1 741 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 16
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931              		@ link register save eliminated.
 932 0000 80B4     		push	{r7}
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 85B0     		sub	sp, sp, #20
 936              		.cfi_def_cfa_offset 24
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 0346     		mov	r3, r0
 940 0008 FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 941              		.loc 1 744 0
 942 000a 0023     		movs	r3, #0
 943 000c FB73     		strb	r3, [r7, #15]
 745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 944              		.loc 1 745 0
 945 000e 0122     		movs	r2, #1
 946 0010 FB7B     		ldrb	r3, [r7, #15]
 947 0012 1344     		add	r3, r3, r2
 948 0014 BB73     		strb	r3, [r7, #14]
 949              	.L55:
 746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 950              		.loc 1 750 0 discriminator 1
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 31


 951 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 952 0018 DB08     		lsrs	r3, r3, #3
 953 001a 7B73     		strb	r3, [r7, #13]
 751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 954              		.loc 1 751 0 discriminator 1
 955 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 956 001e 03F00703 		and	r3, r3, #7
 957 0022 0122     		movs	r2, #1
 958 0024 02FA03F3 		lsl	r3, r2, r3
 959 0028 3B73     		strb	r3, [r7, #12]
 752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 960              		.loc 1 753 0 discriminator 1
 961 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 962 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 963 002e 0949     		ldr	r1, .L56
 964 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 965 0032 3A7B     		ldrb	r2, [r7, #12]
 966 0034 0A43     		orrs	r2, r2, r1
 967 0036 D1B2     		uxtb	r1, r2
 968 0038 064A     		ldr	r2, .L56
 969 003a D154     		strb	r1, [r2, r3]
 754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 970              		.loc 1 754 0 discriminator 1
 971 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 972 003e 0133     		adds	r3, r3, #1
 973 0040 FB73     		strb	r3, [r7, #15]
 755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 974              		.loc 1 756 0 discriminator 1
 975 0042 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 976 0044 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 977 0046 9A42     		cmp	r2, r3
 978 0048 E5D3     		bcc	.L55
 757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 979              		.loc 1 759 0
 980 004a 1437     		adds	r7, r7, #20
 981              		.cfi_def_cfa_offset 4
 982 004c BD46     		mov	sp, r7
 983              		.cfi_def_cfa_register 13
 984              		@ sp needed
 985 004e 5DF8047B 		ldr	r7, [sp], #4
 986              		.cfi_restore 7
 987              		.cfi_def_cfa_offset 0
 988 0052 7047     		bx	lr
 989              	.L57:
 990              		.align	2
 991              	.L56:
 992 0054 00000000 		.word	CapSense_1_sensorEnableMask
 993              		.cfi_endproc
 994              	.LFE9:
 995              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 996              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 997              		.align	2
 998              		.global	CapSense_1_DisableWidget
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 32


 999              		.thumb
 1000              		.thumb_func
 1001              		.type	CapSense_1_DisableWidget, %function
 1002              	CapSense_1_DisableWidget:
 1003              	.LFB10:
 760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 1004              		.loc 1 791 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 16
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 1009 0000 80B4     		push	{r7}
 1010              		.cfi_def_cfa_offset 4
 1011              		.cfi_offset 7, -4
 1012 0002 85B0     		sub	sp, sp, #20
 1013              		.cfi_def_cfa_offset 24
 1014 0004 00AF     		add	r7, sp, #0
 1015              		.cfi_def_cfa_register 7
 1016 0006 0346     		mov	r3, r0
 1017 0008 FB71     		strb	r3, [r7, #7]
 792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1018              		.loc 1 794 0
 1019 000a 0023     		movs	r3, #0
 1020 000c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 33


 795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1021              		.loc 1 795 0
 1022 000e 0122     		movs	r2, #1
 1023 0010 FB7B     		ldrb	r3, [r7, #15]
 1024 0012 1344     		add	r3, r3, r2
 1025 0014 BB73     		strb	r3, [r7, #14]
 1026              	.L59:
 796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 1027              		.loc 1 800 0 discriminator 1
 1028 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1029 0018 DB08     		lsrs	r3, r3, #3
 1030 001a 7B73     		strb	r3, [r7, #13]
 801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1031              		.loc 1 801 0 discriminator 1
 1032 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1033 001e 03F00703 		and	r3, r3, #7
 1034 0022 0122     		movs	r2, #1
 1035 0024 02FA03F3 		lsl	r3, r2, r3
 1036 0028 3B73     		strb	r3, [r7, #12]
 802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 1037              		.loc 1 803 0 discriminator 1
 1038 002a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1039 002c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1040 002e 0A49     		ldr	r1, .L60
 1041 0030 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1042 0032 3A7B     		ldrb	r2, [r7, #12]
 1043 0034 D243     		mvns	r2, r2
 1044 0036 D2B2     		uxtb	r2, r2
 1045 0038 0A40     		ands	r2, r2, r1
 1046 003a D1B2     		uxtb	r1, r2
 1047 003c 064A     		ldr	r2, .L60
 1048 003e D154     		strb	r1, [r2, r3]
 804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 1049              		.loc 1 804 0 discriminator 1
 1050 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1051 0042 0133     		adds	r3, r3, #1
 1052 0044 FB73     		strb	r3, [r7, #15]
 805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 1053              		.loc 1 806 0 discriminator 1
 1054 0046 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1055 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1056 004a 9A42     		cmp	r2, r3
 1057 004c E3D3     		bcc	.L59
 807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1058              		.loc 1 809 0
 1059 004e 1437     		adds	r7, r7, #20
 1060              		.cfi_def_cfa_offset 4
 1061 0050 BD46     		mov	sp, r7
 1062              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 34


 1063              		@ sp needed
 1064 0052 5DF8047B 		ldr	r7, [sp], #4
 1065              		.cfi_restore 7
 1066              		.cfi_def_cfa_offset 0
 1067 0056 7047     		bx	lr
 1068              	.L61:
 1069              		.align	2
 1070              	.L60:
 1071 0058 00000000 		.word	CapSense_1_sensorEnableMask
 1072              		.cfi_endproc
 1073              	.LFE10:
 1074              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 1075              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 1076              		.align	2
 1077              		.global	CapSense_1_IIR4Filter
 1078              		.thumb
 1079              		.thumb_func
 1080              		.type	CapSense_1_IIR4Filter, %function
 1081              	CapSense_1_IIR4Filter:
 1082              	.LFB11:
 810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8
 837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 35


 847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 temp = 0u;
 855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 36


 904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 37


 961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 975:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 976:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 977:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 978:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 979:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 980:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 982:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 983:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 984:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 985:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 986:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 987:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 988:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
 989:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 990:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 991:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
 992:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
 993:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 994:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 995:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
 996:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
 997:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
 998:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 999:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1000:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1001:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1002:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1003:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1004:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1005:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1006:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1007:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1008:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1009:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint16 CapSense_1_centroid[3u];
1010:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1011:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1012:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1013:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1014:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 *startOfSlider = &CapSense_1_sensorSignal[offset];
1015:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1016:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1017:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 38


1018:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1019:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1020:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1021:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1022:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1023:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1024:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1025:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1026:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1027:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1028:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1029:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1030:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1031:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1032:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1033:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1034:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1035:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1036:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1037:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1038:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1039:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1040:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1041:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1042:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1043:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1044:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1045:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1046:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1047:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1048:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1049:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1050:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1051:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1052:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1053:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1054:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1055:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1056:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1057:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1058:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1059:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1060:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1061:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1062:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1063:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1064:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1065:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1066:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1067:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1068:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1069:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1070:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1071:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1072:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1074:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 39


1075:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1076:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
1078:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1079:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1080:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1081:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1082:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1083:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1084:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1085:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1086:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1087:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1088:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1089:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1090:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1091:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1092:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1093:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1094:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1095:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1096:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1097:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1098:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1099:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 40


1132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
1136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
1139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
1160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 41


1189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 42


1246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 43


1303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 44


1360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 45


1417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 46


1474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 47


1531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 48


1588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 49


1645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 50


1702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 51


1759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 52


1816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 53


1873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 54


1930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1083              		.loc 1 1936 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 16
 1086              		@ frame_needed = 1, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088 0000 80B4     		push	{r7}
 1089              		.cfi_def_cfa_offset 4
 1090              		.cfi_offset 7, -4
 1091 0002 85B0     		sub	sp, sp, #20
 1092              		.cfi_def_cfa_offset 24
 1093 0004 00AF     		add	r7, sp, #0
 1094              		.cfi_def_cfa_register 7
 1095 0006 0346     		mov	r3, r0
 1096 0008 0A46     		mov	r2, r1
 1097 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1098 000c 1346     		mov	r3, r2	@ movhi
 1099 000e BB80     		strh	r3, [r7, #4]	@ movhi
1937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1100              		.loc 1 1940 0
 1101 0010 FA88     		ldrh	r2, [r7, #6]
 1102 0012 BB88     		ldrh	r3, [r7, #4]
 1103 0014 1344     		add	r3, r3, r2
 1104 0016 FB60     		str	r3, [r7, #12]
1941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1105              		.loc 1 1941 0
 1106 0018 BB88     		ldrh	r3, [r7, #4]
 1107 001a 5B00     		lsls	r3, r3, #1
 1108 001c FA68     		ldr	r2, [r7, #12]
 1109 001e 1344     		add	r3, r3, r2
 1110 0020 FB60     		str	r3, [r7, #12]
1942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
 1111              		.loc 1 1942 0
 1112 0022 FB68     		ldr	r3, [r7, #12]
 1113 0024 9B08     		lsrs	r3, r3, #2
 1114 0026 FB60     		str	r3, [r7, #12]
1943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
 1115              		.loc 1 1944 0
 1116 0028 FB68     		ldr	r3, [r7, #12]
 1117 002a 9BB2     		uxth	r3, r3
1945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 1118              		.loc 1 1945 0
 1119 002c 1846     		mov	r0, r3
 1120 002e 1437     		adds	r7, r7, #20
 1121              		.cfi_def_cfa_offset 4
 1122 0030 BD46     		mov	sp, r7
 1123              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 55


 1124              		@ sp needed
 1125 0032 5DF8047B 		ldr	r7, [sp], #4
 1126              		.cfi_restore 7
 1127              		.cfi_def_cfa_offset 0
 1128 0036 7047     		bx	lr
 1129              		.cfi_endproc
 1130              	.LFE11:
 1131              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 1132              		.text
 1133              	.Letext0:
 1134              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1135              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_1.h"
 1136              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 1137              		.section	.debug_info,"",%progbits
 1138              	.Ldebug_info0:
 1139 0000 94050000 		.4byte	0x594
 1140 0004 0400     		.2byte	0x4
 1141 0006 00000000 		.4byte	.Ldebug_abbrev0
 1142 000a 04       		.byte	0x4
 1143 000b 01       		.uleb128 0x1
 1144 000c C5020000 		.4byte	.LASF59
 1145 0010 01       		.byte	0x1
 1146 0011 56010000 		.4byte	.LASF60
 1147 0015 69040000 		.4byte	.LASF61
 1148 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1149 001d 00000000 		.4byte	0
 1150 0021 00000000 		.4byte	.Ldebug_line0
 1151 0025 02       		.uleb128 0x2
 1152 0026 01       		.byte	0x1
 1153 0027 06       		.byte	0x6
 1154 0028 FC000000 		.4byte	.LASF0
 1155 002c 02       		.uleb128 0x2
 1156 002d 01       		.byte	0x1
 1157 002e 08       		.byte	0x8
 1158 002f EE030000 		.4byte	.LASF1
 1159 0033 02       		.uleb128 0x2
 1160 0034 02       		.byte	0x2
 1161 0035 05       		.byte	0x5
 1162 0036 31040000 		.4byte	.LASF2
 1163 003a 02       		.uleb128 0x2
 1164 003b 02       		.byte	0x2
 1165 003c 07       		.byte	0x7
 1166 003d FB010000 		.4byte	.LASF3
 1167 0041 02       		.uleb128 0x2
 1168 0042 04       		.byte	0x4
 1169 0043 05       		.byte	0x5
 1170 0044 27010000 		.4byte	.LASF4
 1171 0048 02       		.uleb128 0x2
 1172 0049 04       		.byte	0x4
 1173 004a 07       		.byte	0x7
 1174 004b E9010000 		.4byte	.LASF5
 1175 004f 02       		.uleb128 0x2
 1176 0050 08       		.byte	0x8
 1177 0051 05       		.byte	0x5
 1178 0052 EE000000 		.4byte	.LASF6
 1179 0056 02       		.uleb128 0x2
 1180 0057 08       		.byte	0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 56


 1181 0058 07       		.byte	0x7
 1182 0059 5D000000 		.4byte	.LASF7
 1183 005d 03       		.uleb128 0x3
 1184 005e 04       		.byte	0x4
 1185 005f 05       		.byte	0x5
 1186 0060 696E7400 		.ascii	"int\000"
 1187 0064 02       		.uleb128 0x2
 1188 0065 04       		.byte	0x4
 1189 0066 07       		.byte	0x7
 1190 0067 DC010000 		.4byte	.LASF8
 1191 006b 04       		.uleb128 0x4
 1192 006c 49010000 		.4byte	.LASF9
 1193 0070 02       		.byte	0x2
 1194 0071 3801     		.2byte	0x138
 1195 0073 2C000000 		.4byte	0x2c
 1196 0077 04       		.uleb128 0x4
 1197 0078 00000000 		.4byte	.LASF10
 1198 007c 02       		.byte	0x2
 1199 007d 3901     		.2byte	0x139
 1200 007f 3A000000 		.4byte	0x3a
 1201 0083 04       		.uleb128 0x4
 1202 0084 81010000 		.4byte	.LASF11
 1203 0088 02       		.byte	0x2
 1204 0089 3A01     		.2byte	0x13a
 1205 008b 48000000 		.4byte	0x48
 1206 008f 02       		.uleb128 0x2
 1207 0090 04       		.byte	0x4
 1208 0091 04       		.byte	0x4
 1209 0092 75030000 		.4byte	.LASF12
 1210 0096 02       		.uleb128 0x2
 1211 0097 08       		.byte	0x8
 1212 0098 04       		.byte	0x4
 1213 0099 4F010000 		.4byte	.LASF13
 1214 009d 02       		.uleb128 0x2
 1215 009e 01       		.byte	0x1
 1216 009f 08       		.byte	0x8
 1217 00a0 DB040000 		.4byte	.LASF14
 1218 00a4 02       		.uleb128 0x2
 1219 00a5 04       		.byte	0x4
 1220 00a6 07       		.byte	0x7
 1221 00a7 61020000 		.4byte	.LASF15
 1222 00ab 05       		.uleb128 0x5
 1223 00ac 49000000 		.4byte	.LASF16
 1224 00b0 01       		.byte	0x1
 1225 00b1 79       		.byte	0x79
 1226 00b2 00000000 		.4byte	.LFB0
 1227 00b6 74000000 		.4byte	.LFE0-.LFB0
 1228 00ba 01       		.uleb128 0x1
 1229 00bb 9C       		.byte	0x9c
 1230 00bc DD000000 		.4byte	0xdd
 1231 00c0 06       		.uleb128 0x6
 1232 00c1 0E020000 		.4byte	.LASF18
 1233 00c5 01       		.byte	0x1
 1234 00c6 79       		.byte	0x79
 1235 00c7 6B000000 		.4byte	0x6b
 1236 00cb 02       		.uleb128 0x2
 1237 00cc 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 57


 1238 00cd 6F       		.sleb128 -17
 1239 00ce 07       		.uleb128 0x7
 1240 00cf 3B040000 		.4byte	.LASF20
 1241 00d3 01       		.byte	0x1
 1242 00d4 7D       		.byte	0x7d
 1243 00d5 6B000000 		.4byte	0x6b
 1244 00d9 02       		.uleb128 0x2
 1245 00da 91       		.byte	0x91
 1246 00db 77       		.sleb128 -9
 1247 00dc 00       		.byte	0
 1248 00dd 08       		.uleb128 0x8
 1249 00de A1020000 		.4byte	.LASF17
 1250 00e2 01       		.byte	0x1
 1251 00e3 C2       		.byte	0xc2
 1252 00e4 00000000 		.4byte	.LFB1
 1253 00e8 2C000000 		.4byte	.LFE1-.LFB1
 1254 00ec 01       		.uleb128 0x1
 1255 00ed 9C       		.byte	0x9c
 1256 00ee 01010000 		.4byte	0x101
 1257 00f2 06       		.uleb128 0x6
 1258 00f3 0E020000 		.4byte	.LASF18
 1259 00f7 01       		.byte	0x1
 1260 00f8 C2       		.byte	0xc2
 1261 00f9 6B000000 		.4byte	0x6b
 1262 00fd 02       		.uleb128 0x2
 1263 00fe 91       		.byte	0x91
 1264 00ff 77       		.sleb128 -9
 1265 0100 00       		.byte	0
 1266 0101 08       		.uleb128 0x8
 1267 0102 27000000 		.4byte	.LASF19
 1268 0106 01       		.byte	0x1
 1269 0107 F6       		.byte	0xf6
 1270 0108 00000000 		.4byte	.LFB2
 1271 010c 26000000 		.4byte	.LFE2-.LFB2
 1272 0110 01       		.uleb128 0x1
 1273 0111 9C       		.byte	0x9c
 1274 0112 23010000 		.4byte	0x123
 1275 0116 09       		.uleb128 0x9
 1276 0117 6900     		.ascii	"i\000"
 1277 0119 01       		.byte	0x1
 1278 011a F9       		.byte	0xf9
 1279 011b 6B000000 		.4byte	0x6b
 1280 011f 02       		.uleb128 0x2
 1281 0120 91       		.byte	0x91
 1282 0121 77       		.sleb128 -9
 1283 0122 00       		.byte	0
 1284 0123 0A       		.uleb128 0xa
 1285 0124 FC030000 		.4byte	.LASF21
 1286 0128 01       		.byte	0x1
 1287 0129 1701     		.2byte	0x117
 1288 012b 00000000 		.4byte	.LFB3
 1289 012f 6C000000 		.4byte	.LFE3-.LFB3
 1290 0133 01       		.uleb128 0x1
 1291 0134 9C       		.byte	0x9c
 1292 0135 65010000 		.4byte	0x165
 1293 0139 0B       		.uleb128 0xb
 1294 013a 6900     		.ascii	"i\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 58


 1295 013c 01       		.byte	0x1
 1296 013d 1A01     		.2byte	0x11a
 1297 013f 6B000000 		.4byte	0x6b
 1298 0143 02       		.uleb128 0x2
 1299 0144 91       		.byte	0x91
 1300 0145 77       		.sleb128 -9
 1301 0146 0B       		.uleb128 0xb
 1302 0147 706F7300 		.ascii	"pos\000"
 1303 014b 01       		.byte	0x1
 1304 014c 1B01     		.2byte	0x11b
 1305 014e 6B000000 		.4byte	0x6b
 1306 0152 02       		.uleb128 0x2
 1307 0153 91       		.byte	0x91
 1308 0154 76       		.sleb128 -10
 1309 0155 0C       		.uleb128 0xc
 1310 0156 5A020000 		.4byte	.LASF22
 1311 015a 01       		.byte	0x1
 1312 015b 1C01     		.2byte	0x11c
 1313 015d 6B000000 		.4byte	0x6b
 1314 0161 02       		.uleb128 0x2
 1315 0162 91       		.byte	0x91
 1316 0163 75       		.sleb128 -11
 1317 0164 00       		.byte	0
 1318 0165 0A       		.uleb128 0xa
 1319 0166 49040000 		.4byte	.LASF23
 1320 016a 01       		.byte	0x1
 1321 016b 5A01     		.2byte	0x15a
 1322 016d 00000000 		.4byte	.LFB4
 1323 0171 58010000 		.4byte	.LFE4-.LFB4
 1324 0175 01       		.uleb128 0x1
 1325 0176 9C       		.byte	0x9c
 1326 0177 D6010000 		.4byte	0x1d6
 1327 017b 0D       		.uleb128 0xd
 1328 017c 0E020000 		.4byte	.LASF18
 1329 0180 01       		.byte	0x1
 1330 0181 5A01     		.2byte	0x15a
 1331 0183 6B000000 		.4byte	0x6b
 1332 0187 02       		.uleb128 0x2
 1333 0188 91       		.byte	0x91
 1334 0189 67       		.sleb128 -25
 1335 018a 0C       		.uleb128 0xc
 1336 018b 30020000 		.4byte	.LASF24
 1337 018f 01       		.byte	0x1
 1338 0190 5D01     		.2byte	0x15d
 1339 0192 83000000 		.4byte	0x83
 1340 0196 02       		.uleb128 0x2
 1341 0197 91       		.byte	0x91
 1342 0198 6C       		.sleb128 -20
 1343 0199 0C       		.uleb128 0xc
 1344 019a 3B050000 		.4byte	.LASF25
 1345 019e 01       		.byte	0x1
 1346 019f 5E01     		.2byte	0x15e
 1347 01a1 77000000 		.4byte	0x77
 1348 01a5 02       		.uleb128 0x2
 1349 01a6 91       		.byte	0x91
 1350 01a7 76       		.sleb128 -10
 1351 01a8 0C       		.uleb128 0xc
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 59


 1352 01a9 07000000 		.4byte	.LASF26
 1353 01ad 01       		.byte	0x1
 1354 01ae 5F01     		.2byte	0x15f
 1355 01b0 77000000 		.4byte	0x77
 1356 01b4 02       		.uleb128 0x2
 1357 01b5 91       		.byte	0x91
 1358 01b6 70       		.sleb128 -16
 1359 01b7 0C       		.uleb128 0xc
 1360 01b8 3B040000 		.4byte	.LASF20
 1361 01bc 01       		.byte	0x1
 1362 01bd 6001     		.2byte	0x160
 1363 01bf 6B000000 		.4byte	0x6b
 1364 01c3 02       		.uleb128 0x2
 1365 01c4 91       		.byte	0x91
 1366 01c5 75       		.sleb128 -11
 1367 01c6 0C       		.uleb128 0xc
 1368 01c7 22040000 		.4byte	.LASF27
 1369 01cb 01       		.byte	0x1
 1370 01cc 6101     		.2byte	0x161
 1371 01ce 77000000 		.4byte	0x77
 1372 01d2 02       		.uleb128 0x2
 1373 01d3 91       		.byte	0x91
 1374 01d4 72       		.sleb128 -14
 1375 01d5 00       		.byte	0
 1376 01d6 0A       		.uleb128 0xa
 1377 01d7 53030000 		.4byte	.LASF28
 1378 01db 01       		.byte	0x1
 1379 01dc 0702     		.2byte	0x207
 1380 01de 00000000 		.4byte	.LFB5
 1381 01e2 50000000 		.4byte	.LFE5-.LFB5
 1382 01e6 01       		.uleb128 0x1
 1383 01e7 9C       		.byte	0x9c
 1384 01e8 18020000 		.4byte	0x218
 1385 01ec 0B       		.uleb128 0xb
 1386 01ed 6900     		.ascii	"i\000"
 1387 01ef 01       		.byte	0x1
 1388 01f0 0A02     		.2byte	0x20a
 1389 01f2 6B000000 		.4byte	0x6b
 1390 01f6 02       		.uleb128 0x2
 1391 01f7 91       		.byte	0x91
 1392 01f8 77       		.sleb128 -9
 1393 01f9 0B       		.uleb128 0xb
 1394 01fa 706F7300 		.ascii	"pos\000"
 1395 01fe 01       		.byte	0x1
 1396 01ff 0B02     		.2byte	0x20b
 1397 0201 6B000000 		.4byte	0x6b
 1398 0205 02       		.uleb128 0x2
 1399 0206 91       		.byte	0x91
 1400 0207 76       		.sleb128 -10
 1401 0208 0C       		.uleb128 0xc
 1402 0209 5A020000 		.4byte	.LASF22
 1403 020d 01       		.byte	0x1
 1404 020e 0C02     		.2byte	0x20c
 1405 0210 6B000000 		.4byte	0x6b
 1406 0214 02       		.uleb128 0x2
 1407 0215 91       		.byte	0x91
 1408 0216 75       		.sleb128 -11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 60


 1409 0217 00       		.byte	0
 1410 0218 0E       		.uleb128 0xe
 1411 0219 AD030000 		.4byte	.LASF34
 1412 021d 01       		.byte	0x1
 1413 021e 4102     		.2byte	0x241
 1414 0220 6B000000 		.4byte	0x6b
 1415 0224 00000000 		.4byte	.LFB6
 1416 0228 F4000000 		.4byte	.LFE6-.LFB6
 1417 022c 01       		.uleb128 0x1
 1418 022d 9C       		.byte	0x9c
 1419 022e AB020000 		.4byte	0x2ab
 1420 0232 0D       		.uleb128 0xd
 1421 0233 0E020000 		.4byte	.LASF18
 1422 0237 01       		.byte	0x1
 1423 0238 4102     		.2byte	0x241
 1424 023a 6B000000 		.4byte	0x6b
 1425 023e 02       		.uleb128 0x2
 1426 023f 91       		.byte	0x91
 1427 0240 67       		.sleb128 -25
 1428 0241 0C       		.uleb128 0xc
 1429 0242 FD040000 		.4byte	.LASF29
 1430 0246 01       		.byte	0x1
 1431 0247 4402     		.2byte	0x244
 1432 0249 6B000000 		.4byte	0x6b
 1433 024d 02       		.uleb128 0x2
 1434 024e 91       		.byte	0x91
 1435 024f 6E       		.sleb128 -18
 1436 0250 0B       		.uleb128 0xb
 1437 0251 706F7300 		.ascii	"pos\000"
 1438 0255 01       		.byte	0x1
 1439 0256 4602     		.2byte	0x246
 1440 0258 6B000000 		.4byte	0x6b
 1441 025c 02       		.uleb128 0x2
 1442 025d 91       		.byte	0x91
 1443 025e 77       		.sleb128 -9
 1444 025f 0C       		.uleb128 0xc
 1445 0260 42040000 		.4byte	.LASF30
 1446 0264 01       		.byte	0x1
 1447 0265 4702     		.2byte	0x247
 1448 0267 6B000000 		.4byte	0x6b
 1449 026b 02       		.uleb128 0x2
 1450 026c 91       		.byte	0x91
 1451 026d 76       		.sleb128 -10
 1452 026e 0C       		.uleb128 0xc
 1453 026f 3B040000 		.4byte	.LASF20
 1454 0273 01       		.byte	0x1
 1455 0274 4902     		.2byte	0x249
 1456 0276 6B000000 		.4byte	0x6b
 1457 027a 02       		.uleb128 0x2
 1458 027b 91       		.byte	0x91
 1459 027c 75       		.sleb128 -11
 1460 027d 0C       		.uleb128 0xc
 1461 027e 17000000 		.4byte	.LASF31
 1462 0282 01       		.byte	0x1
 1463 0283 4A02     		.2byte	0x24a
 1464 0285 77000000 		.4byte	0x77
 1465 0289 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 61


 1466 028a 91       		.byte	0x91
 1467 028b 72       		.sleb128 -14
 1468 028c 0C       		.uleb128 0xc
 1469 028d 88010000 		.4byte	.LASF32
 1470 0291 01       		.byte	0x1
 1471 0292 4B02     		.2byte	0x24b
 1472 0294 77000000 		.4byte	0x77
 1473 0298 02       		.uleb128 0x2
 1474 0299 91       		.byte	0x91
 1475 029a 70       		.sleb128 -16
 1476 029b 0C       		.uleb128 0xc
 1477 029c 51020000 		.4byte	.LASF33
 1478 02a0 01       		.byte	0x1
 1479 02a1 4C02     		.2byte	0x24c
 1480 02a3 6B000000 		.4byte	0x6b
 1481 02a7 02       		.uleb128 0x2
 1482 02a8 91       		.byte	0x91
 1483 02a9 6F       		.sleb128 -17
 1484 02aa 00       		.byte	0
 1485 02ab 0F       		.uleb128 0xf
 1486 02ac 8C000000 		.4byte	.LASF35
 1487 02b0 01       		.byte	0x1
 1488 02b1 8902     		.2byte	0x289
 1489 02b3 6B000000 		.4byte	0x6b
 1490 02b7 00000000 		.4byte	.LFB7
 1491 02bb 44000000 		.4byte	.LFE7-.LFB7
 1492 02bf 01       		.uleb128 0x1
 1493 02c0 9C       		.byte	0x9c
 1494 02c1 02030000 		.4byte	0x302
 1495 02c5 0D       		.uleb128 0xd
 1496 02c6 3B040000 		.4byte	.LASF20
 1497 02ca 01       		.byte	0x1
 1498 02cb 8902     		.2byte	0x289
 1499 02cd 6B000000 		.4byte	0x6b
 1500 02d1 02       		.uleb128 0x2
 1501 02d2 91       		.byte	0x91
 1502 02d3 6F       		.sleb128 -17
 1503 02d4 0C       		.uleb128 0xc
 1504 02d5 08010000 		.4byte	.LASF36
 1505 02d9 01       		.byte	0x1
 1506 02da 8C02     		.2byte	0x28c
 1507 02dc 6B000000 		.4byte	0x6b
 1508 02e0 02       		.uleb128 0x2
 1509 02e1 91       		.byte	0x91
 1510 02e2 77       		.sleb128 -9
 1511 02e3 0C       		.uleb128 0xc
 1512 02e4 11010000 		.4byte	.LASF37
 1513 02e8 01       		.byte	0x1
 1514 02e9 8D02     		.2byte	0x28d
 1515 02eb 6B000000 		.4byte	0x6b
 1516 02ef 02       		.uleb128 0x2
 1517 02f0 91       		.byte	0x91
 1518 02f1 75       		.sleb128 -11
 1519 02f2 0C       		.uleb128 0xc
 1520 02f3 21010000 		.4byte	.LASF38
 1521 02f7 01       		.byte	0x1
 1522 02f8 8E02     		.2byte	0x28e
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 62


 1523 02fa 6B000000 		.4byte	0x6b
 1524 02fe 02       		.uleb128 0x2
 1525 02ff 91       		.byte	0x91
 1526 0300 76       		.sleb128 -10
 1527 0301 00       		.byte	0
 1528 0302 0F       		.uleb128 0xf
 1529 0303 CC030000 		.4byte	.LASF39
 1530 0307 01       		.byte	0x1
 1531 0308 B502     		.2byte	0x2b5
 1532 030a 6B000000 		.4byte	0x6b
 1533 030e 00000000 		.4byte	.LFB8
 1534 0312 38000000 		.4byte	.LFE8-.LFB8
 1535 0316 01       		.uleb128 0x1
 1536 0317 9C       		.byte	0x9c
 1537 0318 39030000 		.4byte	0x339
 1538 031c 0B       		.uleb128 0xb
 1539 031d 6900     		.ascii	"i\000"
 1540 031f 01       		.byte	0x1
 1541 0320 B802     		.2byte	0x2b8
 1542 0322 6B000000 		.4byte	0x6b
 1543 0326 02       		.uleb128 0x2
 1544 0327 91       		.byte	0x91
 1545 0328 77       		.sleb128 -9
 1546 0329 0C       		.uleb128 0xc
 1547 032a 21010000 		.4byte	.LASF38
 1548 032e 01       		.byte	0x1
 1549 032f B902     		.2byte	0x2b9
 1550 0331 6B000000 		.4byte	0x6b
 1551 0335 02       		.uleb128 0x2
 1552 0336 91       		.byte	0x91
 1553 0337 76       		.sleb128 -10
 1554 0338 00       		.byte	0
 1555 0339 10       		.uleb128 0x10
 1556 033a 74000000 		.4byte	.LASF40
 1557 033e 01       		.byte	0x1
 1558 033f E302     		.2byte	0x2e3
 1559 0341 00000000 		.4byte	.LFB9
 1560 0345 58000000 		.4byte	.LFE9-.LFB9
 1561 0349 01       		.uleb128 0x1
 1562 034a 9C       		.byte	0x9c
 1563 034b 9B030000 		.4byte	0x39b
 1564 034f 0D       		.uleb128 0xd
 1565 0350 3B040000 		.4byte	.LASF20
 1566 0354 01       		.byte	0x1
 1567 0355 E302     		.2byte	0x2e3
 1568 0357 6B000000 		.4byte	0x6b
 1569 035b 02       		.uleb128 0x2
 1570 035c 91       		.byte	0x91
 1571 035d 6F       		.sleb128 -17
 1572 035e 0B       		.uleb128 0xb
 1573 035f 706F7300 		.ascii	"pos\000"
 1574 0363 01       		.byte	0x1
 1575 0364 E602     		.2byte	0x2e6
 1576 0366 6B000000 		.4byte	0x6b
 1577 036a 02       		.uleb128 0x2
 1578 036b 91       		.byte	0x91
 1579 036c 75       		.sleb128 -11
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 63


 1580 036d 0C       		.uleb128 0xc
 1581 036e 5A020000 		.4byte	.LASF22
 1582 0372 01       		.byte	0x1
 1583 0373 E702     		.2byte	0x2e7
 1584 0375 6B000000 		.4byte	0x6b
 1585 0379 02       		.uleb128 0x2
 1586 037a 91       		.byte	0x91
 1587 037b 74       		.sleb128 -12
 1588 037c 0C       		.uleb128 0xc
 1589 037d 08010000 		.4byte	.LASF36
 1590 0381 01       		.byte	0x1
 1591 0382 E802     		.2byte	0x2e8
 1592 0384 6B000000 		.4byte	0x6b
 1593 0388 02       		.uleb128 0x2
 1594 0389 91       		.byte	0x91
 1595 038a 77       		.sleb128 -9
 1596 038b 0C       		.uleb128 0xc
 1597 038c 11010000 		.4byte	.LASF37
 1598 0390 01       		.byte	0x1
 1599 0391 E902     		.2byte	0x2e9
 1600 0393 6B000000 		.4byte	0x6b
 1601 0397 02       		.uleb128 0x2
 1602 0398 91       		.byte	0x91
 1603 0399 76       		.sleb128 -10
 1604 039a 00       		.byte	0
 1605 039b 10       		.uleb128 0x10
 1606 039c 30010000 		.4byte	.LASF41
 1607 03a0 01       		.byte	0x1
 1608 03a1 1503     		.2byte	0x315
 1609 03a3 00000000 		.4byte	.LFB10
 1610 03a7 5C000000 		.4byte	.LFE10-.LFB10
 1611 03ab 01       		.uleb128 0x1
 1612 03ac 9C       		.byte	0x9c
 1613 03ad FD030000 		.4byte	0x3fd
 1614 03b1 0D       		.uleb128 0xd
 1615 03b2 3B040000 		.4byte	.LASF20
 1616 03b6 01       		.byte	0x1
 1617 03b7 1503     		.2byte	0x315
 1618 03b9 6B000000 		.4byte	0x6b
 1619 03bd 02       		.uleb128 0x2
 1620 03be 91       		.byte	0x91
 1621 03bf 6F       		.sleb128 -17
 1622 03c0 0B       		.uleb128 0xb
 1623 03c1 706F7300 		.ascii	"pos\000"
 1624 03c5 01       		.byte	0x1
 1625 03c6 1803     		.2byte	0x318
 1626 03c8 6B000000 		.4byte	0x6b
 1627 03cc 02       		.uleb128 0x2
 1628 03cd 91       		.byte	0x91
 1629 03ce 75       		.sleb128 -11
 1630 03cf 0C       		.uleb128 0xc
 1631 03d0 5A020000 		.4byte	.LASF22
 1632 03d4 01       		.byte	0x1
 1633 03d5 1903     		.2byte	0x319
 1634 03d7 6B000000 		.4byte	0x6b
 1635 03db 02       		.uleb128 0x2
 1636 03dc 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 64


 1637 03dd 74       		.sleb128 -12
 1638 03de 0C       		.uleb128 0xc
 1639 03df 08010000 		.4byte	.LASF36
 1640 03e3 01       		.byte	0x1
 1641 03e4 1A03     		.2byte	0x31a
 1642 03e6 6B000000 		.4byte	0x6b
 1643 03ea 02       		.uleb128 0x2
 1644 03eb 91       		.byte	0x91
 1645 03ec 77       		.sleb128 -9
 1646 03ed 0C       		.uleb128 0xc
 1647 03ee 11010000 		.4byte	.LASF37
 1648 03f2 01       		.byte	0x1
 1649 03f3 1B03     		.2byte	0x31b
 1650 03f5 6B000000 		.4byte	0x6b
 1651 03f9 02       		.uleb128 0x2
 1652 03fa 91       		.byte	0x91
 1653 03fb 76       		.sleb128 -10
 1654 03fc 00       		.byte	0
 1655 03fd 0E       		.uleb128 0xe
 1656 03fe 25050000 		.4byte	.LASF42
 1657 0402 01       		.byte	0x1
 1658 0403 8E07     		.2byte	0x78e
 1659 0405 77000000 		.4byte	0x77
 1660 0409 00000000 		.4byte	.LFB11
 1661 040d 38000000 		.4byte	.LFE11-.LFB11
 1662 0411 01       		.uleb128 0x1
 1663 0412 9C       		.byte	0x9c
 1664 0413 43040000 		.4byte	0x443
 1665 0417 11       		.uleb128 0x11
 1666 0418 783100   		.ascii	"x1\000"
 1667 041b 01       		.byte	0x1
 1668 041c 8E07     		.2byte	0x78e
 1669 041e 77000000 		.4byte	0x77
 1670 0422 02       		.uleb128 0x2
 1671 0423 91       		.byte	0x91
 1672 0424 6E       		.sleb128 -18
 1673 0425 11       		.uleb128 0x11
 1674 0426 783200   		.ascii	"x2\000"
 1675 0429 01       		.byte	0x1
 1676 042a 8E07     		.2byte	0x78e
 1677 042c 77000000 		.4byte	0x77
 1678 0430 02       		.uleb128 0x2
 1679 0431 91       		.byte	0x91
 1680 0432 6C       		.sleb128 -20
 1681 0433 0B       		.uleb128 0xb
 1682 0434 746D7000 		.ascii	"tmp\000"
 1683 0438 01       		.byte	0x1
 1684 0439 9107     		.2byte	0x791
 1685 043b 83000000 		.4byte	0x83
 1686 043f 02       		.uleb128 0x2
 1687 0440 91       		.byte	0x91
 1688 0441 74       		.sleb128 -12
 1689 0442 00       		.byte	0
 1690 0443 12       		.uleb128 0x12
 1691 0444 77000000 		.4byte	0x77
 1692 0448 53040000 		.4byte	0x453
 1693 044c 13       		.uleb128 0x13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 65


 1694 044d A4000000 		.4byte	0xa4
 1695 0451 00       		.byte	0
 1696 0452 00       		.byte	0
 1697 0453 14       		.uleb128 0x14
 1698 0454 D9000000 		.4byte	.LASF43
 1699 0458 03       		.byte	0x3
 1700 0459 B902     		.2byte	0x2b9
 1701 045b 43040000 		.4byte	0x443
 1702 045f 15       		.uleb128 0x15
 1703 0460 93030000 		.4byte	.LASF44
 1704 0464 01       		.byte	0x1
 1705 0465 21       		.byte	0x21
 1706 0466 43040000 		.4byte	0x443
 1707 046a 05       		.uleb128 0x5
 1708 046b 03       		.byte	0x3
 1709 046c 00000000 		.4byte	CapSense_1_rawFilterData1
 1710 0470 12       		.uleb128 0x12
 1711 0471 6B000000 		.4byte	0x6b
 1712 0475 80040000 		.4byte	0x480
 1713 0479 13       		.uleb128 0x13
 1714 047a A4000000 		.4byte	0xa4
 1715 047e 00       		.byte	0
 1716 047f 00       		.byte	0
 1717 0480 14       		.uleb128 0x14
 1718 0481 35020000 		.4byte	.LASF45
 1719 0485 04       		.byte	0x4
 1720 0486 0301     		.2byte	0x103
 1721 0488 70040000 		.4byte	0x470
 1722 048c 14       		.uleb128 0x14
 1723 048d 89020000 		.4byte	.LASF46
 1724 0491 04       		.byte	0x4
 1725 0492 0401     		.2byte	0x104
 1726 0494 98040000 		.4byte	0x498
 1727 0498 16       		.uleb128 0x16
 1728 0499 70040000 		.4byte	0x470
 1729 049d 15       		.uleb128 0x15
 1730 049e 0B050000 		.4byte	.LASF47
 1731 04a2 01       		.byte	0x1
 1732 04a3 29       		.byte	0x29
 1733 04a4 43040000 		.4byte	0x443
 1734 04a8 05       		.uleb128 0x5
 1735 04a9 03       		.byte	0x3
 1736 04aa 00000000 		.4byte	CapSense_1_sensorBaseline
 1737 04ae 15       		.uleb128 0x15
 1738 04af E0040000 		.4byte	.LASF48
 1739 04b3 01       		.byte	0x1
 1740 04b4 2A       		.byte	0x2a
 1741 04b5 70040000 		.4byte	0x470
 1742 04b9 05       		.uleb128 0x5
 1743 04ba 03       		.byte	0x3
 1744 04bb 00000000 		.4byte	CapSense_1_sensorBaselineLow
 1745 04bf 15       		.uleb128 0x15
 1746 04c0 A8040000 		.4byte	.LASF49
 1747 04c4 01       		.byte	0x1
 1748 04c5 2B       		.byte	0x2b
 1749 04c6 43040000 		.4byte	0x443
 1750 04ca 05       		.uleb128 0x5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 66


 1751 04cb 03       		.byte	0x3
 1752 04cc 00000000 		.4byte	CapSense_1_sensorSignal
 1753 04d0 15       		.uleb128 0x15
 1754 04d1 7B030000 		.4byte	.LASF50
 1755 04d5 01       		.byte	0x1
 1756 04d6 2C       		.byte	0x2c
 1757 04d7 70040000 		.4byte	0x470
 1758 04db 05       		.uleb128 0x5
 1759 04dc 03       		.byte	0x3
 1760 04dd 00000000 		.4byte	CapSense_1_sensorOnMask
 1761 04e1 15       		.uleb128 0x15
 1762 04e2 6A020000 		.4byte	.LASF51
 1763 04e6 01       		.byte	0x1
 1764 04e7 2E       		.byte	0x2e
 1765 04e8 70040000 		.4byte	0x470
 1766 04ec 05       		.uleb128 0x5
 1767 04ed 03       		.byte	0x3
 1768 04ee 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 1769 04f2 15       		.uleb128 0x15
 1770 04f3 C1010000 		.4byte	.LASF52
 1771 04f7 01       		.byte	0x1
 1772 04f8 30       		.byte	0x30
 1773 04f9 03050000 		.4byte	0x503
 1774 04fd 05       		.uleb128 0x5
 1775 04fe 03       		.byte	0x3
 1776 04ff 00000000 		.4byte	CapSense_1_fingerThreshold
 1777 0503 16       		.uleb128 0x16
 1778 0504 43040000 		.4byte	0x443
 1779 0508 15       		.uleb128 0x15
 1780 0509 AB000000 		.4byte	.LASF53
 1781 050d 01       		.byte	0x1
 1782 050e 34       		.byte	0x34
 1783 050f 19050000 		.4byte	0x519
 1784 0513 05       		.uleb128 0x5
 1785 0514 03       		.byte	0x3
 1786 0515 00000000 		.4byte	CapSense_1_noiseThreshold
 1787 0519 16       		.uleb128 0x16
 1788 051a 43040000 		.4byte	0x443
 1789 051e 15       		.uleb128 0x15
 1790 051f 93010000 		.4byte	.LASF54
 1791 0523 01       		.byte	0x1
 1792 0524 38       		.byte	0x38
 1793 0525 2F050000 		.4byte	0x52f
 1794 0529 05       		.uleb128 0x5
 1795 052a 03       		.byte	0x3
 1796 052b 00000000 		.4byte	CapSense_1_hysteresis
 1797 052f 16       		.uleb128 0x16
 1798 0530 43040000 		.4byte	0x443
 1799 0534 15       		.uleb128 0x15
 1800 0535 C5000000 		.4byte	.LASF55
 1801 0539 01       		.byte	0x1
 1802 053a 3C       		.byte	0x3c
 1803 053b 45050000 		.4byte	0x545
 1804 053f 05       		.uleb128 0x5
 1805 0540 03       		.byte	0x3
 1806 0541 00000000 		.4byte	CapSense_1_debounce
 1807 0545 16       		.uleb128 0x16
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 67


 1808 0546 70040000 		.4byte	0x470
 1809 054a 12       		.uleb128 0x12
 1810 054b 6B000000 		.4byte	0x6b
 1811 054f 5A050000 		.4byte	0x55a
 1812 0553 13       		.uleb128 0x13
 1813 0554 A4000000 		.4byte	0xa4
 1814 0558 01       		.byte	0x1
 1815 0559 00       		.byte	0
 1816 055a 15       		.uleb128 0x15
 1817 055b C0040000 		.4byte	.LASF56
 1818 055f 01       		.byte	0x1
 1819 0560 40       		.byte	0x40
 1820 0561 4A050000 		.4byte	0x54a
 1821 0565 05       		.uleb128 0x5
 1822 0566 03       		.byte	0x3
 1823 0567 00000000 		.4byte	CapSense_1_debounceCounter
 1824 056b 15       		.uleb128 0x15
 1825 056c A9010000 		.4byte	.LASF57
 1826 0570 01       		.byte	0x1
 1827 0571 44       		.byte	0x44
 1828 0572 7C050000 		.4byte	0x57c
 1829 0576 05       		.uleb128 0x5
 1830 0577 03       		.byte	0x3
 1831 0578 00000000 		.4byte	CapSense_1_rawDataIndex
 1832 057c 16       		.uleb128 0x16
 1833 057d 70040000 		.4byte	0x470
 1834 0581 15       		.uleb128 0x15
 1835 0582 15020000 		.4byte	.LASF58
 1836 0586 01       		.byte	0x1
 1837 0587 49       		.byte	0x49
 1838 0588 92050000 		.4byte	0x592
 1839 058c 05       		.uleb128 0x5
 1840 058d 03       		.byte	0x3
 1841 058e 00000000 		.4byte	CapSense_1_numberOfSensors
 1842 0592 16       		.uleb128 0x16
 1843 0593 70040000 		.4byte	0x470
 1844 0597 00       		.byte	0
 1845              		.section	.debug_abbrev,"",%progbits
 1846              	.Ldebug_abbrev0:
 1847 0000 01       		.uleb128 0x1
 1848 0001 11       		.uleb128 0x11
 1849 0002 01       		.byte	0x1
 1850 0003 25       		.uleb128 0x25
 1851 0004 0E       		.uleb128 0xe
 1852 0005 13       		.uleb128 0x13
 1853 0006 0B       		.uleb128 0xb
 1854 0007 03       		.uleb128 0x3
 1855 0008 0E       		.uleb128 0xe
 1856 0009 1B       		.uleb128 0x1b
 1857 000a 0E       		.uleb128 0xe
 1858 000b 55       		.uleb128 0x55
 1859 000c 17       		.uleb128 0x17
 1860 000d 11       		.uleb128 0x11
 1861 000e 01       		.uleb128 0x1
 1862 000f 10       		.uleb128 0x10
 1863 0010 17       		.uleb128 0x17
 1864 0011 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 68


 1865 0012 00       		.byte	0
 1866 0013 02       		.uleb128 0x2
 1867 0014 24       		.uleb128 0x24
 1868 0015 00       		.byte	0
 1869 0016 0B       		.uleb128 0xb
 1870 0017 0B       		.uleb128 0xb
 1871 0018 3E       		.uleb128 0x3e
 1872 0019 0B       		.uleb128 0xb
 1873 001a 03       		.uleb128 0x3
 1874 001b 0E       		.uleb128 0xe
 1875 001c 00       		.byte	0
 1876 001d 00       		.byte	0
 1877 001e 03       		.uleb128 0x3
 1878 001f 24       		.uleb128 0x24
 1879 0020 00       		.byte	0
 1880 0021 0B       		.uleb128 0xb
 1881 0022 0B       		.uleb128 0xb
 1882 0023 3E       		.uleb128 0x3e
 1883 0024 0B       		.uleb128 0xb
 1884 0025 03       		.uleb128 0x3
 1885 0026 08       		.uleb128 0x8
 1886 0027 00       		.byte	0
 1887 0028 00       		.byte	0
 1888 0029 04       		.uleb128 0x4
 1889 002a 16       		.uleb128 0x16
 1890 002b 00       		.byte	0
 1891 002c 03       		.uleb128 0x3
 1892 002d 0E       		.uleb128 0xe
 1893 002e 3A       		.uleb128 0x3a
 1894 002f 0B       		.uleb128 0xb
 1895 0030 3B       		.uleb128 0x3b
 1896 0031 05       		.uleb128 0x5
 1897 0032 49       		.uleb128 0x49
 1898 0033 13       		.uleb128 0x13
 1899 0034 00       		.byte	0
 1900 0035 00       		.byte	0
 1901 0036 05       		.uleb128 0x5
 1902 0037 2E       		.uleb128 0x2e
 1903 0038 01       		.byte	0x1
 1904 0039 3F       		.uleb128 0x3f
 1905 003a 19       		.uleb128 0x19
 1906 003b 03       		.uleb128 0x3
 1907 003c 0E       		.uleb128 0xe
 1908 003d 3A       		.uleb128 0x3a
 1909 003e 0B       		.uleb128 0xb
 1910 003f 3B       		.uleb128 0x3b
 1911 0040 0B       		.uleb128 0xb
 1912 0041 27       		.uleb128 0x27
 1913 0042 19       		.uleb128 0x19
 1914 0043 11       		.uleb128 0x11
 1915 0044 01       		.uleb128 0x1
 1916 0045 12       		.uleb128 0x12
 1917 0046 06       		.uleb128 0x6
 1918 0047 40       		.uleb128 0x40
 1919 0048 18       		.uleb128 0x18
 1920 0049 9742     		.uleb128 0x2117
 1921 004b 19       		.uleb128 0x19
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 69


 1922 004c 01       		.uleb128 0x1
 1923 004d 13       		.uleb128 0x13
 1924 004e 00       		.byte	0
 1925 004f 00       		.byte	0
 1926 0050 06       		.uleb128 0x6
 1927 0051 05       		.uleb128 0x5
 1928 0052 00       		.byte	0
 1929 0053 03       		.uleb128 0x3
 1930 0054 0E       		.uleb128 0xe
 1931 0055 3A       		.uleb128 0x3a
 1932 0056 0B       		.uleb128 0xb
 1933 0057 3B       		.uleb128 0x3b
 1934 0058 0B       		.uleb128 0xb
 1935 0059 49       		.uleb128 0x49
 1936 005a 13       		.uleb128 0x13
 1937 005b 02       		.uleb128 0x2
 1938 005c 18       		.uleb128 0x18
 1939 005d 00       		.byte	0
 1940 005e 00       		.byte	0
 1941 005f 07       		.uleb128 0x7
 1942 0060 34       		.uleb128 0x34
 1943 0061 00       		.byte	0
 1944 0062 03       		.uleb128 0x3
 1945 0063 0E       		.uleb128 0xe
 1946 0064 3A       		.uleb128 0x3a
 1947 0065 0B       		.uleb128 0xb
 1948 0066 3B       		.uleb128 0x3b
 1949 0067 0B       		.uleb128 0xb
 1950 0068 49       		.uleb128 0x49
 1951 0069 13       		.uleb128 0x13
 1952 006a 02       		.uleb128 0x2
 1953 006b 18       		.uleb128 0x18
 1954 006c 00       		.byte	0
 1955 006d 00       		.byte	0
 1956 006e 08       		.uleb128 0x8
 1957 006f 2E       		.uleb128 0x2e
 1958 0070 01       		.byte	0x1
 1959 0071 3F       		.uleb128 0x3f
 1960 0072 19       		.uleb128 0x19
 1961 0073 03       		.uleb128 0x3
 1962 0074 0E       		.uleb128 0xe
 1963 0075 3A       		.uleb128 0x3a
 1964 0076 0B       		.uleb128 0xb
 1965 0077 3B       		.uleb128 0x3b
 1966 0078 0B       		.uleb128 0xb
 1967 0079 27       		.uleb128 0x27
 1968 007a 19       		.uleb128 0x19
 1969 007b 11       		.uleb128 0x11
 1970 007c 01       		.uleb128 0x1
 1971 007d 12       		.uleb128 0x12
 1972 007e 06       		.uleb128 0x6
 1973 007f 40       		.uleb128 0x40
 1974 0080 18       		.uleb128 0x18
 1975 0081 9642     		.uleb128 0x2116
 1976 0083 19       		.uleb128 0x19
 1977 0084 01       		.uleb128 0x1
 1978 0085 13       		.uleb128 0x13
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 70


 1979 0086 00       		.byte	0
 1980 0087 00       		.byte	0
 1981 0088 09       		.uleb128 0x9
 1982 0089 34       		.uleb128 0x34
 1983 008a 00       		.byte	0
 1984 008b 03       		.uleb128 0x3
 1985 008c 08       		.uleb128 0x8
 1986 008d 3A       		.uleb128 0x3a
 1987 008e 0B       		.uleb128 0xb
 1988 008f 3B       		.uleb128 0x3b
 1989 0090 0B       		.uleb128 0xb
 1990 0091 49       		.uleb128 0x49
 1991 0092 13       		.uleb128 0x13
 1992 0093 02       		.uleb128 0x2
 1993 0094 18       		.uleb128 0x18
 1994 0095 00       		.byte	0
 1995 0096 00       		.byte	0
 1996 0097 0A       		.uleb128 0xa
 1997 0098 2E       		.uleb128 0x2e
 1998 0099 01       		.byte	0x1
 1999 009a 3F       		.uleb128 0x3f
 2000 009b 19       		.uleb128 0x19
 2001 009c 03       		.uleb128 0x3
 2002 009d 0E       		.uleb128 0xe
 2003 009e 3A       		.uleb128 0x3a
 2004 009f 0B       		.uleb128 0xb
 2005 00a0 3B       		.uleb128 0x3b
 2006 00a1 05       		.uleb128 0x5
 2007 00a2 27       		.uleb128 0x27
 2008 00a3 19       		.uleb128 0x19
 2009 00a4 11       		.uleb128 0x11
 2010 00a5 01       		.uleb128 0x1
 2011 00a6 12       		.uleb128 0x12
 2012 00a7 06       		.uleb128 0x6
 2013 00a8 40       		.uleb128 0x40
 2014 00a9 18       		.uleb128 0x18
 2015 00aa 9642     		.uleb128 0x2116
 2016 00ac 19       		.uleb128 0x19
 2017 00ad 01       		.uleb128 0x1
 2018 00ae 13       		.uleb128 0x13
 2019 00af 00       		.byte	0
 2020 00b0 00       		.byte	0
 2021 00b1 0B       		.uleb128 0xb
 2022 00b2 34       		.uleb128 0x34
 2023 00b3 00       		.byte	0
 2024 00b4 03       		.uleb128 0x3
 2025 00b5 08       		.uleb128 0x8
 2026 00b6 3A       		.uleb128 0x3a
 2027 00b7 0B       		.uleb128 0xb
 2028 00b8 3B       		.uleb128 0x3b
 2029 00b9 05       		.uleb128 0x5
 2030 00ba 49       		.uleb128 0x49
 2031 00bb 13       		.uleb128 0x13
 2032 00bc 02       		.uleb128 0x2
 2033 00bd 18       		.uleb128 0x18
 2034 00be 00       		.byte	0
 2035 00bf 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 71


 2036 00c0 0C       		.uleb128 0xc
 2037 00c1 34       		.uleb128 0x34
 2038 00c2 00       		.byte	0
 2039 00c3 03       		.uleb128 0x3
 2040 00c4 0E       		.uleb128 0xe
 2041 00c5 3A       		.uleb128 0x3a
 2042 00c6 0B       		.uleb128 0xb
 2043 00c7 3B       		.uleb128 0x3b
 2044 00c8 05       		.uleb128 0x5
 2045 00c9 49       		.uleb128 0x49
 2046 00ca 13       		.uleb128 0x13
 2047 00cb 02       		.uleb128 0x2
 2048 00cc 18       		.uleb128 0x18
 2049 00cd 00       		.byte	0
 2050 00ce 00       		.byte	0
 2051 00cf 0D       		.uleb128 0xd
 2052 00d0 05       		.uleb128 0x5
 2053 00d1 00       		.byte	0
 2054 00d2 03       		.uleb128 0x3
 2055 00d3 0E       		.uleb128 0xe
 2056 00d4 3A       		.uleb128 0x3a
 2057 00d5 0B       		.uleb128 0xb
 2058 00d6 3B       		.uleb128 0x3b
 2059 00d7 05       		.uleb128 0x5
 2060 00d8 49       		.uleb128 0x49
 2061 00d9 13       		.uleb128 0x13
 2062 00da 02       		.uleb128 0x2
 2063 00db 18       		.uleb128 0x18
 2064 00dc 00       		.byte	0
 2065 00dd 00       		.byte	0
 2066 00de 0E       		.uleb128 0xe
 2067 00df 2E       		.uleb128 0x2e
 2068 00e0 01       		.byte	0x1
 2069 00e1 3F       		.uleb128 0x3f
 2070 00e2 19       		.uleb128 0x19
 2071 00e3 03       		.uleb128 0x3
 2072 00e4 0E       		.uleb128 0xe
 2073 00e5 3A       		.uleb128 0x3a
 2074 00e6 0B       		.uleb128 0xb
 2075 00e7 3B       		.uleb128 0x3b
 2076 00e8 05       		.uleb128 0x5
 2077 00e9 27       		.uleb128 0x27
 2078 00ea 19       		.uleb128 0x19
 2079 00eb 49       		.uleb128 0x49
 2080 00ec 13       		.uleb128 0x13
 2081 00ed 11       		.uleb128 0x11
 2082 00ee 01       		.uleb128 0x1
 2083 00ef 12       		.uleb128 0x12
 2084 00f0 06       		.uleb128 0x6
 2085 00f1 40       		.uleb128 0x40
 2086 00f2 18       		.uleb128 0x18
 2087 00f3 9742     		.uleb128 0x2117
 2088 00f5 19       		.uleb128 0x19
 2089 00f6 01       		.uleb128 0x1
 2090 00f7 13       		.uleb128 0x13
 2091 00f8 00       		.byte	0
 2092 00f9 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 72


 2093 00fa 0F       		.uleb128 0xf
 2094 00fb 2E       		.uleb128 0x2e
 2095 00fc 01       		.byte	0x1
 2096 00fd 3F       		.uleb128 0x3f
 2097 00fe 19       		.uleb128 0x19
 2098 00ff 03       		.uleb128 0x3
 2099 0100 0E       		.uleb128 0xe
 2100 0101 3A       		.uleb128 0x3a
 2101 0102 0B       		.uleb128 0xb
 2102 0103 3B       		.uleb128 0x3b
 2103 0104 05       		.uleb128 0x5
 2104 0105 27       		.uleb128 0x27
 2105 0106 19       		.uleb128 0x19
 2106 0107 49       		.uleb128 0x49
 2107 0108 13       		.uleb128 0x13
 2108 0109 11       		.uleb128 0x11
 2109 010a 01       		.uleb128 0x1
 2110 010b 12       		.uleb128 0x12
 2111 010c 06       		.uleb128 0x6
 2112 010d 40       		.uleb128 0x40
 2113 010e 18       		.uleb128 0x18
 2114 010f 9642     		.uleb128 0x2116
 2115 0111 19       		.uleb128 0x19
 2116 0112 01       		.uleb128 0x1
 2117 0113 13       		.uleb128 0x13
 2118 0114 00       		.byte	0
 2119 0115 00       		.byte	0
 2120 0116 10       		.uleb128 0x10
 2121 0117 2E       		.uleb128 0x2e
 2122 0118 01       		.byte	0x1
 2123 0119 3F       		.uleb128 0x3f
 2124 011a 19       		.uleb128 0x19
 2125 011b 03       		.uleb128 0x3
 2126 011c 0E       		.uleb128 0xe
 2127 011d 3A       		.uleb128 0x3a
 2128 011e 0B       		.uleb128 0xb
 2129 011f 3B       		.uleb128 0x3b
 2130 0120 05       		.uleb128 0x5
 2131 0121 27       		.uleb128 0x27
 2132 0122 19       		.uleb128 0x19
 2133 0123 11       		.uleb128 0x11
 2134 0124 01       		.uleb128 0x1
 2135 0125 12       		.uleb128 0x12
 2136 0126 06       		.uleb128 0x6
 2137 0127 40       		.uleb128 0x40
 2138 0128 18       		.uleb128 0x18
 2139 0129 9742     		.uleb128 0x2117
 2140 012b 19       		.uleb128 0x19
 2141 012c 01       		.uleb128 0x1
 2142 012d 13       		.uleb128 0x13
 2143 012e 00       		.byte	0
 2144 012f 00       		.byte	0
 2145 0130 11       		.uleb128 0x11
 2146 0131 05       		.uleb128 0x5
 2147 0132 00       		.byte	0
 2148 0133 03       		.uleb128 0x3
 2149 0134 08       		.uleb128 0x8
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 73


 2150 0135 3A       		.uleb128 0x3a
 2151 0136 0B       		.uleb128 0xb
 2152 0137 3B       		.uleb128 0x3b
 2153 0138 05       		.uleb128 0x5
 2154 0139 49       		.uleb128 0x49
 2155 013a 13       		.uleb128 0x13
 2156 013b 02       		.uleb128 0x2
 2157 013c 18       		.uleb128 0x18
 2158 013d 00       		.byte	0
 2159 013e 00       		.byte	0
 2160 013f 12       		.uleb128 0x12
 2161 0140 01       		.uleb128 0x1
 2162 0141 01       		.byte	0x1
 2163 0142 49       		.uleb128 0x49
 2164 0143 13       		.uleb128 0x13
 2165 0144 01       		.uleb128 0x1
 2166 0145 13       		.uleb128 0x13
 2167 0146 00       		.byte	0
 2168 0147 00       		.byte	0
 2169 0148 13       		.uleb128 0x13
 2170 0149 21       		.uleb128 0x21
 2171 014a 00       		.byte	0
 2172 014b 49       		.uleb128 0x49
 2173 014c 13       		.uleb128 0x13
 2174 014d 2F       		.uleb128 0x2f
 2175 014e 0B       		.uleb128 0xb
 2176 014f 00       		.byte	0
 2177 0150 00       		.byte	0
 2178 0151 14       		.uleb128 0x14
 2179 0152 34       		.uleb128 0x34
 2180 0153 00       		.byte	0
 2181 0154 03       		.uleb128 0x3
 2182 0155 0E       		.uleb128 0xe
 2183 0156 3A       		.uleb128 0x3a
 2184 0157 0B       		.uleb128 0xb
 2185 0158 3B       		.uleb128 0x3b
 2186 0159 05       		.uleb128 0x5
 2187 015a 49       		.uleb128 0x49
 2188 015b 13       		.uleb128 0x13
 2189 015c 3F       		.uleb128 0x3f
 2190 015d 19       		.uleb128 0x19
 2191 015e 3C       		.uleb128 0x3c
 2192 015f 19       		.uleb128 0x19
 2193 0160 00       		.byte	0
 2194 0161 00       		.byte	0
 2195 0162 15       		.uleb128 0x15
 2196 0163 34       		.uleb128 0x34
 2197 0164 00       		.byte	0
 2198 0165 03       		.uleb128 0x3
 2199 0166 0E       		.uleb128 0xe
 2200 0167 3A       		.uleb128 0x3a
 2201 0168 0B       		.uleb128 0xb
 2202 0169 3B       		.uleb128 0x3b
 2203 016a 0B       		.uleb128 0xb
 2204 016b 49       		.uleb128 0x49
 2205 016c 13       		.uleb128 0x13
 2206 016d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 74


 2207 016e 19       		.uleb128 0x19
 2208 016f 02       		.uleb128 0x2
 2209 0170 18       		.uleb128 0x18
 2210 0171 00       		.byte	0
 2211 0172 00       		.byte	0
 2212 0173 16       		.uleb128 0x16
 2213 0174 26       		.uleb128 0x26
 2214 0175 00       		.byte	0
 2215 0176 49       		.uleb128 0x49
 2216 0177 13       		.uleb128 0x13
 2217 0178 00       		.byte	0
 2218 0179 00       		.byte	0
 2219 017a 00       		.byte	0
 2220              		.section	.debug_aranges,"",%progbits
 2221 0000 74000000 		.4byte	0x74
 2222 0004 0200     		.2byte	0x2
 2223 0006 00000000 		.4byte	.Ldebug_info0
 2224 000a 04       		.byte	0x4
 2225 000b 00       		.byte	0
 2226 000c 0000     		.2byte	0
 2227 000e 0000     		.2byte	0
 2228 0010 00000000 		.4byte	.LFB0
 2229 0014 74000000 		.4byte	.LFE0-.LFB0
 2230 0018 00000000 		.4byte	.LFB1
 2231 001c 2C000000 		.4byte	.LFE1-.LFB1
 2232 0020 00000000 		.4byte	.LFB2
 2233 0024 26000000 		.4byte	.LFE2-.LFB2
 2234 0028 00000000 		.4byte	.LFB3
 2235 002c 6C000000 		.4byte	.LFE3-.LFB3
 2236 0030 00000000 		.4byte	.LFB4
 2237 0034 58010000 		.4byte	.LFE4-.LFB4
 2238 0038 00000000 		.4byte	.LFB5
 2239 003c 50000000 		.4byte	.LFE5-.LFB5
 2240 0040 00000000 		.4byte	.LFB6
 2241 0044 F4000000 		.4byte	.LFE6-.LFB6
 2242 0048 00000000 		.4byte	.LFB7
 2243 004c 44000000 		.4byte	.LFE7-.LFB7
 2244 0050 00000000 		.4byte	.LFB8
 2245 0054 38000000 		.4byte	.LFE8-.LFB8
 2246 0058 00000000 		.4byte	.LFB9
 2247 005c 58000000 		.4byte	.LFE9-.LFB9
 2248 0060 00000000 		.4byte	.LFB10
 2249 0064 5C000000 		.4byte	.LFE10-.LFB10
 2250 0068 00000000 		.4byte	.LFB11
 2251 006c 38000000 		.4byte	.LFE11-.LFB11
 2252 0070 00000000 		.4byte	0
 2253 0074 00000000 		.4byte	0
 2254              		.section	.debug_ranges,"",%progbits
 2255              	.Ldebug_ranges0:
 2256 0000 00000000 		.4byte	.LFB0
 2257 0004 74000000 		.4byte	.LFE0
 2258 0008 00000000 		.4byte	.LFB1
 2259 000c 2C000000 		.4byte	.LFE1
 2260 0010 00000000 		.4byte	.LFB2
 2261 0014 26000000 		.4byte	.LFE2
 2262 0018 00000000 		.4byte	.LFB3
 2263 001c 6C000000 		.4byte	.LFE3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 75


 2264 0020 00000000 		.4byte	.LFB4
 2265 0024 58010000 		.4byte	.LFE4
 2266 0028 00000000 		.4byte	.LFB5
 2267 002c 50000000 		.4byte	.LFE5
 2268 0030 00000000 		.4byte	.LFB6
 2269 0034 F4000000 		.4byte	.LFE6
 2270 0038 00000000 		.4byte	.LFB7
 2271 003c 44000000 		.4byte	.LFE7
 2272 0040 00000000 		.4byte	.LFB8
 2273 0044 38000000 		.4byte	.LFE8
 2274 0048 00000000 		.4byte	.LFB9
 2275 004c 58000000 		.4byte	.LFE9
 2276 0050 00000000 		.4byte	.LFB10
 2277 0054 5C000000 		.4byte	.LFE10
 2278 0058 00000000 		.4byte	.LFB11
 2279 005c 38000000 		.4byte	.LFE11
 2280 0060 00000000 		.4byte	0
 2281 0064 00000000 		.4byte	0
 2282              		.section	.debug_line,"",%progbits
 2283              	.Ldebug_line0:
 2284 0000 58020000 		.section	.debug_str,"MS",%progbits,1
 2284      02007300 
 2284      00000201 
 2284      FB0E0D00 
 2284      01010101 
 2285              	.LASF10:
 2286 0000 75696E74 		.ascii	"uint16\000"
 2286      313600
 2287              	.LASF26:
 2288 0007 66696C74 		.ascii	"filteredRawData\000"
 2288      65726564 
 2288      52617744 
 2288      61746100 
 2289              	.LASF31:
 2290 0017 66696E67 		.ascii	"fingerThreshold\000"
 2290      65725468 
 2290      72657368 
 2290      6F6C6400 
 2291              	.LASF19:
 2292 0027 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 2292      656E7365 
 2292      5F315F49 
 2292      6E697469 
 2292      616C697A 
 2293              	.LASF16:
 2294 0049 43617053 		.ascii	"CapSense_1_BaseInit\000"
 2294      656E7365 
 2294      5F315F42 
 2294      61736549 
 2294      6E697400 
 2295              	.LASF7:
 2296 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2296      206C6F6E 
 2296      6720756E 
 2296      7369676E 
 2296      65642069 
 2297              	.LASF40:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 76


 2298 0074 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 2298      656E7365 
 2298      5F315F45 
 2298      6E61626C 
 2298      65576964 
 2299              	.LASF35:
 2300 008c 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 2300      656E7365 
 2300      5F315F43 
 2300      6865636B 
 2300      49735769 
 2301              	.LASF53:
 2302 00ab 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 2302      656E7365 
 2302      5F315F6E 
 2302      6F697365 
 2302      54687265 
 2303              	.LASF55:
 2304 00c5 43617053 		.ascii	"CapSense_1_debounce\000"
 2304      656E7365 
 2304      5F315F64 
 2304      65626F75 
 2304      6E636500 
 2305              	.LASF43:
 2306 00d9 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 2306      656E7365 
 2306      5F315F73 
 2306      656E736F 
 2306      72526177 
 2307              	.LASF6:
 2308 00ee 6C6F6E67 		.ascii	"long long int\000"
 2308      206C6F6E 
 2308      6720696E 
 2308      7400
 2309              	.LASF0:
 2310 00fc 7369676E 		.ascii	"signed char\000"
 2310      65642063 
 2310      68617200 
 2311              	.LASF36:
 2312 0108 72617749 		.ascii	"rawIndex\000"
 2312      6E646578 
 2312      00
 2313              	.LASF37:
 2314 0111 6E756D62 		.ascii	"numberOfSensors\000"
 2314      65724F66 
 2314      53656E73 
 2314      6F727300 
 2315              	.LASF38:
 2316 0121 73746174 		.ascii	"state\000"
 2316      6500
 2317              	.LASF4:
 2318 0127 6C6F6E67 		.ascii	"long int\000"
 2318      20696E74 
 2318      00
 2319              	.LASF41:
 2320 0130 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 2320      656E7365 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 77


 2320      5F315F44 
 2320      69736162 
 2320      6C655769 
 2321              	.LASF9:
 2322 0149 75696E74 		.ascii	"uint8\000"
 2322      3800
 2323              	.LASF13:
 2324 014f 646F7562 		.ascii	"double\000"
 2324      6C6500
 2325              	.LASF60:
 2326 0156 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 2326      6E657261 
 2326      7465645F 
 2326      536F7572 
 2326      63655C50 
 2327              	.LASF11:
 2328 0181 75696E74 		.ascii	"uint32\000"
 2328      333200
 2329              	.LASF32:
 2330 0188 68797374 		.ascii	"hysteresis\000"
 2330      65726573 
 2330      697300
 2331              	.LASF54:
 2332 0193 43617053 		.ascii	"CapSense_1_hysteresis\000"
 2332      656E7365 
 2332      5F315F68 
 2332      79737465 
 2332      72657369 
 2333              	.LASF57:
 2334 01a9 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 2334      656E7365 
 2334      5F315F72 
 2334      61774461 
 2334      7461496E 
 2335              	.LASF52:
 2336 01c1 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 2336      656E7365 
 2336      5F315F66 
 2336      696E6765 
 2336      72546872 
 2337              	.LASF8:
 2338 01dc 756E7369 		.ascii	"unsigned int\000"
 2338      676E6564 
 2338      20696E74 
 2338      00
 2339              	.LASF5:
 2340 01e9 6C6F6E67 		.ascii	"long unsigned int\000"
 2340      20756E73 
 2340      69676E65 
 2340      6420696E 
 2340      7400
 2341              	.LASF3:
 2342 01fb 73686F72 		.ascii	"short unsigned int\000"
 2342      7420756E 
 2342      7369676E 
 2342      65642069 
 2342      6E7400
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 78


 2343              	.LASF18:
 2344 020e 73656E73 		.ascii	"sensor\000"
 2344      6F7200
 2345              	.LASF58:
 2346 0215 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 2346      656E7365 
 2346      5F315F6E 
 2346      756D6265 
 2346      724F6653 
 2347              	.LASF24:
 2348 0230 63616C63 		.ascii	"calc\000"
 2348      00
 2349              	.LASF45:
 2350 0235 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 2350      656E7365 
 2350      5F315F73 
 2350      656E736F 
 2350      72456E61 
 2351              	.LASF33:
 2352 0251 6465626F 		.ascii	"debounce\000"
 2352      756E6365 
 2352      00
 2353              	.LASF22:
 2354 025a 656E4D61 		.ascii	"enMask\000"
 2354      736B00
 2355              	.LASF15:
 2356 0261 73697A65 		.ascii	"sizetype\000"
 2356      74797065 
 2356      00
 2357              	.LASF51:
 2358 026a 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 2358      656E7365 
 2358      5F315F6C 
 2358      6F774261 
 2358      73656C69 
 2359              	.LASF46:
 2360 0289 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 2360      656E7365 
 2360      5F315F77 
 2360      69646765 
 2360      744E756D 
 2361              	.LASF17:
 2362 02a1 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 2362      656E7365 
 2362      5F315F49 
 2362      6E697469 
 2362      616C697A 
 2363              	.LASF59:
 2364 02c5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2364      4320342E 
 2364      392E3320 
 2364      32303135 
 2364      30333033 
 2365 02f8 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2365      20726576 
 2365      6973696F 
 2365      6E203232 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 79


 2365      31323230 
 2366 032b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2366      66756E63 
 2366      74696F6E 
 2366      2D736563 
 2366      74696F6E 
 2367              	.LASF28:
 2368 0353 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 2368      656E7365 
 2368      5F315F55 
 2368      70646174 
 2368      65456E61 
 2369              	.LASF12:
 2370 0375 666C6F61 		.ascii	"float\000"
 2370      7400
 2371              	.LASF50:
 2372 037b 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 2372      656E7365 
 2372      5F315F73 
 2372      656E736F 
 2372      724F6E4D 
 2373              	.LASF44:
 2374 0393 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 2374      656E7365 
 2374      5F315F72 
 2374      61774669 
 2374      6C746572 
 2375              	.LASF34:
 2376 03ad 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 2376      656E7365 
 2376      5F315F43 
 2376      6865636B 
 2376      49735365 
 2377              	.LASF39:
 2378 03cc 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 2378      656E7365 
 2378      5F315F43 
 2378      6865636B 
 2378      4973416E 
 2379              	.LASF1:
 2380 03ee 756E7369 		.ascii	"unsigned char\000"
 2380      676E6564 
 2380      20636861 
 2380      7200
 2381              	.LASF21:
 2382 03fc 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 2382      656E7365 
 2382      5F315F49 
 2382      6E697469 
 2382      616C697A 
 2383              	.LASF27:
 2384 0422 6E6F6973 		.ascii	"noiseThreshold\000"
 2384      65546872 
 2384      6573686F 
 2384      6C6400
 2385              	.LASF2:
 2386 0431 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 80


 2386      7420696E 
 2386      7400
 2387              	.LASF20:
 2388 043b 77696467 		.ascii	"widget\000"
 2388      657400
 2389              	.LASF30:
 2390 0442 6F6E4D61 		.ascii	"onMask\000"
 2390      736B00
 2391              	.LASF23:
 2392 0449 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 2392      656E7365 
 2392      5F315F55 
 2392      70646174 
 2392      6553656E 
 2393              	.LASF61:
 2394 0469 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\psoc-5lp\\5lp-rtu"
 2394      73657273 
 2394      5C676C65 
 2394      6E6E5C4F 
 2394      6E654472 
 2395 0496 5C555342 		.ascii	"\\USB_UART01.cydsn\000"
 2395      5F554152 
 2395      5430312E 
 2395      63796473 
 2395      6E00
 2396              	.LASF49:
 2397 04a8 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 2397      656E7365 
 2397      5F315F73 
 2397      656E736F 
 2397      72536967 
 2398              	.LASF56:
 2399 04c0 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 2399      656E7365 
 2399      5F315F64 
 2399      65626F75 
 2399      6E636543 
 2400              	.LASF14:
 2401 04db 63686172 		.ascii	"char\000"
 2401      00
 2402              	.LASF48:
 2403 04e0 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 2403      656E7365 
 2403      5F315F73 
 2403      656E736F 
 2403      72426173 
 2404              	.LASF29:
 2405 04fd 6465626F 		.ascii	"debounceIndex\000"
 2405      756E6365 
 2405      496E6465 
 2405      7800
 2406              	.LASF47:
 2407 050b 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 2407      656E7365 
 2407      5F315F73 
 2407      656E736F 
 2407      72426173 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cci8yEC3.s 			page 81


 2408              	.LASF42:
 2409 0525 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 2409      656E7365 
 2409      5F315F49 
 2409      49523446 
 2409      696C7465 
 2410              	.LASF25:
 2411 053b 74656D70 		.ascii	"tempRaw\000"
 2411      52617700 
 2412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
