ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_1_SAR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_1_SAR_initVar
  19              		.bss
  20              		.type	ADC_1_SAR_initVar, %object
  21              		.size	ADC_1_SAR_initVar, 1
  22              	ADC_1_SAR_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_1_SAR_offset,2,2
  25              		.comm	ADC_1_SAR_countsPerVolt,2,2
  26              		.comm	ADC_1_SAR_countsPer10Volt,4,4
  27              		.comm	ADC_1_SAR_shift,2,2
  28              		.section	.text.ADC_1_SAR_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_1_SAR_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_1_SAR_Start, %function
  34              	ADC_1_SAR_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_1_SAR.c"
   1:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * File Name: ADC_1_SAR.c
   3:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
   5:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
   9:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  11:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  18:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #include "ADC_1_SAR.h"
  20:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  21:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #if(ADC_1_SAR_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 2


  22:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #include "ADC_1_SAR_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #endif /* End ADC_1_SAR_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  25:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  26:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_1_SAR.c **** static void ADC_1_SAR_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  31:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  32:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_1_SAR.c **** uint8 ADC_1_SAR_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_1_SAR.c **** volatile int16 ADC_1_SAR_offset;
  37:.\Generated_Source\PSoC5/ADC_1_SAR.c **** volatile int16 ADC_1_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_1_SAR.c **** volatile int32 ADC_1_SAR_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_1_SAR.c **** volatile int16 ADC_1_SAR_shift;
  40:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  41:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  42:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_Start
  44:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  46:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  52:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  55:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  58:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The ADC_1_SAR_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  to zero before call of ADC_1_SAR_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Init() and ADC_1_SAR_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  69:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  73:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_Start(void)
  75:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  77:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     if(ADC_1_SAR_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
  80:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_1_SAR_Init
  81:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
  83:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_1_SAR_Enable
  84:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_1_SAR_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_1_SAR_Start, .-ADC_1_SAR_Start
  70              		.section	.text.ADC_1_SAR_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_1_SAR_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_1_SAR_Init, %function
  76              	ADC_1_SAR_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  86:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
  87:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_Init
  89:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  91:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_Start().
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 4


  95:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  96:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
  99:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 102:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The ADC_1_SAR_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 105:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_Init(void)
 107:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 109:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* End ADC_1_SAR_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 114:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         CyIntSetPriority(ADC_1_SAR_INTC_NUMBER, ADC_1_SAR_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         (void)CyIntSetVector(ADC_1_SAR_INTC_NUMBER, &ADC_1_SAR_ISR);
 118:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif   /* End ADC_1_SAR_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 120:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR1_REG |= ADC_1_SAR_SAR_IRQ_MASK_EN | ADC_1_SAR_SAR_IRQ_MODE_EDGE;
  88              		.loc 1 121 0
  89 0004 074A     		ldr	r2, .L6
  90 0006 074B     		ldr	r3, .L6
  91 0008 1B78     		ldrb	r3, [r3]
  92 000a DBB2     		uxtb	r3, r3
  93 000c 43F00603 		orr	r3, r3, #6
  94 0010 DBB2     		uxtb	r3, r3
  95 0012 1370     		strb	r3, [r2]
 122:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 123:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SetResolution(ADC_1_SAR_DEFAULT_RESOLUTION);
  96              		.loc 1 124 0
  97 0014 0C20     		movs	r0, #12
  98 0016 FFF7FEFF 		bl	ADC_1_SAR_SetResolution
 125:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_offset = 0;
  99              		.loc 1 125 0
 100 001a 034B     		ldr	r3, .L6+4
 101 001c 0022     		movs	r2, #0
 102 001e 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 5


 103              		.loc 1 126 0
 104 0020 80BD     		pop	{r7, pc}
 105              	.L7:
 106 0022 00BF     		.align	2
 107              	.L6:
 108 0024 09590040 		.word	1073764617
 109 0028 00000000 		.word	ADC_1_SAR_offset
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	ADC_1_SAR_Init, .-ADC_1_SAR_Init
 113              		.section	.text.ADC_1_SAR_Enable,"ax",%progbits
 114              		.align	2
 115              		.global	ADC_1_SAR_Enable
 116              		.thumb
 117              		.thumb_func
 118              		.type	ADC_1_SAR_Enable, %function
 119              	ADC_1_SAR_Enable:
 120              	.LFB2:
 127:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 128:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 129:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_Enable
 131:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 133:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 136:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 139:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 142:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 121              		.loc 1 144 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 133              		.loc 1 147 0
 134 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 135 000a 0346     		mov	r3, r0
 136 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 149:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 6


 150:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_PWRMGR_SAR_REG |= ADC_1_SAR_ACT_PWR_SAR_EN;
 137              		.loc 1 150 0
 138 000e 244A     		ldr	r2, .L9
 139 0010 234B     		ldr	r3, .L9
 140 0012 1B78     		ldrb	r3, [r3]
 141 0014 DBB2     		uxtb	r3, r3
 142 0016 43F00203 		orr	r3, r3, #2
 143 001a DBB2     		uxtb	r3, r3
 144 001c 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 152:.\Generated_Source\PSoC5/ADC_1_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_STBY_PWRMGR_SAR_REG |= ADC_1_SAR_STBY_PWR_SAR_EN;
 145              		.loc 1 153 0
 146 001e 214A     		ldr	r2, .L9+4
 147 0020 204B     		ldr	r3, .L9+4
 148 0022 1B78     		ldrb	r3, [r3]
 149 0024 DBB2     		uxtb	r3, r3
 150 0026 43F00203 		orr	r3, r3, #2
 151 002a DBB2     		uxtb	r3, r3
 152 002c 1370     		strb	r3, [r2]
 154:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 155:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_PWRMGR_CLK_REG |= ADC_1_SAR_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_STBY_PWRMGR_CLK_REG |= ADC_1_SAR_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* End ADC_1_SAR_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 161:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     tmpReg = ADC_1_SAR_SAR_CSR3_REG;
 153              		.loc 1 162 0
 154 002e 1E4B     		ldr	r3, .L9+8
 155 0030 1B78     		ldrb	r3, [r3]
 156 0032 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     tmpReg |= ADC_1_SAR_SAR_EN_BUF_VCM_EN;
 157              		.loc 1 163 0
 158 0034 BB79     		ldrb	r3, [r7, #6]
 159 0036 43F00203 		orr	r3, r3, #2
 160 003a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if((ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         tmpReg &= (uint8)~ADC_1_SAR_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         tmpReg |= ADC_1_SAR_SAR_EN_BUF_VREF_EN;
 161              		.loc 1 169 0
 162 003c BB79     		ldrb	r3, [r7, #6]
 163 003e 43F00103 		orr	r3, r3, #1
 164 0042 BB71     		strb	r3, [r7, #6]
 170:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR3_REG = tmpReg;
 165              		.loc 1 171 0
 166 0044 184A     		ldr	r2, .L9+8
 167 0046 BB79     		ldrb	r3, [r7, #6]
 168 0048 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 173:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VNEG_VDDA_DIFF)
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 7


 175:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #if(ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR6_REG = ADC_1_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR6_REG = ADC_1_SAR_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #endif /* ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #if(ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR6_REG = ADC_1_SAR_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR6_REG = ADC_1_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 169              		.loc 1 184 0
 170 004a 184B     		ldr	r3, .L9+12
 171 004c 0422     		movs	r2, #4
 172 004e 1A70     		strb	r2, [r3]
 185:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #endif /* ADC_1_SAR_DEFAULT_REFERENCE == ADC_1_SAR__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 188:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR5_REG &= (uint8)~ADC_1_SAR_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR5_REG |= ADC_1_SAR_SAR_DLY_INC;
 173              		.loc 1 192 0
 174 0050 174A     		ldr	r2, .L9+16
 175 0052 174B     		ldr	r3, .L9+16
 176 0054 1B78     		ldrb	r3, [r3]
 177 0056 DBB2     		uxtb	r3, r3
 178 0058 43F04003 		orr	r3, r3, #64
 179 005c DBB2     		uxtb	r3, r3
 180 005e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* ADC_1_SAR_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 195:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     */
 199:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR5_REG |= ADC_1_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR5_REG &= (uint8)~ADC_1_SAR_SAR_SEL_CSEL_DFT_CHAR;
 181              		.loc 1 202 0
 182 0060 134A     		ldr	r2, .L9+16
 183 0062 134B     		ldr	r3, .L9+16
 184 0064 1B78     		ldrb	r3, [r3]
 185 0066 DBB2     		uxtb	r3, r3
 186 0068 23F00303 		bic	r3, r3, #3
 187 006c DBB2     		uxtb	r3, r3
 188 006e 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* ADC_1_SAR_HIGH_POWER_PULSE == 0u */
 204:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 205:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR0_REG = (uint8)((uint8)ADC_1_SAR_DEFAULT_POWER << ADC_1_SAR_SAR_POWER_SHIFT)
 189              		.loc 1 206 0
 190 0070 104B     		ldr	r3, .L9+20
 191 0072 C822     		movs	r2, #200
 192 0074 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 8


 208:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if ((CY_PSOC5LP) || (ADC_1_SAR_DEFAULT_REFERENCE != ADC_1_SAR__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         | ADC_1_SAR_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_DEFAULT_CONV_MODE != ADC_1_SAR__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         | ADC_1_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         | ADC_1_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* ADC_1_SAR_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 218:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_TR0_REG = ADC_1_SAR_SAR_CAP_TRIM_2;
 193              		.loc 1 218 0
 194 0076 104B     		ldr	r3, .L9+24
 195 0078 0222     		movs	r2, #2
 196 007a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 220:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CLK_REG |= ADC_1_SAR_SAR_MX_CLK_EN;
 197              		.loc 1 221 0
 198 007c 0F4A     		ldr	r2, .L9+28
 199 007e 0F4B     		ldr	r3, .L9+28
 200 0080 1B78     		ldrb	r3, [r3]
 201 0082 DBB2     		uxtb	r3, r3
 202 0084 43F00803 		orr	r3, r3, #8
 203 0088 DBB2     		uxtb	r3, r3
 204 008a 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 223:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 205              		.loc 1 223 0
 206 008c 0A20     		movs	r0, #10
 207 008e FFF7FEFF 		bl	CyDelayUs
 224:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 225:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         CyIntClearPending(ADC_1_SAR_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif   /* End ADC_1_SAR_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 230:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 230 0
 209 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0094 1846     		mov	r0, r3
 211 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 212              		.loc 1 231 0
 213 009a 0837     		adds	r7, r7, #8
 214              		.cfi_def_cfa_offset 8
 215 009c BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 009e 80BD     		pop	{r7, pc}
 219              	.L10:
 220              		.align	2
 221              	.L9:
 222 00a0 AB430040 		.word	1073759147
 223 00a4 BB430040 		.word	1073759163
 224 00a8 0B590040 		.word	1073764619
 225 00ac 0E590040 		.word	1073764622
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 9


 226 00b0 0D590040 		.word	1073764621
 227 00b4 08590040 		.word	1073764616
 228 00b8 16460040 		.word	1073759766
 229 00bc 2F5B0040 		.word	1073765167
 230              		.cfi_endproc
 231              	.LFE2:
 232              		.size	ADC_1_SAR_Enable, .-ADC_1_SAR_Enable
 233              		.section	.text.ADC_1_SAR_Stop,"ax",%progbits
 234              		.align	2
 235              		.global	ADC_1_SAR_Stop
 236              		.thumb
 237              		.thumb_func
 238              		.type	ADC_1_SAR_Stop, %function
 239              	ADC_1_SAR_Stop:
 240              	.LFB3:
 232:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 233:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 234:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_Stop
 236:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 238:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 239:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 241:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 244:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 247:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 241              		.loc 1 249 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 82B0     		sub	sp, sp, #8
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 250:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 251 0
 254 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 255 000a 0346     		mov	r3, r0
 256 000c FB71     		strb	r3, [r7, #7]
 252:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 253:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_1_SAR_SAR_SOF_START_CONV;
 257              		.loc 1 254 0
 258 000e 0F4A     		ldr	r2, .L12
 259 0010 0E4B     		ldr	r3, .L12
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 10


 260 0012 1B78     		ldrb	r3, [r3]
 261 0014 DBB2     		uxtb	r3, r3
 262 0016 23F00103 		bic	r3, r3, #1
 263 001a DBB2     		uxtb	r3, r3
 264 001c 1370     		strb	r3, [r2]
 255:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_PWRMGR_SAR_REG &= (uint8)~ADC_1_SAR_ACT_PWR_SAR_EN;
 265              		.loc 1 256 0
 266 001e 0C4A     		ldr	r2, .L12+4
 267 0020 0B4B     		ldr	r3, .L12+4
 268 0022 1B78     		ldrb	r3, [r3]
 269 0024 DBB2     		uxtb	r3, r3
 270 0026 23F00203 		bic	r3, r3, #2
 271 002a DBB2     		uxtb	r3, r3
 272 002c 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_1_SAR_STBY_PWR_SAR_EN;
 273              		.loc 1 258 0
 274 002e 094A     		ldr	r2, .L12+8
 275 0030 084B     		ldr	r3, .L12+8
 276 0032 1B78     		ldrb	r3, [r3]
 277 0034 DBB2     		uxtb	r3, r3
 278 0036 23F00203 		bic	r3, r3, #2
 279 003a DBB2     		uxtb	r3, r3
 280 003c 1370     		strb	r3, [r2]
 259:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 260:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* This is only valid if there is an internal clock */
 261:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(ADC_1_SAR_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_PWRMGR_CLK_REG &= (uint8)~ADC_1_SAR_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_1_SAR_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* End ADC_1_SAR_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 266:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 281              		.loc 1 266 0
 282 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 283 0040 1846     		mov	r0, r3
 284 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 268:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 285              		.loc 1 268 0
 286 0046 0837     		adds	r7, r7, #8
 287              		.cfi_def_cfa_offset 8
 288 0048 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 004a 80BD     		pop	{r7, pc}
 292              	.L13:
 293              		.align	2
 294              	.L12:
 295 004c 08590040 		.word	1073764616
 296 0050 AB430040 		.word	1073759147
 297 0054 BB430040 		.word	1073759163
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	ADC_1_SAR_Stop, .-ADC_1_SAR_Stop
 301              		.section	.text.ADC_1_SAR_SetPower,"ax",%progbits
 302              		.align	2
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 11


 303              		.global	ADC_1_SAR_SetPower
 304              		.thumb
 305              		.thumb_func
 306              		.type	ADC_1_SAR_SetPower, %function
 307              	ADC_1_SAR_SetPower:
 308              	.LFB4:
 269:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 270:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 271:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_SetPower
 273:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 275:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 279:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 286:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 289:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 309              		.loc 1 291 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 85B0     		sub	sp, sp, #20
 318              		.cfi_def_cfa_offset 24
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 0346     		mov	r3, r0
 322 0008 FB71     		strb	r3, [r7, #7]
 292:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 294:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     power &= ADC_1_SAR_SAR_API_POWER_MASK;
 323              		.loc 1 295 0
 324 000a FB79     		ldrb	r3, [r7, #7]
 325 000c 03F00303 		and	r3, r3, #3
 326 0010 FB71     		strb	r3, [r7, #7]
 296:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 297:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     tmpReg = ADC_1_SAR_SAR_CSR0_REG & (uint8)~ADC_1_SAR_SAR_POWER_MASK;
 327              		.loc 1 298 0
 328 0012 0A4B     		ldr	r3, .L15
 329 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 12


 330 0016 DBB2     		uxtb	r3, r3
 331 0018 03F03F03 		and	r3, r3, #63
 332 001c FB73     		strb	r3, [r7, #15]
 299:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     tmpReg |= (uint8)(power << ADC_1_SAR_SAR_POWER_SHIFT);
 333              		.loc 1 299 0
 334 001e FB79     		ldrb	r3, [r7, #7]
 335 0020 9B01     		lsls	r3, r3, #6
 336 0022 DAB2     		uxtb	r2, r3
 337 0024 FB7B     		ldrb	r3, [r7, #15]
 338 0026 1343     		orrs	r3, r3, r2
 339 0028 FB73     		strb	r3, [r7, #15]
 300:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR0_REG = tmpReg;
 340              		.loc 1 300 0
 341 002a 044A     		ldr	r2, .L15
 342 002c FB7B     		ldrb	r3, [r7, #15]
 343 002e 1370     		strb	r3, [r2]
 301:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 344              		.loc 1 301 0
 345 0030 1437     		adds	r7, r7, #20
 346              		.cfi_def_cfa_offset 4
 347 0032 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 0034 5DF8047B 		ldr	r7, [sp], #4
 351              		.cfi_restore 7
 352              		.cfi_def_cfa_offset 0
 353 0038 7047     		bx	lr
 354              	.L16:
 355 003a 00BF     		.align	2
 356              	.L15:
 357 003c 08590040 		.word	1073764616
 358              		.cfi_endproc
 359              	.LFE4:
 360              		.size	ADC_1_SAR_SetPower, .-ADC_1_SAR_SetPower
 361              		.section	.text.ADC_1_SAR_SetResolution,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_1_SAR_SetResolution
 364              		.thumb
 365              		.thumb_func
 366              		.type	ADC_1_SAR_SetResolution, %function
 367              	ADC_1_SAR_SetResolution:
 368              	.LFB5:
 302:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 303:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 304:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_SetResolution
 306:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 308:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 311:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 13


 317:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 318:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 320:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 339:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 369              		.loc 1 341 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 80B5     		push	{r7, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 84B0     		sub	sp, sp, #16
 378              		.cfi_def_cfa_offset 24
 379 0004 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 381 0006 0346     		mov	r3, r0
 382 0008 FB71     		strb	r3, [r7, #7]
 342:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 344:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     switch (resolution)
 383              		.loc 1 345 0
 384 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 000c 0A2B     		cmp	r3, #10
 386 000e 07D0     		beq	.L19
 387 0010 0C2B     		cmp	r3, #12
 388 0012 02D0     		beq	.L20
 389 0014 082B     		cmp	r3, #8
 390 0016 06D0     		beq	.L21
 391 0018 08E0     		b	.L23
 392              	.L20:
 346:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 347:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             tmpReg = ADC_1_SAR_SAR_RESOLUTION_12BIT | ADC_1_SAR_SAR_SAMPLE_WIDTH;
 393              		.loc 1 348 0
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 14


 394 001a C423     		movs	r3, #196
 395 001c FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 396              		.loc 1 349 0
 397 001e 0BE0     		b	.L22
 398              	.L19:
 350:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             tmpReg = ADC_1_SAR_SAR_RESOLUTION_10BIT | ADC_1_SAR_SAR_SAMPLE_WIDTH;
 399              		.loc 1 351 0
 400 0020 8423     		movs	r3, #132
 401 0022 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 402              		.loc 1 352 0
 403 0024 08E0     		b	.L22
 404              	.L21:
 353:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             tmpReg = ADC_1_SAR_SAR_RESOLUTION_8BIT | ADC_1_SAR_SAR_SAMPLE_WIDTH;
 405              		.loc 1 354 0
 406 0026 4423     		movs	r3, #68
 407 0028 FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 408              		.loc 1 355 0
 409 002a 05E0     		b	.L22
 410              	.L23:
 356:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             tmpReg = ADC_1_SAR_SAR_RESOLUTION_12BIT | ADC_1_SAR_SAR_SAMPLE_WIDTH;
 411              		.loc 1 357 0
 412 002c C423     		movs	r3, #196
 413 002e FB73     		strb	r3, [r7, #15]
 358:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             CYASSERT(0u != 0u);
 414              		.loc 1 359 0
 415 0030 0020     		movs	r0, #0
 416 0032 FFF7FEFF 		bl	CyHalt
 360:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 417              		.loc 1 360 0
 418 0036 00BF     		nop
 419              	.L22:
 361:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 362:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_SAR_CSR2_REG = tmpReg;
 420              		.loc 1 362 0
 421 0038 044A     		ldr	r2, .L24
 422 003a FB7B     		ldrb	r3, [r7, #15]
 423 003c 1370     		strb	r3, [r2]
 363:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 364:.\Generated_Source\PSoC5/ADC_1_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_CalcGain(resolution);
 424              		.loc 1 365 0
 425 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 0040 1846     		mov	r0, r3
 427 0042 FFF7FEFF 		bl	ADC_1_SAR_CalcGain
 366:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 428              		.loc 1 366 0
 429 0046 1037     		adds	r7, r7, #16
 430              		.cfi_def_cfa_offset 8
 431 0048 BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 15


 433              		@ sp needed
 434 004a 80BD     		pop	{r7, pc}
 435              	.L25:
 436              		.align	2
 437              	.L24:
 438 004c 0A590040 		.word	1073764618
 439              		.cfi_endproc
 440              	.LFE5:
 441              		.size	ADC_1_SAR_SetResolution, .-ADC_1_SAR_SetResolution
 442              		.section	.text.ADC_1_SAR_StartConvert,"ax",%progbits
 443              		.align	2
 444              		.global	ADC_1_SAR_StartConvert
 445              		.thumb
 446              		.thumb_func
 447              		.type	ADC_1_SAR_StartConvert, %function
 448              	ADC_1_SAR_StartConvert:
 449              	.LFB6:
 367:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 368:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 369:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #if(ADC_1_SAR_DEFAULT_CONV_MODE != ADC_1_SAR__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 371:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 372:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Function Name: ADC_1_SAR_StartConvert
 374:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ********************************************************************************
 375:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 376:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  ADC_1_SAR_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 383:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 386:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 389:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 395:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 400:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     void ADC_1_SAR_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 450              		.loc 1 402 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 16


 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #if(ADC_1_SAR_DEFAULT_CONV_MODE != ADC_1_SAR__FREE_RUNNING)  /* If software triggered mode 
 404:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_1_SAR_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #endif /* End ADC_1_SAR_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 407:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR0_REG |= ADC_1_SAR_SAR_SOF_START_CONV;
 460              		.loc 1 408 0
 461 0004 054A     		ldr	r2, .L27
 462 0006 054B     		ldr	r3, .L27
 463 0008 1B78     		ldrb	r3, [r3]
 464 000a DBB2     		uxtb	r3, r3
 465 000c 43F00103 		orr	r3, r3, #1
 466 0010 DBB2     		uxtb	r3, r3
 467 0012 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 468              		.loc 1 409 0
 469 0014 BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 0016 5DF8047B 		ldr	r7, [sp], #4
 473              		.cfi_restore 7
 474              		.cfi_def_cfa_offset 0
 475 001a 7047     		bx	lr
 476              	.L28:
 477              		.align	2
 478              	.L27:
 479 001c 08590040 		.word	1073764616
 480              		.cfi_endproc
 481              	.LFE6:
 482              		.size	ADC_1_SAR_StartConvert, .-ADC_1_SAR_StartConvert
 483              		.section	.text.ADC_1_SAR_StopConvert,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_1_SAR_StopConvert
 486              		.thumb
 487              		.thumb_func
 488              		.type	ADC_1_SAR_StopConvert, %function
 489              	ADC_1_SAR_StopConvert:
 490              	.LFB7:
 410:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 411:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 412:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Function Name: ADC_1_SAR_StopConvert
 414:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 416:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 421:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  None.
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 17


 423:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 424:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 427:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 430:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *
 434:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     void ADC_1_SAR_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 491              		.loc 1 436 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              		.cfi_def_cfa_offset 4
 498              		.cfi_offset 7, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 437:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_SAR_CSR0_REG &= (uint8)~ADC_1_SAR_SAR_SOF_START_CONV;
 501              		.loc 1 438 0
 502 0004 054A     		ldr	r2, .L30
 503 0006 054B     		ldr	r3, .L30
 504 0008 1B78     		ldrb	r3, [r3]
 505 000a DBB2     		uxtb	r3, r3
 506 000c 23F00103 		bic	r3, r3, #1
 507 0010 DBB2     		uxtb	r3, r3
 508 0012 1370     		strb	r3, [r2]
 439:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 440:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #if(ADC_1_SAR_DEFAULT_CONV_MODE != ADC_1_SAR__FREE_RUNNING)  /* If software triggered mode 
 441:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             ADC_1_SAR_SAR_CSR0_REG |= ADC_1_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         #endif /* End ADC_1_SAR_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 445:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 509              		.loc 1 445 0
 510 0014 BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0016 5DF8047B 		ldr	r7, [sp], #4
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
 516 001a 7047     		bx	lr
 517              	.L31:
 518              		.align	2
 519              	.L30:
 520 001c 08590040 		.word	1073764616
 521              		.cfi_endproc
 522              	.LFE7:
 523              		.size	ADC_1_SAR_StopConvert, .-ADC_1_SAR_StopConvert
 524              		.section	.text.ADC_1_SAR_IsEndConversion,"ax",%progbits
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 18


 525              		.align	2
 526              		.global	ADC_1_SAR_IsEndConversion
 527              		.thumb
 528              		.thumb_func
 529              		.type	ADC_1_SAR_IsEndConversion, %function
 530              	ADC_1_SAR_IsEndConversion:
 531              	.LFB8:
 446:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 447:.\Generated_Source\PSoC5/ADC_1_SAR.c **** #endif /* End ADC_1_SAR_DEFAULT_CONV_MODE != ADC_1_SAR__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 449:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 450:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 454:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 459:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *   ADC_1_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *   ADC_1_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 467:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 471:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 474:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_1_SAR.c **** uint8 ADC_1_SAR_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 532              		.loc 1 476 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 0346     		mov	r3, r0
 545 0008 FB71     		strb	r3, [r7, #7]
 546              	.L34:
 477:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 479:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     do
 480:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 19


 481:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         status = ADC_1_SAR_SAR_CSR1_REG & ADC_1_SAR_SAR_EOF_1;
 547              		.loc 1 481 0 discriminator 2
 548 000a 0C4B     		ldr	r3, .L37
 549 000c 1B78     		ldrb	r3, [r3]
 550 000e DBB2     		uxtb	r3, r3
 551 0010 03F00103 		and	r3, r3, #1
 552 0014 FB73     		strb	r3, [r7, #15]
 482:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     } while ((status != ADC_1_SAR_SAR_EOF_1) && (retMode == ADC_1_SAR_WAIT_FOR_RESULT));
 553              		.loc 1 482 0 discriminator 2
 554 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 555 0018 012B     		cmp	r3, #1
 556 001a 02D0     		beq	.L33
 557              		.loc 1 482 0 is_stmt 0 discriminator 1
 558 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 001e 002B     		cmp	r3, #0
 560 0020 F3D0     		beq	.L34
 561              	.L33:
 483:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     if(status == ADC_1_SAR_SAR_EOF_1)
 562              		.loc 1 484 0 is_stmt 1
 563 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 564 0024 012B     		cmp	r3, #1
 565 0026 04D1     		bne	.L35
 485:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 486:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         CyDelayUs(1u);
 566              		.loc 1 487 0
 567 0028 0120     		movs	r0, #1
 568 002a FFF7FEFF 		bl	CyDelayUs
 488:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         CY_GET_REG8(ADC_1_SAR_SAR_CSR1_PTR);
 569              		.loc 1 489 0
 570 002e 034B     		ldr	r3, .L37
 571 0030 1B78     		ldrb	r3, [r3]
 572              	.L35:
 490:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 491:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 492:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return(status);
 573              		.loc 1 492 0
 574 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 575              		.loc 1 493 0
 576 0034 1846     		mov	r0, r3
 577 0036 1037     		adds	r7, r7, #16
 578              		.cfi_def_cfa_offset 8
 579 0038 BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 003a 80BD     		pop	{r7, pc}
 583              	.L38:
 584              		.align	2
 585              	.L37:
 586 003c 09590040 		.word	1073764617
 587              		.cfi_endproc
 588              	.LFE8:
 589              		.size	ADC_1_SAR_IsEndConversion, .-ADC_1_SAR_IsEndConversion
 590              		.section	.text.ADC_1_SAR_GetResult8,"ax",%progbits
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 20


 591              		.align	2
 592              		.global	ADC_1_SAR_GetResult8
 593              		.thumb
 594              		.thumb_func
 595              		.type	ADC_1_SAR_GetResult8, %function
 596              	ADC_1_SAR_GetResult8:
 597              	.LFB9:
 494:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 495:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 496:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_GetResult8
 498:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 500:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 506:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 509:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 512:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 516:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 519:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_1_SAR.c **** int8 ADC_1_SAR_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 598              		.loc 1 521 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603 0000 80B4     		push	{r7}
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 7, -4
 606 0002 00AF     		add	r7, sp, #0
 607              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return( (int8)ADC_1_SAR_SAR_WRK0_REG - (int8)ADC_1_SAR_shift);
 608              		.loc 1 522 0
 609 0004 074B     		ldr	r3, .L41
 610 0006 1B78     		ldrb	r3, [r3]
 611 0008 DAB2     		uxtb	r2, r3
 612 000a 074B     		ldr	r3, .L41+4
 613 000c 1B88     		ldrh	r3, [r3]	@ movhi
 614 000e 9BB2     		uxth	r3, r3
 615 0010 DBB2     		uxtb	r3, r3
 616 0012 D31A     		subs	r3, r2, r3
 617 0014 DBB2     		uxtb	r3, r3
 618 0016 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 21


 619 0018 5BB2     		sxtb	r3, r3
 523:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 620              		.loc 1 523 0
 621 001a 1846     		mov	r0, r3
 622 001c BD46     		mov	sp, r7
 623              		.cfi_def_cfa_register 13
 624              		@ sp needed
 625 001e 5DF8047B 		ldr	r7, [sp], #4
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 0022 7047     		bx	lr
 629              	.L42:
 630              		.align	2
 631              	.L41:
 632 0024 A25B0040 		.word	1073765282
 633 0028 00000000 		.word	ADC_1_SAR_shift
 634              		.cfi_endproc
 635              	.LFE9:
 636              		.size	ADC_1_SAR_GetResult8, .-ADC_1_SAR_GetResult8
 637              		.section	.text.ADC_1_SAR_GetResult16,"ax",%progbits
 638              		.align	2
 639              		.global	ADC_1_SAR_GetResult16
 640              		.thumb
 641              		.thumb_func
 642              		.type	ADC_1_SAR_GetResult16, %function
 643              	ADC_1_SAR_GetResult16:
 644              	.LFB10:
 524:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 525:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 526:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_GetResult16
 528:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 530:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 536:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 539:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 542:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 546:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 549:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_1_SAR.c **** int16 ADC_1_SAR_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 645              		.loc 1 551 0
 646              		.cfi_startproc
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 22


 647              		@ args = 0, pretend = 0, frame = 8
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              		.cfi_def_cfa_offset 4
 652              		.cfi_offset 7, -4
 653 0002 83B0     		sub	sp, sp, #12
 654              		.cfi_def_cfa_offset 16
 655 0004 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 552:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 554:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     res = CY_GET_REG16(ADC_1_SAR_SAR_WRK_PTR);
 657              		.loc 1 554 0
 658 0006 094B     		ldr	r3, .L45
 659 0008 1B88     		ldrh	r3, [r3]	@ movhi
 660 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 556:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return( (int16)res - ADC_1_SAR_shift );
 661              		.loc 1 556 0
 662 000c 084B     		ldr	r3, .L45+4
 663 000e 1B88     		ldrh	r3, [r3]	@ movhi
 664 0010 9BB2     		uxth	r3, r3
 665 0012 9BB2     		uxth	r3, r3
 666 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 667 0016 D31A     		subs	r3, r2, r3
 668 0018 9BB2     		uxth	r3, r3
 669 001a 9BB2     		uxth	r3, r3
 670 001c 1BB2     		sxth	r3, r3
 557:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 671              		.loc 1 557 0
 672 001e 1846     		mov	r0, r3
 673 0020 0C37     		adds	r7, r7, #12
 674              		.cfi_def_cfa_offset 4
 675 0022 BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 0024 5DF8047B 		ldr	r7, [sp], #4
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0028 7047     		bx	lr
 682              	.L46:
 683 002a 00BF     		.align	2
 684              	.L45:
 685 002c A25B0040 		.word	1073765282
 686 0030 00000000 		.word	ADC_1_SAR_shift
 687              		.cfi_endproc
 688              	.LFE10:
 689              		.size	ADC_1_SAR_GetResult16, .-ADC_1_SAR_GetResult16
 690              		.section	.text.ADC_1_SAR_SetOffset,"ax",%progbits
 691              		.align	2
 692              		.global	ADC_1_SAR_SetOffset
 693              		.thumb
 694              		.thumb_func
 695              		.type	ADC_1_SAR_SetOffset, %function
 696              	ADC_1_SAR_SetOffset:
 697              	.LFB11:
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 23


 558:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 559:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 560:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_SetOffset
 562:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 564:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Sets the ADC offset, which is used by ADC_1_SAR_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_CountsTo_mVolts(), and ADC_1_SAR_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 570:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_1_SAR.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 574:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 577:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  The ADC_1_SAR_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Affects the ADC_1_SAR_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_CountsTo_mVolts, ADC_1_SAR_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 584:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 698              		.loc 1 586 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 0346     		mov	r3, r0
 711 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_offset = offset;
 712              		.loc 1 587 0
 713 000a 044A     		ldr	r2, .L48
 714 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 715 000e 1380     		strh	r3, [r2]	@ movhi
 588:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 716              		.loc 1 588 0
 717 0010 0C37     		adds	r7, r7, #12
 718              		.cfi_def_cfa_offset 4
 719 0012 BD46     		mov	sp, r7
 720              		.cfi_def_cfa_register 13
 721              		@ sp needed
 722 0014 5DF8047B 		ldr	r7, [sp], #4
 723              		.cfi_restore 7
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 24


 724              		.cfi_def_cfa_offset 0
 725 0018 7047     		bx	lr
 726              	.L49:
 727 001a 00BF     		.align	2
 728              	.L48:
 729 001c 00000000 		.word	ADC_1_SAR_offset
 730              		.cfi_endproc
 731              	.LFE11:
 732              		.size	ADC_1_SAR_SetOffset, .-ADC_1_SAR_SetOffset
 733              		.section	.text.ADC_1_SAR_CalcGain,"ax",%progbits
 734              		.align	2
 735              		.thumb
 736              		.thumb_func
 737              		.type	ADC_1_SAR_CalcGain, %function
 738              	ADC_1_SAR_CalcGain:
 739              	.LFB12:
 589:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 590:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 591:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_CalcGain
 593:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 595:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 598:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 601:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 603:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 604:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 610:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_1_SAR.c **** static void ADC_1_SAR_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 740              		.loc 1 612 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 16
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744 0000 80B5     		push	{r7, lr}
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 84B0     		sub	sp, sp, #16
 749              		.cfi_def_cfa_offset 24
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 0346     		mov	r3, r0
 753 0008 FB71     		strb	r3, [r7, #7]
 613:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if(!((ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_1_SAR.c ****          (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 25


 616:.\Generated_Source\PSoC5/ADC_1_SAR.c ****          (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 620:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     switch (resolution)
 754              		.loc 1 620 0
 755 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 756 000c 0A2B     		cmp	r3, #10
 757 000e 08D0     		beq	.L52
 758 0010 0C2B     		cmp	r3, #12
 759 0012 02D0     		beq	.L53
 760 0014 082B     		cmp	r3, #8
 761 0016 08D0     		beq	.L54
 762 0018 0BE0     		b	.L56
 763              	.L53:
 621:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 622:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             counts = (int32)ADC_1_SAR_SAR_WRK_MAX_12BIT;
 764              		.loc 1 623 0
 765 001a 4FF48053 		mov	r3, #4096
 766 001e FB60     		str	r3, [r7, #12]
 624:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #if(!((ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                 diff_zero = ADC_1_SAR_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 767              		.loc 1 629 0
 768 0020 0DE0     		b	.L55
 769              	.L52:
 630:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             counts = (int32)ADC_1_SAR_SAR_WRK_MAX_10BIT;
 770              		.loc 1 631 0
 771 0022 4FF48063 		mov	r3, #1024
 772 0026 FB60     		str	r3, [r7, #12]
 632:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #if(!((ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                 diff_zero = ADC_1_SAR_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 773              		.loc 1 637 0
 774 0028 09E0     		b	.L55
 775              	.L54:
 638:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         case (uint8)ADC_1_SAR__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             counts = (int32)ADC_1_SAR_SAR_WRK_MAX_8BIT;
 776              		.loc 1 639 0
 777 002a 4FF48073 		mov	r3, #256
 778 002e FB60     		str	r3, [r7, #12]
 640:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #if(!((ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                 diff_zero = ADC_1_SAR_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 779              		.loc 1 645 0
 780 0030 05E0     		b	.L55
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 26


 781              	.L56:
 646:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             counts = 0;
 782              		.loc 1 647 0
 783 0032 0023     		movs	r3, #0
 784 0034 FB60     		str	r3, [r7, #12]
 648:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #if(!((ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                  (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             CYASSERT(0u != 0u);
 785              		.loc 1 653 0
 786 0036 0020     		movs	r0, #0
 787 0038 FFF7FEFF 		bl	CyHalt
 654:.\Generated_Source\PSoC5/ADC_1_SAR.c ****             break;
 788              		.loc 1 654 0
 789 003c 00BF     		nop
 790              	.L55:
 655:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 656:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_countsPerVolt = 0; /* Clear obsolete variable */
 791              		.loc 1 656 0
 792 003e 0C4B     		ldr	r3, .L57
 793 0040 0022     		movs	r2, #0
 794 0042 1A80     		strh	r2, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_countsPer10Volt = (((counts * ADC_1_SAR_10MV_COUNTS) +
 795              		.loc 1 658 0
 796 0044 FB68     		ldr	r3, [r7, #12]
 797 0046 42F21072 		movw	r2, #10000
 798 004a 02FB03F3 		mul	r3, r2, r3
 799 004e 03F27263 		addw	r3, r3, #1650
 659:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                         ADC_1_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_1_SAR_DEFAULT_REF_VOLTAGE_MV * 2))
 800              		.loc 1 659 0
 801 0052 084A     		ldr	r2, .L57+4
 802 0054 82FB0312 		smull	r1, r2, r2, r3
 803 0058 1A44     		add	r2, r2, r3
 804 005a D212     		asrs	r2, r2, #11
 805 005c DB17     		asrs	r3, r3, #31
 806 005e D31A     		subs	r3, r2, r3
 658:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                         ADC_1_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_1_SAR_DEFAULT_REF_VOLTAGE_MV * 2))
 807              		.loc 1 658 0
 808 0060 054A     		ldr	r2, .L57+8
 809 0062 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 661:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #if( (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_1_SAR.c ****          (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_1_SAR.c ****          (ADC_1_SAR_DEFAULT_RANGE == ADC_1_SAR__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_shift = 0;
 810              		.loc 1 664 0
 811 0064 054B     		ldr	r3, .L57+12
 812 0066 0022     		movs	r2, #0
 813 0068 1A80     		strh	r2, [r3]	@ movhi
 665:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         ADC_1_SAR_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     #endif /* End ADC_1_SAR_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 27


 814              		.loc 1 668 0
 815 006a 1037     		adds	r7, r7, #16
 816              		.cfi_def_cfa_offset 8
 817 006c BD46     		mov	sp, r7
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 006e 80BD     		pop	{r7, pc}
 821              	.L58:
 822              		.align	2
 823              	.L57:
 824 0070 00000000 		.word	ADC_1_SAR_countsPerVolt
 825 0074 EF09E09E 		.word	-1629484561
 826 0078 00000000 		.word	ADC_1_SAR_countsPer10Volt
 827 007c 00000000 		.word	ADC_1_SAR_shift
 828              		.cfi_endproc
 829              	.LFE12:
 830              		.size	ADC_1_SAR_CalcGain, .-ADC_1_SAR_CalcGain
 831              		.section	.text.ADC_1_SAR_SetGain,"ax",%progbits
 832              		.align	2
 833              		.global	ADC_1_SAR_SetGain
 834              		.thumb
 835              		.thumb_func
 836              		.type	ADC_1_SAR_SetGain, %function
 837              	ADC_1_SAR_SetGain:
 838              	.LFB13:
 669:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 670:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 671:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_SetGain
 673:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 675:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 681:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 684:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 687:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 691:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 839              		.loc 1 693 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 28


 846              		.cfi_offset 7, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 0346     		mov	r3, r0
 852 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_countsPer10Volt = (int32)adcGain * 10;
 853              		.loc 1 694 0
 854 000a B7F90620 		ldrsh	r2, [r7, #6]
 855 000e 1346     		mov	r3, r2
 856 0010 9B00     		lsls	r3, r3, #2
 857 0012 1344     		add	r3, r3, r2
 858 0014 5B00     		lsls	r3, r3, #1
 859 0016 1A46     		mov	r2, r3
 860 0018 034B     		ldr	r3, .L60
 861 001a 1A60     		str	r2, [r3]
 695:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 862              		.loc 1 695 0
 863 001c 0C37     		adds	r7, r7, #12
 864              		.cfi_def_cfa_offset 4
 865 001e BD46     		mov	sp, r7
 866              		.cfi_def_cfa_register 13
 867              		@ sp needed
 868 0020 5DF8047B 		ldr	r7, [sp], #4
 869              		.cfi_restore 7
 870              		.cfi_def_cfa_offset 0
 871 0024 7047     		bx	lr
 872              	.L61:
 873 0026 00BF     		.align	2
 874              	.L60:
 875 0028 00000000 		.word	ADC_1_SAR_countsPer10Volt
 876              		.cfi_endproc
 877              	.LFE13:
 878              		.size	ADC_1_SAR_SetGain, .-ADC_1_SAR_SetGain
 879              		.section	.text.ADC_1_SAR_SetScaledGain,"ax",%progbits
 880              		.align	2
 881              		.global	ADC_1_SAR_SetScaledGain
 882              		.thumb
 883              		.thumb_func
 884              		.type	ADC_1_SAR_SetScaledGain, %function
 885              	ADC_1_SAR_SetScaledGain:
 886              	.LFB14:
 696:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 697:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 698:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 702:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 708:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int32 adcGain  counts per 10 volt
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 29


 710:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 711:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 714:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 718:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_1_SAR.c **** void ADC_1_SAR_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 887              		.loc 1 720 0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 8
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              		.cfi_def_cfa_offset 4
 894              		.cfi_offset 7, -4
 895 0002 83B0     		sub	sp, sp, #12
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899 0006 7860     		str	r0, [r7, #4]
 721:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     ADC_1_SAR_countsPer10Volt = adcGain;
 900              		.loc 1 721 0
 901 0008 034A     		ldr	r2, .L63
 902 000a 7B68     		ldr	r3, [r7, #4]
 903 000c 1360     		str	r3, [r2]
 722:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 904              		.loc 1 722 0
 905 000e 0C37     		adds	r7, r7, #12
 906              		.cfi_def_cfa_offset 4
 907 0010 BD46     		mov	sp, r7
 908              		.cfi_def_cfa_register 13
 909              		@ sp needed
 910 0012 5DF8047B 		ldr	r7, [sp], #4
 911              		.cfi_restore 7
 912              		.cfi_def_cfa_offset 0
 913 0016 7047     		bx	lr
 914              	.L64:
 915              		.align	2
 916              	.L63:
 917 0018 00000000 		.word	ADC_1_SAR_countsPer10Volt
 918              		.cfi_endproc
 919              	.LFE14:
 920              		.size	ADC_1_SAR_SetScaledGain, .-ADC_1_SAR_SetScaledGain
 921              		.section	.text.ADC_1_SAR_CountsTo_mVolts,"ax",%progbits
 922              		.align	2
 923              		.global	ADC_1_SAR_CountsTo_mVolts
 924              		.thumb
 925              		.thumb_func
 926              		.type	ADC_1_SAR_CountsTo_mVolts, %function
 927              	ADC_1_SAR_CountsTo_mVolts:
 928              	.LFB15:
 723:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 724:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 30


 725:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 729:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 732:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 735:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 738:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 742:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_1_SAR.c **** int16 ADC_1_SAR_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 929              		.loc 1 744 0
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 16
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 0000 80B4     		push	{r7}
 935              		.cfi_def_cfa_offset 4
 936              		.cfi_offset 7, -4
 937 0002 85B0     		sub	sp, sp, #20
 938              		.cfi_def_cfa_offset 24
 939 0004 00AF     		add	r7, sp, #0
 940              		.cfi_def_cfa_register 7
 941 0006 0346     		mov	r3, r0
 942 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 748:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     if(ADC_1_SAR_countsPerVolt != 0)
 943              		.loc 1 748 0
 944 000a 1D4B     		ldr	r3, .L71
 945 000c 1B88     		ldrh	r3, [r3]	@ movhi
 946 000e 9BB2     		uxth	r3, r3
 947 0010 002B     		cmp	r3, #0
 948 0012 09D0     		beq	.L66
 749:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = (int32)ADC_1_SAR_countsPerVolt * 10;
 949              		.loc 1 750 0
 950 0014 1A4B     		ldr	r3, .L71
 951 0016 1B88     		ldrh	r3, [r3]	@ movhi
 952 0018 9BB2     		uxth	r3, r3
 953 001a 1AB2     		sxth	r2, r3
 954 001c 1346     		mov	r3, r2
 955 001e 9B00     		lsls	r3, r3, #2
 956 0020 1344     		add	r3, r3, r2
 957 0022 5B00     		lsls	r3, r3, #1
 958 0024 FB60     		str	r3, [r7, #12]
 959 0026 02E0     		b	.L67
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 31


 960              	.L66:
 751:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 752:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     else
 753:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 754:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = ADC_1_SAR_countsPer10Volt;
 961              		.loc 1 754 0
 962 0028 164B     		ldr	r3, .L71+4
 963 002a 1B68     		ldr	r3, [r3]
 964 002c FB60     		str	r3, [r7, #12]
 965              	.L67:
 755:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 756:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 757:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     adcCounts -= ADC_1_SAR_offset;
 966              		.loc 1 758 0
 967 002e 164B     		ldr	r3, .L71+8
 968 0030 1B88     		ldrh	r3, [r3]	@ movhi
 969 0032 9BB2     		uxth	r3, r3
 970 0034 FA88     		ldrh	r2, [r7, #6]
 971 0036 9BB2     		uxth	r3, r3
 972 0038 D31A     		subs	r3, r2, r3
 973 003a 9BB2     		uxth	r3, r3
 974 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_1_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 975              		.loc 1 760 0
 976 003e B7F90630 		ldrsh	r3, [r7, #6]
 977 0042 42F21072 		movw	r2, #10000
 978 0046 02FB03F2 		mul	r2, r2, r3
 761:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 979              		.loc 1 761 0
 980 004a B7F90630 		ldrsh	r3, [r7, #6]
 981 004e 002B     		cmp	r3, #0
 982 0050 04DD     		ble	.L68
 983              		.loc 1 761 0 is_stmt 0 discriminator 1
 984 0052 FB68     		ldr	r3, [r7, #12]
 985 0054 D90F     		lsrs	r1, r3, #31
 986 0056 0B44     		add	r3, r3, r1
 987 0058 5B10     		asrs	r3, r3, #1
 988 005a 04E0     		b	.L69
 989              	.L68:
 990              		.loc 1 761 0 discriminator 2
 991 005c FB68     		ldr	r3, [r7, #12]
 992 005e D90F     		lsrs	r1, r3, #31
 993 0060 0B44     		add	r3, r3, r1
 994 0062 5B10     		asrs	r3, r3, #1
 995 0064 5B42     		negs	r3, r3
 996              	.L69:
 760:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 997              		.loc 1 760 0 is_stmt 1
 998 0066 1A44     		add	r2, r2, r3
 999              		.loc 1 761 0
 1000 0068 FB68     		ldr	r3, [r7, #12]
 1001 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:.\Generated_Source\PSoC5/ADC_1_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1002              		.loc 1 760 0
 1003 006e 7B81     		strh	r3, [r7, #10]	@ movhi
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 32


 762:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 763:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return( mVolts );
 1004              		.loc 1 763 0
 1005 0070 7B89     		ldrh	r3, [r7, #10]
 1006 0072 1BB2     		sxth	r3, r3
 764:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 1007              		.loc 1 764 0
 1008 0074 1846     		mov	r0, r3
 1009 0076 1437     		adds	r7, r7, #20
 1010              		.cfi_def_cfa_offset 4
 1011 0078 BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 007a 5DF8047B 		ldr	r7, [sp], #4
 1015              		.cfi_restore 7
 1016              		.cfi_def_cfa_offset 0
 1017 007e 7047     		bx	lr
 1018              	.L72:
 1019              		.align	2
 1020              	.L71:
 1021 0080 00000000 		.word	ADC_1_SAR_countsPerVolt
 1022 0084 00000000 		.word	ADC_1_SAR_countsPer10Volt
 1023 0088 00000000 		.word	ADC_1_SAR_offset
 1024              		.cfi_endproc
 1025              	.LFE15:
 1026              		.size	ADC_1_SAR_CountsTo_mVolts, .-ADC_1_SAR_CountsTo_mVolts
 1027              		.global	__aeabi_ldivmod
 1028              		.section	.text.ADC_1_SAR_CountsTo_uVolts,"ax",%progbits
 1029              		.align	2
 1030              		.global	ADC_1_SAR_CountsTo_uVolts
 1031              		.thumb
 1032              		.thumb_func
 1033              		.type	ADC_1_SAR_CountsTo_uVolts, %function
 1034              	ADC_1_SAR_CountsTo_uVolts:
 1035              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 766:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 767:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 771:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 774:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 777:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 780:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 784:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_1_SAR.c **** int32 ADC_1_SAR_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 33


 1036              		.loc 1 786 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 24
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040 0000 B0B5     		push	{r4, r5, r7, lr}
 1041              		.cfi_def_cfa_offset 16
 1042              		.cfi_offset 4, -16
 1043              		.cfi_offset 5, -12
 1044              		.cfi_offset 7, -8
 1045              		.cfi_offset 14, -4
 1046 0002 86B0     		sub	sp, sp, #24
 1047              		.cfi_def_cfa_offset 40
 1048 0004 00AF     		add	r7, sp, #0
 1049              		.cfi_def_cfa_register 7
 1050 0006 0346     		mov	r3, r0
 1051 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 788:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 791:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     if(ADC_1_SAR_countsPerVolt != 0)
 1052              		.loc 1 791 0
 1053 000a 1E4B     		ldr	r3, .L77
 1054 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1055 000e 9BB2     		uxth	r3, r3
 1056 0010 002B     		cmp	r3, #0
 1057 0012 09D0     		beq	.L74
 792:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = (int32)ADC_1_SAR_countsPerVolt * 10;
 1058              		.loc 1 793 0
 1059 0014 1B4B     		ldr	r3, .L77
 1060 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1061 0018 9BB2     		uxth	r3, r3
 1062 001a 1AB2     		sxth	r2, r3
 1063 001c 1346     		mov	r3, r2
 1064 001e 9B00     		lsls	r3, r3, #2
 1065 0020 1344     		add	r3, r3, r2
 1066 0022 5B00     		lsls	r3, r3, #1
 1067 0024 7B61     		str	r3, [r7, #20]
 1068 0026 02E0     		b	.L75
 1069              	.L74:
 794:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 795:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     else
 796:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 797:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = ADC_1_SAR_countsPer10Volt;
 1070              		.loc 1 797 0
 1071 0028 174B     		ldr	r3, .L77+4
 1072 002a 1B68     		ldr	r3, [r3]
 1073 002c 7B61     		str	r3, [r7, #20]
 1074              	.L75:
 798:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 799:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 800:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     adcCounts -= ADC_1_SAR_offset;
 1075              		.loc 1 801 0
 1076 002e 174B     		ldr	r3, .L77+8
 1077 0030 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 34


 1078 0032 9BB2     		uxth	r3, r3
 1079 0034 FA88     		ldrh	r2, [r7, #6]
 1080 0036 9BB2     		uxth	r3, r3
 1081 0038 D31A     		subs	r3, r2, r3
 1082 003a 9BB2     		uxth	r3, r3
 1083 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     */
 805:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     uVolts = (( (int64)adcCounts * ADC_1_SAR_10UV_COUNTS ) / countsPer10Volt);
 1084              		.loc 1 805 0
 1085 003e B7F90620 		ldrsh	r2, [r7, #6]
 1086 0042 4FEAE273 		asr	r3, r2, #31
 1087 0046 1249     		ldr	r1, .L77+12
 1088 0048 01FB03F0 		mul	r0, r1, r3
 1089 004c 0021     		movs	r1, #0
 1090 004e 01FB02F1 		mul	r1, r1, r2
 1091 0052 0144     		add	r1, r1, r0
 1092 0054 0E48     		ldr	r0, .L77+12
 1093 0056 A2FB0023 		umull	r2, r3, r2, r0
 1094 005a 1944     		add	r1, r1, r3
 1095 005c 0B46     		mov	r3, r1
 1096 005e 7969     		ldr	r1, [r7, #20]
 1097 0060 0C46     		mov	r4, r1
 1098 0062 4FEAE475 		asr	r5, r4, #31
 1099 0066 1046     		mov	r0, r2
 1100 0068 1946     		mov	r1, r3
 1101 006a 2246     		mov	r2, r4
 1102 006c 2B46     		mov	r3, r5
 1103 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1104 0072 0246     		mov	r2, r0
 1105 0074 0B46     		mov	r3, r1
 1106 0076 C7E90223 		strd	r2, [r7, #8]
 806:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 807:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return( uVolts );
 1107              		.loc 1 807 0
 1108 007a BB68     		ldr	r3, [r7, #8]
 808:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 1109              		.loc 1 808 0
 1110 007c 1846     		mov	r0, r3
 1111 007e 1837     		adds	r7, r7, #24
 1112              		.cfi_def_cfa_offset 16
 1113 0080 BD46     		mov	sp, r7
 1114              		.cfi_def_cfa_register 13
 1115              		@ sp needed
 1116 0082 B0BD     		pop	{r4, r5, r7, pc}
 1117              	.L78:
 1118              		.align	2
 1119              	.L77:
 1120 0084 00000000 		.word	ADC_1_SAR_countsPerVolt
 1121 0088 00000000 		.word	ADC_1_SAR_countsPer10Volt
 1122 008c 00000000 		.word	ADC_1_SAR_offset
 1123 0090 80969800 		.word	10000000
 1124              		.cfi_endproc
 1125              	.LFE16:
 1126              		.size	ADC_1_SAR_CountsTo_uVolts, .-ADC_1_SAR_CountsTo_uVolts
 1127              		.global	__aeabi_i2f
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 35


 1128              		.global	__aeabi_fmul
 1129              		.global	__aeabi_fdiv
 1130              		.section	.text.ADC_1_SAR_CountsTo_Volts,"ax",%progbits
 1131              		.align	2
 1132              		.global	ADC_1_SAR_CountsTo_Volts
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	ADC_1_SAR_CountsTo_Volts, %function
 1136              	ADC_1_SAR_CountsTo_Volts:
 1137              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 810:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 811:.\Generated_Source\PSoC5/ADC_1_SAR.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Function Name: ADC_1_SAR_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_1_SAR.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 815:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 818:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 821:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 824:.\Generated_Source\PSoC5/ADC_1_SAR.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *  ADC_1_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *
 828:.\Generated_Source\PSoC5/ADC_1_SAR.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_1_SAR.c **** float32 ADC_1_SAR_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_1_SAR.c **** {
 1138              		.loc 1 830 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 16
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 90B5     		push	{r4, r7, lr}
 1143              		.cfi_def_cfa_offset 12
 1144              		.cfi_offset 4, -12
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 85B0     		sub	sp, sp, #20
 1148              		.cfi_def_cfa_offset 32
 1149 0004 00AF     		add	r7, sp, #0
 1150              		.cfi_def_cfa_register 7
 1151 0006 0346     		mov	r3, r0
 1152 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 834:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     if(ADC_1_SAR_countsPerVolt != 0)
 1153              		.loc 1 834 0
 1154 000a 1A4B     		ldr	r3, .L83
 1155 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1156 000e 9BB2     		uxth	r3, r3
 1157 0010 002B     		cmp	r3, #0
 1158 0012 09D0     		beq	.L80
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 36


 835:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = (int32)ADC_1_SAR_countsPerVolt * 10;
 1159              		.loc 1 836 0
 1160 0014 174B     		ldr	r3, .L83
 1161 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1162 0018 9BB2     		uxth	r3, r3
 1163 001a 1AB2     		sxth	r2, r3
 1164 001c 1346     		mov	r3, r2
 1165 001e 9B00     		lsls	r3, r3, #2
 1166 0020 1344     		add	r3, r3, r2
 1167 0022 5B00     		lsls	r3, r3, #1
 1168 0024 FB60     		str	r3, [r7, #12]
 1169 0026 02E0     		b	.L81
 1170              	.L80:
 837:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 838:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     else
 839:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     {
 840:.\Generated_Source\PSoC5/ADC_1_SAR.c ****         countsPer10Volt = ADC_1_SAR_countsPer10Volt;
 1171              		.loc 1 840 0
 1172 0028 134B     		ldr	r3, .L83+4
 1173 002a 1B68     		ldr	r3, [r3]
 1174 002c FB60     		str	r3, [r7, #12]
 1175              	.L81:
 841:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     }
 842:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 843:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     adcCounts -= ADC_1_SAR_offset;
 1176              		.loc 1 844 0
 1177 002e 134B     		ldr	r3, .L83+8
 1178 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1179 0032 9BB2     		uxth	r3, r3
 1180 0034 FA88     		ldrh	r2, [r7, #6]
 1181 0036 9BB2     		uxth	r3, r3
 1182 0038 D31A     		subs	r3, r2, r3
 1183 003a 9BB2     		uxth	r3, r3
 1184 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
 846:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     volts = ((float32)adcCounts * ADC_1_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1185              		.loc 1 846 0
 1186 003e B7F90630 		ldrsh	r3, [r7, #6]
 1187 0042 1846     		mov	r0, r3
 1188 0044 FFF7FEFF 		bl	__aeabi_i2f
 1189 0048 0346     		mov	r3, r0
 1190 004a 1846     		mov	r0, r3
 1191 004c 0C49     		ldr	r1, .L83+12
 1192 004e FFF7FEFF 		bl	__aeabi_fmul
 1193 0052 0346     		mov	r3, r0
 1194 0054 1C46     		mov	r4, r3
 1195 0056 F868     		ldr	r0, [r7, #12]
 1196 0058 FFF7FEFF 		bl	__aeabi_i2f
 1197 005c 0346     		mov	r3, r0
 1198 005e 2046     		mov	r0, r4
 1199 0060 1946     		mov	r1, r3
 1200 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1201 0066 0346     		mov	r3, r0
 1202 0068 BB60     		str	r3, [r7, #8]	@ float
 847:.\Generated_Source\PSoC5/ADC_1_SAR.c **** 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 37


 848:.\Generated_Source\PSoC5/ADC_1_SAR.c ****     return( volts );
 1203              		.loc 1 848 0
 1204 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:.\Generated_Source\PSoC5/ADC_1_SAR.c **** }
 1205              		.loc 1 849 0
 1206 006c 1846     		mov	r0, r3
 1207 006e 1437     		adds	r7, r7, #20
 1208              		.cfi_def_cfa_offset 12
 1209 0070 BD46     		mov	sp, r7
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 0072 90BD     		pop	{r4, r7, pc}
 1213              	.L84:
 1214              		.align	2
 1215              	.L83:
 1216 0074 00000000 		.word	ADC_1_SAR_countsPerVolt
 1217 0078 00000000 		.word	ADC_1_SAR_countsPer10Volt
 1218 007c 00000000 		.word	ADC_1_SAR_offset
 1219 0080 00002041 		.word	1092616192
 1220              		.cfi_endproc
 1221              	.LFE17:
 1222              		.size	ADC_1_SAR_CountsTo_Volts, .-ADC_1_SAR_CountsTo_Volts
 1223              		.text
 1224              	.Letext0:
 1225              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1226              		.section	.debug_info,"",%progbits
 1227              	.Ldebug_info0:
 1228 0000 50040000 		.4byte	0x450
 1229 0004 0400     		.2byte	0x4
 1230 0006 00000000 		.4byte	.Ldebug_abbrev0
 1231 000a 04       		.byte	0x4
 1232 000b 01       		.uleb128 0x1
 1233 000c 4C020000 		.4byte	.LASF57
 1234 0010 01       		.byte	0x1
 1235 0011 35010000 		.4byte	.LASF58
 1236 0015 87000000 		.4byte	.LASF59
 1237 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1238 001d 00000000 		.4byte	0
 1239 0021 00000000 		.4byte	.Ldebug_line0
 1240 0025 02       		.uleb128 0x2
 1241 0026 04       		.byte	0x4
 1242 0027 05       		.byte	0x5
 1243 0028 696E7400 		.ascii	"int\000"
 1244 002c 03       		.uleb128 0x3
 1245 002d 04       		.byte	0x4
 1246 002e 07       		.byte	0x7
 1247 002f 62010000 		.4byte	.LASF0
 1248 0033 03       		.uleb128 0x3
 1249 0034 01       		.byte	0x1
 1250 0035 06       		.byte	0x6
 1251 0036 D4000000 		.4byte	.LASF1
 1252 003a 03       		.uleb128 0x3
 1253 003b 01       		.byte	0x1
 1254 003c 08       		.byte	0x8
 1255 003d 20030000 		.4byte	.LASF2
 1256 0041 03       		.uleb128 0x3
 1257 0042 02       		.byte	0x2
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 38


 1258 0043 05       		.byte	0x5
 1259 0044 48030000 		.4byte	.LASF3
 1260 0048 03       		.uleb128 0x3
 1261 0049 02       		.byte	0x2
 1262 004a 07       		.byte	0x7
 1263 004b 9D010000 		.4byte	.LASF4
 1264 004f 03       		.uleb128 0x3
 1265 0050 04       		.byte	0x4
 1266 0051 05       		.byte	0x5
 1267 0052 F8000000 		.4byte	.LASF5
 1268 0056 03       		.uleb128 0x3
 1269 0057 04       		.byte	0x4
 1270 0058 07       		.byte	0x7
 1271 0059 85010000 		.4byte	.LASF6
 1272 005d 03       		.uleb128 0x3
 1273 005e 08       		.byte	0x8
 1274 005f 05       		.byte	0x5
 1275 0060 C6000000 		.4byte	.LASF7
 1276 0064 03       		.uleb128 0x3
 1277 0065 08       		.byte	0x8
 1278 0066 07       		.byte	0x7
 1279 0067 5D000000 		.4byte	.LASF8
 1280 006b 03       		.uleb128 0x3
 1281 006c 04       		.byte	0x4
 1282 006d 07       		.byte	0x7
 1283 006e 1F020000 		.4byte	.LASF9
 1284 0072 03       		.uleb128 0x3
 1285 0073 01       		.byte	0x1
 1286 0074 08       		.byte	0x8
 1287 0075 8D030000 		.4byte	.LASF10
 1288 0079 04       		.uleb128 0x4
 1289 007a 07010000 		.4byte	.LASF11
 1290 007e 02       		.byte	0x2
 1291 007f C2       		.byte	0xc2
 1292 0080 3A000000 		.4byte	0x3a
 1293 0084 04       		.uleb128 0x4
 1294 0085 1A000000 		.4byte	.LASF12
 1295 0089 02       		.byte	0x2
 1296 008a C3       		.byte	0xc3
 1297 008b 48000000 		.4byte	0x48
 1298 008f 04       		.uleb128 0x4
 1299 0090 B0010000 		.4byte	.LASF13
 1300 0094 02       		.byte	0x2
 1301 0095 C5       		.byte	0xc5
 1302 0096 33000000 		.4byte	0x33
 1303 009a 04       		.uleb128 0x4
 1304 009b F3030000 		.4byte	.LASF14
 1305 009f 02       		.byte	0x2
 1306 00a0 C6       		.byte	0xc6
 1307 00a1 41000000 		.4byte	0x41
 1308 00a5 04       		.uleb128 0x4
 1309 00a6 F2000000 		.4byte	.LASF15
 1310 00aa 02       		.byte	0x2
 1311 00ab C7       		.byte	0xc7
 1312 00ac 4F000000 		.4byte	0x4f
 1313 00b0 04       		.uleb128 0x4
 1314 00b1 17020000 		.4byte	.LASF16
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 39


 1315 00b5 02       		.byte	0x2
 1316 00b6 C8       		.byte	0xc8
 1317 00b7 BB000000 		.4byte	0xbb
 1318 00bb 03       		.uleb128 0x3
 1319 00bc 04       		.byte	0x4
 1320 00bd 04       		.byte	0x4
 1321 00be E0020000 		.4byte	.LASF17
 1322 00c2 03       		.uleb128 0x3
 1323 00c3 08       		.byte	0x8
 1324 00c4 04       		.byte	0x4
 1325 00c5 0D010000 		.4byte	.LASF18
 1326 00c9 04       		.uleb128 0x4
 1327 00ca DA020000 		.4byte	.LASF19
 1328 00ce 02       		.byte	0x2
 1329 00cf CD       		.byte	0xcd
 1330 00d0 5D000000 		.4byte	0x5d
 1331 00d4 05       		.uleb128 0x5
 1332 00d5 04030000 		.4byte	.LASF20
 1333 00d9 02       		.byte	0x2
 1334 00da 6C01     		.2byte	0x16c
 1335 00dc E0000000 		.4byte	0xe0
 1336 00e0 06       		.uleb128 0x6
 1337 00e1 79000000 		.4byte	0x79
 1338 00e5 05       		.uleb128 0x5
 1339 00e6 01010000 		.4byte	.LASF21
 1340 00ea 02       		.byte	0x2
 1341 00eb 6D01     		.2byte	0x16d
 1342 00ed F1000000 		.4byte	0xf1
 1343 00f1 06       		.uleb128 0x6
 1344 00f2 84000000 		.4byte	0x84
 1345 00f6 07       		.uleb128 0x7
 1346 00f7 CF010000 		.4byte	.LASF22
 1347 00fb 01       		.byte	0x1
 1348 00fc 4A       		.byte	0x4a
 1349 00fd 00000000 		.4byte	.LFB0
 1350 0101 20000000 		.4byte	.LFE0-.LFB0
 1351 0105 01       		.uleb128 0x1
 1352 0106 9C       		.byte	0x9c
 1353 0107 07       		.uleb128 0x7
 1354 0108 76010000 		.4byte	.LASF23
 1355 010c 01       		.byte	0x1
 1356 010d 6A       		.byte	0x6a
 1357 010e 00000000 		.4byte	.LFB1
 1358 0112 2C000000 		.4byte	.LFE1-.LFB1
 1359 0116 01       		.uleb128 0x1
 1360 0117 9C       		.byte	0x9c
 1361 0118 08       		.uleb128 0x8
 1362 0119 24010000 		.4byte	.LASF26
 1363 011d 01       		.byte	0x1
 1364 011e 8F       		.byte	0x8f
 1365 011f 00000000 		.4byte	.LFB2
 1366 0123 C0000000 		.4byte	.LFE2-.LFB2
 1367 0127 01       		.uleb128 0x1
 1368 0128 9C       		.byte	0x9c
 1369 0129 4A010000 		.4byte	0x14a
 1370 012d 09       		.uleb128 0x9
 1371 012e 1C040000 		.4byte	.LASF24
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 40


 1372 0132 01       		.byte	0x1
 1373 0133 91       		.byte	0x91
 1374 0134 79000000 		.4byte	0x79
 1375 0138 02       		.uleb128 0x2
 1376 0139 91       		.byte	0x91
 1377 013a 76       		.sleb128 -10
 1378 013b 09       		.uleb128 0x9
 1379 013c C9030000 		.4byte	.LASF25
 1380 0140 01       		.byte	0x1
 1381 0141 92       		.byte	0x92
 1382 0142 79000000 		.4byte	0x79
 1383 0146 02       		.uleb128 0x2
 1384 0147 91       		.byte	0x91
 1385 0148 77       		.sleb128 -9
 1386 0149 00       		.byte	0
 1387 014a 08       		.uleb128 0x8
 1388 014b 0D040000 		.4byte	.LASF27
 1389 014f 01       		.byte	0x1
 1390 0150 F8       		.byte	0xf8
 1391 0151 00000000 		.4byte	.LFB3
 1392 0155 58000000 		.4byte	.LFE3-.LFB3
 1393 0159 01       		.uleb128 0x1
 1394 015a 9C       		.byte	0x9c
 1395 015b 6E010000 		.4byte	0x16e
 1396 015f 09       		.uleb128 0x9
 1397 0160 C9030000 		.4byte	.LASF25
 1398 0164 01       		.byte	0x1
 1399 0165 FA       		.byte	0xfa
 1400 0166 79000000 		.4byte	0x79
 1401 016a 02       		.uleb128 0x2
 1402 016b 91       		.byte	0x91
 1403 016c 77       		.sleb128 -9
 1404 016d 00       		.byte	0
 1405 016e 0A       		.uleb128 0xa
 1406 016f 74000000 		.4byte	.LASF28
 1407 0173 01       		.byte	0x1
 1408 0174 2201     		.2byte	0x122
 1409 0176 00000000 		.4byte	.LFB4
 1410 017a 40000000 		.4byte	.LFE4-.LFB4
 1411 017e 01       		.uleb128 0x1
 1412 017f 9C       		.byte	0x9c
 1413 0180 A3010000 		.4byte	0x1a3
 1414 0184 0B       		.uleb128 0xb
 1415 0185 FE020000 		.4byte	.LASF30
 1416 0189 01       		.byte	0x1
 1417 018a 2201     		.2byte	0x122
 1418 018c 79000000 		.4byte	0x79
 1419 0190 02       		.uleb128 0x2
 1420 0191 91       		.byte	0x91
 1421 0192 6F       		.sleb128 -17
 1422 0193 0C       		.uleb128 0xc
 1423 0194 1C040000 		.4byte	.LASF24
 1424 0198 01       		.byte	0x1
 1425 0199 2401     		.2byte	0x124
 1426 019b 79000000 		.4byte	0x79
 1427 019f 02       		.uleb128 0x2
 1428 01a0 91       		.byte	0x91
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 41


 1429 01a1 77       		.sleb128 -9
 1430 01a2 00       		.byte	0
 1431 01a3 0D       		.uleb128 0xd
 1432 01a4 DF010000 		.4byte	.LASF29
 1433 01a8 01       		.byte	0x1
 1434 01a9 5401     		.2byte	0x154
 1435 01ab 00000000 		.4byte	.LFB5
 1436 01af 50000000 		.4byte	.LFE5-.LFB5
 1437 01b3 01       		.uleb128 0x1
 1438 01b4 9C       		.byte	0x9c
 1439 01b5 D8010000 		.4byte	0x1d8
 1440 01b9 0B       		.uleb128 0xb
 1441 01ba 6C030000 		.4byte	.LASF31
 1442 01be 01       		.byte	0x1
 1443 01bf 5401     		.2byte	0x154
 1444 01c1 79000000 		.4byte	0x79
 1445 01c5 02       		.uleb128 0x2
 1446 01c6 91       		.byte	0x91
 1447 01c7 6F       		.sleb128 -17
 1448 01c8 0C       		.uleb128 0xc
 1449 01c9 1C040000 		.4byte	.LASF24
 1450 01cd 01       		.byte	0x1
 1451 01ce 5601     		.2byte	0x156
 1452 01d0 79000000 		.4byte	0x79
 1453 01d4 02       		.uleb128 0x2
 1454 01d5 91       		.byte	0x91
 1455 01d6 77       		.sleb128 -9
 1456 01d7 00       		.byte	0
 1457 01d8 0E       		.uleb128 0xe
 1458 01d9 09030000 		.4byte	.LASF32
 1459 01dd 01       		.byte	0x1
 1460 01de 9101     		.2byte	0x191
 1461 01e0 00000000 		.4byte	.LFB6
 1462 01e4 20000000 		.4byte	.LFE6-.LFB6
 1463 01e8 01       		.uleb128 0x1
 1464 01e9 9C       		.byte	0x9c
 1465 01ea 0E       		.uleb128 0xe
 1466 01eb B3030000 		.4byte	.LASF33
 1467 01ef 01       		.byte	0x1
 1468 01f0 B301     		.2byte	0x1b3
 1469 01f2 00000000 		.4byte	.LFB7
 1470 01f6 20000000 		.4byte	.LFE7-.LFB7
 1471 01fa 01       		.uleb128 0x1
 1472 01fb 9C       		.byte	0x9c
 1473 01fc 0F       		.uleb128 0xf
 1474 01fd 2E030000 		.4byte	.LASF36
 1475 0201 01       		.byte	0x1
 1476 0202 DB01     		.2byte	0x1db
 1477 0204 79000000 		.4byte	0x79
 1478 0208 00000000 		.4byte	.LFB8
 1479 020c 40000000 		.4byte	.LFE8-.LFB8
 1480 0210 01       		.uleb128 0x1
 1481 0211 9C       		.byte	0x9c
 1482 0212 35020000 		.4byte	0x235
 1483 0216 0B       		.uleb128 0xb
 1484 0217 5A010000 		.4byte	.LASF34
 1485 021b 01       		.byte	0x1
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 42


 1486 021c DB01     		.2byte	0x1db
 1487 021e 79000000 		.4byte	0x79
 1488 0222 02       		.uleb128 0x2
 1489 0223 91       		.byte	0x91
 1490 0224 6F       		.sleb128 -17
 1491 0225 0C       		.uleb128 0xc
 1492 0226 EC030000 		.4byte	.LASF35
 1493 022a 01       		.byte	0x1
 1494 022b DD01     		.2byte	0x1dd
 1495 022d 79000000 		.4byte	0x79
 1496 0231 02       		.uleb128 0x2
 1497 0232 91       		.byte	0x91
 1498 0233 77       		.sleb128 -9
 1499 0234 00       		.byte	0
 1500 0235 10       		.uleb128 0x10
 1501 0236 29000000 		.4byte	.LASF60
 1502 023a 01       		.byte	0x1
 1503 023b 0802     		.2byte	0x208
 1504 023d 8F000000 		.4byte	0x8f
 1505 0241 00000000 		.4byte	.LFB9
 1506 0245 2C000000 		.4byte	.LFE9-.LFB9
 1507 0249 01       		.uleb128 0x1
 1508 024a 9C       		.byte	0x9c
 1509 024b 11       		.uleb128 0x11
 1510 024c 77030000 		.4byte	.LASF37
 1511 0250 01       		.byte	0x1
 1512 0251 2602     		.2byte	0x226
 1513 0253 9A000000 		.4byte	0x9a
 1514 0257 00000000 		.4byte	.LFB10
 1515 025b 34000000 		.4byte	.LFE10-.LFB10
 1516 025f 01       		.uleb128 0x1
 1517 0260 9C       		.byte	0x9c
 1518 0261 75020000 		.4byte	0x275
 1519 0265 12       		.uleb128 0x12
 1520 0266 72657300 		.ascii	"res\000"
 1521 026a 01       		.byte	0x1
 1522 026b 2802     		.2byte	0x228
 1523 026d 84000000 		.4byte	0x84
 1524 0271 02       		.uleb128 0x2
 1525 0272 91       		.byte	0x91
 1526 0273 76       		.sleb128 -10
 1527 0274 00       		.byte	0
 1528 0275 0A       		.uleb128 0xa
 1529 0276 F9030000 		.4byte	.LASF38
 1530 027a 01       		.byte	0x1
 1531 027b 4902     		.2byte	0x249
 1532 027d 00000000 		.4byte	.LFB11
 1533 0281 20000000 		.4byte	.LFE11-.LFB11
 1534 0285 01       		.uleb128 0x1
 1535 0286 9C       		.byte	0x9c
 1536 0287 9B020000 		.4byte	0x29b
 1537 028b 0B       		.uleb128 0xb
 1538 028c 92030000 		.4byte	.LASF39
 1539 0290 01       		.byte	0x1
 1540 0291 4902     		.2byte	0x249
 1541 0293 9A000000 		.4byte	0x9a
 1542 0297 02       		.uleb128 0x2
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 43


 1543 0298 91       		.byte	0x91
 1544 0299 76       		.sleb128 -10
 1545 029a 00       		.byte	0
 1546 029b 13       		.uleb128 0x13
 1547 029c 39020000 		.4byte	.LASF61
 1548 02a0 01       		.byte	0x1
 1549 02a1 6302     		.2byte	0x263
 1550 02a3 00000000 		.4byte	.LFB12
 1551 02a7 80000000 		.4byte	.LFE12-.LFB12
 1552 02ab 01       		.uleb128 0x1
 1553 02ac 9C       		.byte	0x9c
 1554 02ad D0020000 		.4byte	0x2d0
 1555 02b1 0B       		.uleb128 0xb
 1556 02b2 6C030000 		.4byte	.LASF31
 1557 02b6 01       		.byte	0x1
 1558 02b7 6302     		.2byte	0x263
 1559 02b9 79000000 		.4byte	0x79
 1560 02bd 02       		.uleb128 0x2
 1561 02be 91       		.byte	0x91
 1562 02bf 6F       		.sleb128 -17
 1563 02c0 0C       		.uleb128 0xc
 1564 02c1 3E000000 		.4byte	.LASF40
 1565 02c5 01       		.byte	0x1
 1566 02c6 6502     		.2byte	0x265
 1567 02c8 A5000000 		.4byte	0xa5
 1568 02cc 02       		.uleb128 0x2
 1569 02cd 91       		.byte	0x91
 1570 02ce 74       		.sleb128 -12
 1571 02cf 00       		.byte	0
 1572 02d0 0A       		.uleb128 0xa
 1573 02d1 E0000000 		.4byte	.LASF41
 1574 02d5 01       		.byte	0x1
 1575 02d6 B402     		.2byte	0x2b4
 1576 02d8 00000000 		.4byte	.LFB13
 1577 02dc 2C000000 		.4byte	.LFE13-.LFB13
 1578 02e0 01       		.uleb128 0x1
 1579 02e1 9C       		.byte	0x9c
 1580 02e2 F6020000 		.4byte	0x2f6
 1581 02e6 0B       		.uleb128 0xb
 1582 02e7 21000000 		.4byte	.LASF42
 1583 02eb 01       		.byte	0x1
 1584 02ec B402     		.2byte	0x2b4
 1585 02ee 9A000000 		.4byte	0x9a
 1586 02f2 02       		.uleb128 0x2
 1587 02f3 91       		.byte	0x91
 1588 02f4 76       		.sleb128 -10
 1589 02f5 00       		.byte	0
 1590 02f6 0A       		.uleb128 0xa
 1591 02f7 E6020000 		.4byte	.LASF43
 1592 02fb 01       		.byte	0x1
 1593 02fc CF02     		.2byte	0x2cf
 1594 02fe 00000000 		.4byte	.LFB14
 1595 0302 1C000000 		.4byte	.LFE14-.LFB14
 1596 0306 01       		.uleb128 0x1
 1597 0307 9C       		.byte	0x9c
 1598 0308 1C030000 		.4byte	0x31c
 1599 030c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 44


 1600 030d 21000000 		.4byte	.LASF42
 1601 0311 01       		.byte	0x1
 1602 0312 CF02     		.2byte	0x2cf
 1603 0314 A5000000 		.4byte	0xa5
 1604 0318 02       		.uleb128 0x2
 1605 0319 91       		.byte	0x91
 1606 031a 74       		.sleb128 -12
 1607 031b 00       		.byte	0
 1608 031c 11       		.uleb128 0x11
 1609 031d B5010000 		.4byte	.LASF44
 1610 0321 01       		.byte	0x1
 1611 0322 E702     		.2byte	0x2e7
 1612 0324 9A000000 		.4byte	0x9a
 1613 0328 00000000 		.4byte	.LFB15
 1614 032c 8C000000 		.4byte	.LFE15-.LFB15
 1615 0330 01       		.uleb128 0x1
 1616 0331 9C       		.byte	0x9c
 1617 0332 64030000 		.4byte	0x364
 1618 0336 0B       		.uleb128 0xb
 1619 0337 99030000 		.4byte	.LASF45
 1620 033b 01       		.byte	0x1
 1621 033c E702     		.2byte	0x2e7
 1622 033e 9A000000 		.4byte	0x9a
 1623 0342 02       		.uleb128 0x2
 1624 0343 91       		.byte	0x91
 1625 0344 6E       		.sleb128 -18
 1626 0345 0C       		.uleb128 0xc
 1627 0346 F7010000 		.4byte	.LASF46
 1628 034a 01       		.byte	0x1
 1629 034b E902     		.2byte	0x2e9
 1630 034d 9A000000 		.4byte	0x9a
 1631 0351 02       		.uleb128 0x2
 1632 0352 91       		.byte	0x91
 1633 0353 72       		.sleb128 -14
 1634 0354 0C       		.uleb128 0xc
 1635 0355 14010000 		.4byte	.LASF47
 1636 0359 01       		.byte	0x1
 1637 035a EA02     		.2byte	0x2ea
 1638 035c A5000000 		.4byte	0xa5
 1639 0360 02       		.uleb128 0x2
 1640 0361 91       		.byte	0x91
 1641 0362 74       		.sleb128 -12
 1642 0363 00       		.byte	0
 1643 0364 0F       		.uleb128 0xf
 1644 0365 00000000 		.4byte	.LASF48
 1645 0369 01       		.byte	0x1
 1646 036a 1103     		.2byte	0x311
 1647 036c A5000000 		.4byte	0xa5
 1648 0370 00000000 		.4byte	.LFB16
 1649 0374 94000000 		.4byte	.LFE16-.LFB16
 1650 0378 01       		.uleb128 0x1
 1651 0379 9C       		.byte	0x9c
 1652 037a AC030000 		.4byte	0x3ac
 1653 037e 0B       		.uleb128 0xb
 1654 037f 99030000 		.4byte	.LASF45
 1655 0383 01       		.byte	0x1
 1656 0384 1103     		.2byte	0x311
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 45


 1657 0386 9A000000 		.4byte	0x9a
 1658 038a 02       		.uleb128 0x2
 1659 038b 91       		.byte	0x91
 1660 038c 5E       		.sleb128 -34
 1661 038d 0C       		.uleb128 0xc
 1662 038e 6F010000 		.4byte	.LASF49
 1663 0392 01       		.byte	0x1
 1664 0393 1403     		.2byte	0x314
 1665 0395 C9000000 		.4byte	0xc9
 1666 0399 02       		.uleb128 0x2
 1667 039a 91       		.byte	0x91
 1668 039b 60       		.sleb128 -32
 1669 039c 0C       		.uleb128 0xc
 1670 039d 14010000 		.4byte	.LASF47
 1671 03a1 01       		.byte	0x1
 1672 03a2 1503     		.2byte	0x315
 1673 03a4 A5000000 		.4byte	0xa5
 1674 03a8 02       		.uleb128 0x2
 1675 03a9 91       		.byte	0x91
 1676 03aa 6C       		.sleb128 -20
 1677 03ab 00       		.byte	0
 1678 03ac 0F       		.uleb128 0xf
 1679 03ad FE010000 		.4byte	.LASF50
 1680 03b1 01       		.byte	0x1
 1681 03b2 3D03     		.2byte	0x33d
 1682 03b4 B0000000 		.4byte	0xb0
 1683 03b8 00000000 		.4byte	.LFB17
 1684 03bc 84000000 		.4byte	.LFE17-.LFB17
 1685 03c0 01       		.uleb128 0x1
 1686 03c1 9C       		.byte	0x9c
 1687 03c2 F4030000 		.4byte	0x3f4
 1688 03c6 0B       		.uleb128 0xb
 1689 03c7 99030000 		.4byte	.LASF45
 1690 03cb 01       		.byte	0x1
 1691 03cc 3D03     		.2byte	0x33d
 1692 03ce 9A000000 		.4byte	0x9a
 1693 03d2 02       		.uleb128 0x2
 1694 03d3 91       		.byte	0x91
 1695 03d4 66       		.sleb128 -26
 1696 03d5 0C       		.uleb128 0xc
 1697 03d6 97010000 		.4byte	.LASF51
 1698 03da 01       		.byte	0x1
 1699 03db 3F03     		.2byte	0x33f
 1700 03dd B0000000 		.4byte	0xb0
 1701 03e1 02       		.uleb128 0x2
 1702 03e2 91       		.byte	0x91
 1703 03e3 68       		.sleb128 -24
 1704 03e4 0C       		.uleb128 0xc
 1705 03e5 14010000 		.4byte	.LASF47
 1706 03e9 01       		.byte	0x1
 1707 03ea 4003     		.2byte	0x340
 1708 03ec A5000000 		.4byte	0xa5
 1709 03f0 02       		.uleb128 0x2
 1710 03f1 91       		.byte	0x91
 1711 03f2 6C       		.sleb128 -20
 1712 03f3 00       		.byte	0
 1713 03f4 14       		.uleb128 0x14
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 46


 1714 03f5 DA030000 		.4byte	.LASF52
 1715 03f9 01       		.byte	0x1
 1716 03fa 23       		.byte	0x23
 1717 03fb 79000000 		.4byte	0x79
 1718 03ff 05       		.uleb128 0x5
 1719 0400 03       		.byte	0x3
 1720 0401 00000000 		.4byte	ADC_1_SAR_initVar
 1721 0405 14       		.uleb128 0x14
 1722 0406 28020000 		.4byte	.LASF53
 1723 040a 01       		.byte	0x1
 1724 040b 24       		.byte	0x24
 1725 040c 16040000 		.4byte	0x416
 1726 0410 05       		.uleb128 0x5
 1727 0411 03       		.byte	0x3
 1728 0412 00000000 		.4byte	ADC_1_SAR_offset
 1729 0416 06       		.uleb128 0x6
 1730 0417 9A000000 		.4byte	0x9a
 1731 041b 14       		.uleb128 0x14
 1732 041c 45000000 		.4byte	.LASF54
 1733 0420 01       		.byte	0x1
 1734 0421 25       		.byte	0x25
 1735 0422 16040000 		.4byte	0x416
 1736 0426 05       		.uleb128 0x5
 1737 0427 03       		.byte	0x3
 1738 0428 00000000 		.4byte	ADC_1_SAR_countsPerVolt
 1739 042c 14       		.uleb128 0x14
 1740 042d 52030000 		.4byte	.LASF55
 1741 0431 01       		.byte	0x1
 1742 0432 26       		.byte	0x26
 1743 0433 3D040000 		.4byte	0x43d
 1744 0437 05       		.uleb128 0x5
 1745 0438 03       		.byte	0x3
 1746 0439 00000000 		.4byte	ADC_1_SAR_countsPer10Volt
 1747 043d 06       		.uleb128 0x6
 1748 043e A5000000 		.4byte	0xa5
 1749 0442 14       		.uleb128 0x14
 1750 0443 A3030000 		.4byte	.LASF56
 1751 0447 01       		.byte	0x1
 1752 0448 27       		.byte	0x27
 1753 0449 16040000 		.4byte	0x416
 1754 044d 05       		.uleb128 0x5
 1755 044e 03       		.byte	0x3
 1756 044f 00000000 		.4byte	ADC_1_SAR_shift
 1757 0453 00       		.byte	0
 1758              		.section	.debug_abbrev,"",%progbits
 1759              	.Ldebug_abbrev0:
 1760 0000 01       		.uleb128 0x1
 1761 0001 11       		.uleb128 0x11
 1762 0002 01       		.byte	0x1
 1763 0003 25       		.uleb128 0x25
 1764 0004 0E       		.uleb128 0xe
 1765 0005 13       		.uleb128 0x13
 1766 0006 0B       		.uleb128 0xb
 1767 0007 03       		.uleb128 0x3
 1768 0008 0E       		.uleb128 0xe
 1769 0009 1B       		.uleb128 0x1b
 1770 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 47


 1771 000b 55       		.uleb128 0x55
 1772 000c 17       		.uleb128 0x17
 1773 000d 11       		.uleb128 0x11
 1774 000e 01       		.uleb128 0x1
 1775 000f 10       		.uleb128 0x10
 1776 0010 17       		.uleb128 0x17
 1777 0011 00       		.byte	0
 1778 0012 00       		.byte	0
 1779 0013 02       		.uleb128 0x2
 1780 0014 24       		.uleb128 0x24
 1781 0015 00       		.byte	0
 1782 0016 0B       		.uleb128 0xb
 1783 0017 0B       		.uleb128 0xb
 1784 0018 3E       		.uleb128 0x3e
 1785 0019 0B       		.uleb128 0xb
 1786 001a 03       		.uleb128 0x3
 1787 001b 08       		.uleb128 0x8
 1788 001c 00       		.byte	0
 1789 001d 00       		.byte	0
 1790 001e 03       		.uleb128 0x3
 1791 001f 24       		.uleb128 0x24
 1792 0020 00       		.byte	0
 1793 0021 0B       		.uleb128 0xb
 1794 0022 0B       		.uleb128 0xb
 1795 0023 3E       		.uleb128 0x3e
 1796 0024 0B       		.uleb128 0xb
 1797 0025 03       		.uleb128 0x3
 1798 0026 0E       		.uleb128 0xe
 1799 0027 00       		.byte	0
 1800 0028 00       		.byte	0
 1801 0029 04       		.uleb128 0x4
 1802 002a 16       		.uleb128 0x16
 1803 002b 00       		.byte	0
 1804 002c 03       		.uleb128 0x3
 1805 002d 0E       		.uleb128 0xe
 1806 002e 3A       		.uleb128 0x3a
 1807 002f 0B       		.uleb128 0xb
 1808 0030 3B       		.uleb128 0x3b
 1809 0031 0B       		.uleb128 0xb
 1810 0032 49       		.uleb128 0x49
 1811 0033 13       		.uleb128 0x13
 1812 0034 00       		.byte	0
 1813 0035 00       		.byte	0
 1814 0036 05       		.uleb128 0x5
 1815 0037 16       		.uleb128 0x16
 1816 0038 00       		.byte	0
 1817 0039 03       		.uleb128 0x3
 1818 003a 0E       		.uleb128 0xe
 1819 003b 3A       		.uleb128 0x3a
 1820 003c 0B       		.uleb128 0xb
 1821 003d 3B       		.uleb128 0x3b
 1822 003e 05       		.uleb128 0x5
 1823 003f 49       		.uleb128 0x49
 1824 0040 13       		.uleb128 0x13
 1825 0041 00       		.byte	0
 1826 0042 00       		.byte	0
 1827 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 48


 1828 0044 35       		.uleb128 0x35
 1829 0045 00       		.byte	0
 1830 0046 49       		.uleb128 0x49
 1831 0047 13       		.uleb128 0x13
 1832 0048 00       		.byte	0
 1833 0049 00       		.byte	0
 1834 004a 07       		.uleb128 0x7
 1835 004b 2E       		.uleb128 0x2e
 1836 004c 00       		.byte	0
 1837 004d 3F       		.uleb128 0x3f
 1838 004e 19       		.uleb128 0x19
 1839 004f 03       		.uleb128 0x3
 1840 0050 0E       		.uleb128 0xe
 1841 0051 3A       		.uleb128 0x3a
 1842 0052 0B       		.uleb128 0xb
 1843 0053 3B       		.uleb128 0x3b
 1844 0054 0B       		.uleb128 0xb
 1845 0055 27       		.uleb128 0x27
 1846 0056 19       		.uleb128 0x19
 1847 0057 11       		.uleb128 0x11
 1848 0058 01       		.uleb128 0x1
 1849 0059 12       		.uleb128 0x12
 1850 005a 06       		.uleb128 0x6
 1851 005b 40       		.uleb128 0x40
 1852 005c 18       		.uleb128 0x18
 1853 005d 9642     		.uleb128 0x2116
 1854 005f 19       		.uleb128 0x19
 1855 0060 00       		.byte	0
 1856 0061 00       		.byte	0
 1857 0062 08       		.uleb128 0x8
 1858 0063 2E       		.uleb128 0x2e
 1859 0064 01       		.byte	0x1
 1860 0065 3F       		.uleb128 0x3f
 1861 0066 19       		.uleb128 0x19
 1862 0067 03       		.uleb128 0x3
 1863 0068 0E       		.uleb128 0xe
 1864 0069 3A       		.uleb128 0x3a
 1865 006a 0B       		.uleb128 0xb
 1866 006b 3B       		.uleb128 0x3b
 1867 006c 0B       		.uleb128 0xb
 1868 006d 27       		.uleb128 0x27
 1869 006e 19       		.uleb128 0x19
 1870 006f 11       		.uleb128 0x11
 1871 0070 01       		.uleb128 0x1
 1872 0071 12       		.uleb128 0x12
 1873 0072 06       		.uleb128 0x6
 1874 0073 40       		.uleb128 0x40
 1875 0074 18       		.uleb128 0x18
 1876 0075 9642     		.uleb128 0x2116
 1877 0077 19       		.uleb128 0x19
 1878 0078 01       		.uleb128 0x1
 1879 0079 13       		.uleb128 0x13
 1880 007a 00       		.byte	0
 1881 007b 00       		.byte	0
 1882 007c 09       		.uleb128 0x9
 1883 007d 34       		.uleb128 0x34
 1884 007e 00       		.byte	0
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 49


 1885 007f 03       		.uleb128 0x3
 1886 0080 0E       		.uleb128 0xe
 1887 0081 3A       		.uleb128 0x3a
 1888 0082 0B       		.uleb128 0xb
 1889 0083 3B       		.uleb128 0x3b
 1890 0084 0B       		.uleb128 0xb
 1891 0085 49       		.uleb128 0x49
 1892 0086 13       		.uleb128 0x13
 1893 0087 02       		.uleb128 0x2
 1894 0088 18       		.uleb128 0x18
 1895 0089 00       		.byte	0
 1896 008a 00       		.byte	0
 1897 008b 0A       		.uleb128 0xa
 1898 008c 2E       		.uleb128 0x2e
 1899 008d 01       		.byte	0x1
 1900 008e 3F       		.uleb128 0x3f
 1901 008f 19       		.uleb128 0x19
 1902 0090 03       		.uleb128 0x3
 1903 0091 0E       		.uleb128 0xe
 1904 0092 3A       		.uleb128 0x3a
 1905 0093 0B       		.uleb128 0xb
 1906 0094 3B       		.uleb128 0x3b
 1907 0095 05       		.uleb128 0x5
 1908 0096 27       		.uleb128 0x27
 1909 0097 19       		.uleb128 0x19
 1910 0098 11       		.uleb128 0x11
 1911 0099 01       		.uleb128 0x1
 1912 009a 12       		.uleb128 0x12
 1913 009b 06       		.uleb128 0x6
 1914 009c 40       		.uleb128 0x40
 1915 009d 18       		.uleb128 0x18
 1916 009e 9742     		.uleb128 0x2117
 1917 00a0 19       		.uleb128 0x19
 1918 00a1 01       		.uleb128 0x1
 1919 00a2 13       		.uleb128 0x13
 1920 00a3 00       		.byte	0
 1921 00a4 00       		.byte	0
 1922 00a5 0B       		.uleb128 0xb
 1923 00a6 05       		.uleb128 0x5
 1924 00a7 00       		.byte	0
 1925 00a8 03       		.uleb128 0x3
 1926 00a9 0E       		.uleb128 0xe
 1927 00aa 3A       		.uleb128 0x3a
 1928 00ab 0B       		.uleb128 0xb
 1929 00ac 3B       		.uleb128 0x3b
 1930 00ad 05       		.uleb128 0x5
 1931 00ae 49       		.uleb128 0x49
 1932 00af 13       		.uleb128 0x13
 1933 00b0 02       		.uleb128 0x2
 1934 00b1 18       		.uleb128 0x18
 1935 00b2 00       		.byte	0
 1936 00b3 00       		.byte	0
 1937 00b4 0C       		.uleb128 0xc
 1938 00b5 34       		.uleb128 0x34
 1939 00b6 00       		.byte	0
 1940 00b7 03       		.uleb128 0x3
 1941 00b8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 50


 1942 00b9 3A       		.uleb128 0x3a
 1943 00ba 0B       		.uleb128 0xb
 1944 00bb 3B       		.uleb128 0x3b
 1945 00bc 05       		.uleb128 0x5
 1946 00bd 49       		.uleb128 0x49
 1947 00be 13       		.uleb128 0x13
 1948 00bf 02       		.uleb128 0x2
 1949 00c0 18       		.uleb128 0x18
 1950 00c1 00       		.byte	0
 1951 00c2 00       		.byte	0
 1952 00c3 0D       		.uleb128 0xd
 1953 00c4 2E       		.uleb128 0x2e
 1954 00c5 01       		.byte	0x1
 1955 00c6 3F       		.uleb128 0x3f
 1956 00c7 19       		.uleb128 0x19
 1957 00c8 03       		.uleb128 0x3
 1958 00c9 0E       		.uleb128 0xe
 1959 00ca 3A       		.uleb128 0x3a
 1960 00cb 0B       		.uleb128 0xb
 1961 00cc 3B       		.uleb128 0x3b
 1962 00cd 05       		.uleb128 0x5
 1963 00ce 27       		.uleb128 0x27
 1964 00cf 19       		.uleb128 0x19
 1965 00d0 11       		.uleb128 0x11
 1966 00d1 01       		.uleb128 0x1
 1967 00d2 12       		.uleb128 0x12
 1968 00d3 06       		.uleb128 0x6
 1969 00d4 40       		.uleb128 0x40
 1970 00d5 18       		.uleb128 0x18
 1971 00d6 9642     		.uleb128 0x2116
 1972 00d8 19       		.uleb128 0x19
 1973 00d9 01       		.uleb128 0x1
 1974 00da 13       		.uleb128 0x13
 1975 00db 00       		.byte	0
 1976 00dc 00       		.byte	0
 1977 00dd 0E       		.uleb128 0xe
 1978 00de 2E       		.uleb128 0x2e
 1979 00df 00       		.byte	0
 1980 00e0 3F       		.uleb128 0x3f
 1981 00e1 19       		.uleb128 0x19
 1982 00e2 03       		.uleb128 0x3
 1983 00e3 0E       		.uleb128 0xe
 1984 00e4 3A       		.uleb128 0x3a
 1985 00e5 0B       		.uleb128 0xb
 1986 00e6 3B       		.uleb128 0x3b
 1987 00e7 05       		.uleb128 0x5
 1988 00e8 27       		.uleb128 0x27
 1989 00e9 19       		.uleb128 0x19
 1990 00ea 11       		.uleb128 0x11
 1991 00eb 01       		.uleb128 0x1
 1992 00ec 12       		.uleb128 0x12
 1993 00ed 06       		.uleb128 0x6
 1994 00ee 40       		.uleb128 0x40
 1995 00ef 18       		.uleb128 0x18
 1996 00f0 9742     		.uleb128 0x2117
 1997 00f2 19       		.uleb128 0x19
 1998 00f3 00       		.byte	0
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 51


 1999 00f4 00       		.byte	0
 2000 00f5 0F       		.uleb128 0xf
 2001 00f6 2E       		.uleb128 0x2e
 2002 00f7 01       		.byte	0x1
 2003 00f8 3F       		.uleb128 0x3f
 2004 00f9 19       		.uleb128 0x19
 2005 00fa 03       		.uleb128 0x3
 2006 00fb 0E       		.uleb128 0xe
 2007 00fc 3A       		.uleb128 0x3a
 2008 00fd 0B       		.uleb128 0xb
 2009 00fe 3B       		.uleb128 0x3b
 2010 00ff 05       		.uleb128 0x5
 2011 0100 27       		.uleb128 0x27
 2012 0101 19       		.uleb128 0x19
 2013 0102 49       		.uleb128 0x49
 2014 0103 13       		.uleb128 0x13
 2015 0104 11       		.uleb128 0x11
 2016 0105 01       		.uleb128 0x1
 2017 0106 12       		.uleb128 0x12
 2018 0107 06       		.uleb128 0x6
 2019 0108 40       		.uleb128 0x40
 2020 0109 18       		.uleb128 0x18
 2021 010a 9642     		.uleb128 0x2116
 2022 010c 19       		.uleb128 0x19
 2023 010d 01       		.uleb128 0x1
 2024 010e 13       		.uleb128 0x13
 2025 010f 00       		.byte	0
 2026 0110 00       		.byte	0
 2027 0111 10       		.uleb128 0x10
 2028 0112 2E       		.uleb128 0x2e
 2029 0113 00       		.byte	0
 2030 0114 3F       		.uleb128 0x3f
 2031 0115 19       		.uleb128 0x19
 2032 0116 03       		.uleb128 0x3
 2033 0117 0E       		.uleb128 0xe
 2034 0118 3A       		.uleb128 0x3a
 2035 0119 0B       		.uleb128 0xb
 2036 011a 3B       		.uleb128 0x3b
 2037 011b 05       		.uleb128 0x5
 2038 011c 27       		.uleb128 0x27
 2039 011d 19       		.uleb128 0x19
 2040 011e 49       		.uleb128 0x49
 2041 011f 13       		.uleb128 0x13
 2042 0120 11       		.uleb128 0x11
 2043 0121 01       		.uleb128 0x1
 2044 0122 12       		.uleb128 0x12
 2045 0123 06       		.uleb128 0x6
 2046 0124 40       		.uleb128 0x40
 2047 0125 18       		.uleb128 0x18
 2048 0126 9742     		.uleb128 0x2117
 2049 0128 19       		.uleb128 0x19
 2050 0129 00       		.byte	0
 2051 012a 00       		.byte	0
 2052 012b 11       		.uleb128 0x11
 2053 012c 2E       		.uleb128 0x2e
 2054 012d 01       		.byte	0x1
 2055 012e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 52


 2056 012f 19       		.uleb128 0x19
 2057 0130 03       		.uleb128 0x3
 2058 0131 0E       		.uleb128 0xe
 2059 0132 3A       		.uleb128 0x3a
 2060 0133 0B       		.uleb128 0xb
 2061 0134 3B       		.uleb128 0x3b
 2062 0135 05       		.uleb128 0x5
 2063 0136 27       		.uleb128 0x27
 2064 0137 19       		.uleb128 0x19
 2065 0138 49       		.uleb128 0x49
 2066 0139 13       		.uleb128 0x13
 2067 013a 11       		.uleb128 0x11
 2068 013b 01       		.uleb128 0x1
 2069 013c 12       		.uleb128 0x12
 2070 013d 06       		.uleb128 0x6
 2071 013e 40       		.uleb128 0x40
 2072 013f 18       		.uleb128 0x18
 2073 0140 9742     		.uleb128 0x2117
 2074 0142 19       		.uleb128 0x19
 2075 0143 01       		.uleb128 0x1
 2076 0144 13       		.uleb128 0x13
 2077 0145 00       		.byte	0
 2078 0146 00       		.byte	0
 2079 0147 12       		.uleb128 0x12
 2080 0148 34       		.uleb128 0x34
 2081 0149 00       		.byte	0
 2082 014a 03       		.uleb128 0x3
 2083 014b 08       		.uleb128 0x8
 2084 014c 3A       		.uleb128 0x3a
 2085 014d 0B       		.uleb128 0xb
 2086 014e 3B       		.uleb128 0x3b
 2087 014f 05       		.uleb128 0x5
 2088 0150 49       		.uleb128 0x49
 2089 0151 13       		.uleb128 0x13
 2090 0152 02       		.uleb128 0x2
 2091 0153 18       		.uleb128 0x18
 2092 0154 00       		.byte	0
 2093 0155 00       		.byte	0
 2094 0156 13       		.uleb128 0x13
 2095 0157 2E       		.uleb128 0x2e
 2096 0158 01       		.byte	0x1
 2097 0159 03       		.uleb128 0x3
 2098 015a 0E       		.uleb128 0xe
 2099 015b 3A       		.uleb128 0x3a
 2100 015c 0B       		.uleb128 0xb
 2101 015d 3B       		.uleb128 0x3b
 2102 015e 05       		.uleb128 0x5
 2103 015f 27       		.uleb128 0x27
 2104 0160 19       		.uleb128 0x19
 2105 0161 11       		.uleb128 0x11
 2106 0162 01       		.uleb128 0x1
 2107 0163 12       		.uleb128 0x12
 2108 0164 06       		.uleb128 0x6
 2109 0165 40       		.uleb128 0x40
 2110 0166 18       		.uleb128 0x18
 2111 0167 9642     		.uleb128 0x2116
 2112 0169 19       		.uleb128 0x19
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 53


 2113 016a 01       		.uleb128 0x1
 2114 016b 13       		.uleb128 0x13
 2115 016c 00       		.byte	0
 2116 016d 00       		.byte	0
 2117 016e 14       		.uleb128 0x14
 2118 016f 34       		.uleb128 0x34
 2119 0170 00       		.byte	0
 2120 0171 03       		.uleb128 0x3
 2121 0172 0E       		.uleb128 0xe
 2122 0173 3A       		.uleb128 0x3a
 2123 0174 0B       		.uleb128 0xb
 2124 0175 3B       		.uleb128 0x3b
 2125 0176 0B       		.uleb128 0xb
 2126 0177 49       		.uleb128 0x49
 2127 0178 13       		.uleb128 0x13
 2128 0179 3F       		.uleb128 0x3f
 2129 017a 19       		.uleb128 0x19
 2130 017b 02       		.uleb128 0x2
 2131 017c 18       		.uleb128 0x18
 2132 017d 00       		.byte	0
 2133 017e 00       		.byte	0
 2134 017f 00       		.byte	0
 2135              		.section	.debug_aranges,"",%progbits
 2136 0000 A4000000 		.4byte	0xa4
 2137 0004 0200     		.2byte	0x2
 2138 0006 00000000 		.4byte	.Ldebug_info0
 2139 000a 04       		.byte	0x4
 2140 000b 00       		.byte	0
 2141 000c 0000     		.2byte	0
 2142 000e 0000     		.2byte	0
 2143 0010 00000000 		.4byte	.LFB0
 2144 0014 20000000 		.4byte	.LFE0-.LFB0
 2145 0018 00000000 		.4byte	.LFB1
 2146 001c 2C000000 		.4byte	.LFE1-.LFB1
 2147 0020 00000000 		.4byte	.LFB2
 2148 0024 C0000000 		.4byte	.LFE2-.LFB2
 2149 0028 00000000 		.4byte	.LFB3
 2150 002c 58000000 		.4byte	.LFE3-.LFB3
 2151 0030 00000000 		.4byte	.LFB4
 2152 0034 40000000 		.4byte	.LFE4-.LFB4
 2153 0038 00000000 		.4byte	.LFB5
 2154 003c 50000000 		.4byte	.LFE5-.LFB5
 2155 0040 00000000 		.4byte	.LFB6
 2156 0044 20000000 		.4byte	.LFE6-.LFB6
 2157 0048 00000000 		.4byte	.LFB7
 2158 004c 20000000 		.4byte	.LFE7-.LFB7
 2159 0050 00000000 		.4byte	.LFB8
 2160 0054 40000000 		.4byte	.LFE8-.LFB8
 2161 0058 00000000 		.4byte	.LFB9
 2162 005c 2C000000 		.4byte	.LFE9-.LFB9
 2163 0060 00000000 		.4byte	.LFB10
 2164 0064 34000000 		.4byte	.LFE10-.LFB10
 2165 0068 00000000 		.4byte	.LFB11
 2166 006c 20000000 		.4byte	.LFE11-.LFB11
 2167 0070 00000000 		.4byte	.LFB12
 2168 0074 80000000 		.4byte	.LFE12-.LFB12
 2169 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 54


 2170 007c 2C000000 		.4byte	.LFE13-.LFB13
 2171 0080 00000000 		.4byte	.LFB14
 2172 0084 1C000000 		.4byte	.LFE14-.LFB14
 2173 0088 00000000 		.4byte	.LFB15
 2174 008c 8C000000 		.4byte	.LFE15-.LFB15
 2175 0090 00000000 		.4byte	.LFB16
 2176 0094 94000000 		.4byte	.LFE16-.LFB16
 2177 0098 00000000 		.4byte	.LFB17
 2178 009c 84000000 		.4byte	.LFE17-.LFB17
 2179 00a0 00000000 		.4byte	0
 2180 00a4 00000000 		.4byte	0
 2181              		.section	.debug_ranges,"",%progbits
 2182              	.Ldebug_ranges0:
 2183 0000 00000000 		.4byte	.LFB0
 2184 0004 20000000 		.4byte	.LFE0
 2185 0008 00000000 		.4byte	.LFB1
 2186 000c 2C000000 		.4byte	.LFE1
 2187 0010 00000000 		.4byte	.LFB2
 2188 0014 C0000000 		.4byte	.LFE2
 2189 0018 00000000 		.4byte	.LFB3
 2190 001c 58000000 		.4byte	.LFE3
 2191 0020 00000000 		.4byte	.LFB4
 2192 0024 40000000 		.4byte	.LFE4
 2193 0028 00000000 		.4byte	.LFB5
 2194 002c 50000000 		.4byte	.LFE5
 2195 0030 00000000 		.4byte	.LFB6
 2196 0034 20000000 		.4byte	.LFE6
 2197 0038 00000000 		.4byte	.LFB7
 2198 003c 20000000 		.4byte	.LFE7
 2199 0040 00000000 		.4byte	.LFB8
 2200 0044 40000000 		.4byte	.LFE8
 2201 0048 00000000 		.4byte	.LFB9
 2202 004c 2C000000 		.4byte	.LFE9
 2203 0050 00000000 		.4byte	.LFB10
 2204 0054 34000000 		.4byte	.LFE10
 2205 0058 00000000 		.4byte	.LFB11
 2206 005c 20000000 		.4byte	.LFE11
 2207 0060 00000000 		.4byte	.LFB12
 2208 0064 80000000 		.4byte	.LFE12
 2209 0068 00000000 		.4byte	.LFB13
 2210 006c 2C000000 		.4byte	.LFE13
 2211 0070 00000000 		.4byte	.LFB14
 2212 0074 1C000000 		.4byte	.LFE14
 2213 0078 00000000 		.4byte	.LFB15
 2214 007c 8C000000 		.4byte	.LFE15
 2215 0080 00000000 		.4byte	.LFB16
 2216 0084 94000000 		.4byte	.LFE16
 2217 0088 00000000 		.4byte	.LFB17
 2218 008c 84000000 		.4byte	.LFE17
 2219 0090 00000000 		.4byte	0
 2220 0094 00000000 		.4byte	0
 2221              		.section	.debug_line,"",%progbits
 2222              	.Ldebug_line0:
 2223 0000 05020000 		.section	.debug_str,"MS",%progbits,1
 2223      02004800 
 2223      00000201 
 2223      FB0E0D00 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 55


 2223      01010101 
 2224              	.LASF48:
 2225 0000 4144435F 		.ascii	"ADC_1_SAR_CountsTo_uVolts\000"
 2225      315F5341 
 2225      525F436F 
 2225      756E7473 
 2225      546F5F75 
 2226              	.LASF12:
 2227 001a 75696E74 		.ascii	"uint16\000"
 2227      313600
 2228              	.LASF42:
 2229 0021 61646347 		.ascii	"adcGain\000"
 2229      61696E00 
 2230              	.LASF60:
 2231 0029 4144435F 		.ascii	"ADC_1_SAR_GetResult8\000"
 2231      315F5341 
 2231      525F4765 
 2231      74526573 
 2231      756C7438 
 2232              	.LASF40:
 2233 003e 636F756E 		.ascii	"counts\000"
 2233      747300
 2234              	.LASF54:
 2235 0045 4144435F 		.ascii	"ADC_1_SAR_countsPerVolt\000"
 2235      315F5341 
 2235      525F636F 
 2235      756E7473 
 2235      50657256 
 2236              	.LASF8:
 2237 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2237      206C6F6E 
 2237      6720756E 
 2237      7369676E 
 2237      65642069 
 2238              	.LASF28:
 2239 0074 4144435F 		.ascii	"ADC_1_SAR_SetPower\000"
 2239      315F5341 
 2239      525F5365 
 2239      74506F77 
 2239      657200
 2240              	.LASF59:
 2241 0087 433A5C55 		.ascii	"C:\\Users\\Glenn\\OneDrive\\PSOC\\psoc-5lp\\5lp-rtu"
 2241      73657273 
 2241      5C476C65 
 2241      6E6E5C4F 
 2241      6E654472 
 2242 00b4 5C555342 		.ascii	"\\USB_UART01.cydsn\000"
 2242      5F554152 
 2242      5430312E 
 2242      63796473 
 2242      6E00
 2243              	.LASF7:
 2244 00c6 6C6F6E67 		.ascii	"long long int\000"
 2244      206C6F6E 
 2244      6720696E 
 2244      7400
 2245              	.LASF1:
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 56


 2246 00d4 7369676E 		.ascii	"signed char\000"
 2246      65642063 
 2246      68617200 
 2247              	.LASF41:
 2248 00e0 4144435F 		.ascii	"ADC_1_SAR_SetGain\000"
 2248      315F5341 
 2248      525F5365 
 2248      74476169 
 2248      6E00
 2249              	.LASF15:
 2250 00f2 696E7433 		.ascii	"int32\000"
 2250      3200
 2251              	.LASF5:
 2252 00f8 6C6F6E67 		.ascii	"long int\000"
 2252      20696E74 
 2252      00
 2253              	.LASF21:
 2254 0101 72656731 		.ascii	"reg16\000"
 2254      3600
 2255              	.LASF11:
 2256 0107 75696E74 		.ascii	"uint8\000"
 2256      3800
 2257              	.LASF18:
 2258 010d 646F7562 		.ascii	"double\000"
 2258      6C6500
 2259              	.LASF47:
 2260 0114 636F756E 		.ascii	"countsPer10Volt\000"
 2260      74735065 
 2260      72313056 
 2260      6F6C7400 
 2261              	.LASF26:
 2262 0124 4144435F 		.ascii	"ADC_1_SAR_Enable\000"
 2262      315F5341 
 2262      525F456E 
 2262      61626C65 
 2262      00
 2263              	.LASF58:
 2264 0135 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_1_SAR.c\000"
 2264      6E657261 
 2264      7465645F 
 2264      536F7572 
 2264      63655C50 
 2265              	.LASF34:
 2266 015a 7265744D 		.ascii	"retMode\000"
 2266      6F646500 
 2267              	.LASF0:
 2268 0162 756E7369 		.ascii	"unsigned int\000"
 2268      676E6564 
 2268      20696E74 
 2268      00
 2269              	.LASF49:
 2270 016f 75566F6C 		.ascii	"uVolts\000"
 2270      747300
 2271              	.LASF23:
 2272 0176 4144435F 		.ascii	"ADC_1_SAR_Init\000"
 2272      315F5341 
 2272      525F496E 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 57


 2272      697400
 2273              	.LASF6:
 2274 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 2274      20756E73 
 2274      69676E65 
 2274      6420696E 
 2274      7400
 2275              	.LASF51:
 2276 0197 766F6C74 		.ascii	"volts\000"
 2276      7300
 2277              	.LASF4:
 2278 019d 73686F72 		.ascii	"short unsigned int\000"
 2278      7420756E 
 2278      7369676E 
 2278      65642069 
 2278      6E7400
 2279              	.LASF13:
 2280 01b0 696E7438 		.ascii	"int8\000"
 2280      00
 2281              	.LASF44:
 2282 01b5 4144435F 		.ascii	"ADC_1_SAR_CountsTo_mVolts\000"
 2282      315F5341 
 2282      525F436F 
 2282      756E7473 
 2282      546F5F6D 
 2283              	.LASF22:
 2284 01cf 4144435F 		.ascii	"ADC_1_SAR_Start\000"
 2284      315F5341 
 2284      525F5374 
 2284      61727400 
 2285              	.LASF29:
 2286 01df 4144435F 		.ascii	"ADC_1_SAR_SetResolution\000"
 2286      315F5341 
 2286      525F5365 
 2286      74526573 
 2286      6F6C7574 
 2287              	.LASF46:
 2288 01f7 6D566F6C 		.ascii	"mVolts\000"
 2288      747300
 2289              	.LASF50:
 2290 01fe 4144435F 		.ascii	"ADC_1_SAR_CountsTo_Volts\000"
 2290      315F5341 
 2290      525F436F 
 2290      756E7473 
 2290      546F5F56 
 2291              	.LASF16:
 2292 0217 666C6F61 		.ascii	"float32\000"
 2292      74333200 
 2293              	.LASF9:
 2294 021f 73697A65 		.ascii	"sizetype\000"
 2294      74797065 
 2294      00
 2295              	.LASF53:
 2296 0228 4144435F 		.ascii	"ADC_1_SAR_offset\000"
 2296      315F5341 
 2296      525F6F66 
 2296      66736574 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 58


 2296      00
 2297              	.LASF61:
 2298 0239 4144435F 		.ascii	"ADC_1_SAR_CalcGain\000"
 2298      315F5341 
 2298      525F4361 
 2298      6C634761 
 2298      696E00
 2299              	.LASF57:
 2300 024c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2300      4320342E 
 2300      392E3320 
 2300      32303135 
 2300      30333033 
 2301 027f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2301      20726576 
 2301      6973696F 
 2301      6E203232 
 2301      31323230 
 2302 02b2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2302      66756E63 
 2302      74696F6E 
 2302      2D736563 
 2302      74696F6E 
 2303              	.LASF19:
 2304 02da 696E7436 		.ascii	"int64\000"
 2304      3400
 2305              	.LASF17:
 2306 02e0 666C6F61 		.ascii	"float\000"
 2306      7400
 2307              	.LASF43:
 2308 02e6 4144435F 		.ascii	"ADC_1_SAR_SetScaledGain\000"
 2308      315F5341 
 2308      525F5365 
 2308      74536361 
 2308      6C656447 
 2309              	.LASF30:
 2310 02fe 706F7765 		.ascii	"power\000"
 2310      7200
 2311              	.LASF20:
 2312 0304 72656738 		.ascii	"reg8\000"
 2312      00
 2313              	.LASF32:
 2314 0309 4144435F 		.ascii	"ADC_1_SAR_StartConvert\000"
 2314      315F5341 
 2314      525F5374 
 2314      61727443 
 2314      6F6E7665 
 2315              	.LASF2:
 2316 0320 756E7369 		.ascii	"unsigned char\000"
 2316      676E6564 
 2316      20636861 
 2316      7200
 2317              	.LASF36:
 2318 032e 4144435F 		.ascii	"ADC_1_SAR_IsEndConversion\000"
 2318      315F5341 
 2318      525F4973 
 2318      456E6443 
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 59


 2318      6F6E7665 
 2319              	.LASF3:
 2320 0348 73686F72 		.ascii	"short int\000"
 2320      7420696E 
 2320      7400
 2321              	.LASF55:
 2322 0352 4144435F 		.ascii	"ADC_1_SAR_countsPer10Volt\000"
 2322      315F5341 
 2322      525F636F 
 2322      756E7473 
 2322      50657231 
 2323              	.LASF31:
 2324 036c 7265736F 		.ascii	"resolution\000"
 2324      6C757469 
 2324      6F6E00
 2325              	.LASF37:
 2326 0377 4144435F 		.ascii	"ADC_1_SAR_GetResult16\000"
 2326      315F5341 
 2326      525F4765 
 2326      74526573 
 2326      756C7431 
 2327              	.LASF10:
 2328 038d 63686172 		.ascii	"char\000"
 2328      00
 2329              	.LASF39:
 2330 0392 6F666673 		.ascii	"offset\000"
 2330      657400
 2331              	.LASF45:
 2332 0399 61646343 		.ascii	"adcCounts\000"
 2332      6F756E74 
 2332      7300
 2333              	.LASF56:
 2334 03a3 4144435F 		.ascii	"ADC_1_SAR_shift\000"
 2334      315F5341 
 2334      525F7368 
 2334      69667400 
 2335              	.LASF33:
 2336 03b3 4144435F 		.ascii	"ADC_1_SAR_StopConvert\000"
 2336      315F5341 
 2336      525F5374 
 2336      6F70436F 
 2336      6E766572 
 2337              	.LASF25:
 2338 03c9 656E6162 		.ascii	"enableInterrupts\000"
 2338      6C65496E 
 2338      74657272 
 2338      75707473 
 2338      00
 2339              	.LASF52:
 2340 03da 4144435F 		.ascii	"ADC_1_SAR_initVar\000"
 2340      315F5341 
 2340      525F696E 
 2340      69745661 
 2340      7200
 2341              	.LASF35:
 2342 03ec 73746174 		.ascii	"status\000"
 2342      757300
ARM GAS  C:\Users\Glenn\AppData\Local\Temp\ccpqB1OY.s 			page 60


 2343              	.LASF14:
 2344 03f3 696E7431 		.ascii	"int16\000"
 2344      3600
 2345              	.LASF38:
 2346 03f9 4144435F 		.ascii	"ADC_1_SAR_SetOffset\000"
 2346      315F5341 
 2346      525F5365 
 2346      744F6666 
 2346      73657400 
 2347              	.LASF27:
 2348 040d 4144435F 		.ascii	"ADC_1_SAR_Stop\000"
 2348      315F5341 
 2348      525F5374 
 2348      6F7000
 2349              	.LASF24:
 2350 041c 746D7052 		.ascii	"tmpReg\000"
 2350      656700
 2351              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
