ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_1_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_1_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	UART_1_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_1_RXISR, %function
  24              	UART_1_RXISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_1_INT.c"
   1:.\Generated_Source\PSoC5/UART_1_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_1_INT.c **** * File Name: UART_1INT.c
   3:.\Generated_Source\PSoC5/UART_1_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_1_INT.c **** *
   5:.\Generated_Source\PSoC5/UART_1_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_1_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_1_INT.c **** *
   8:.\Generated_Source\PSoC5/UART_1_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/UART_1_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC5/UART_1_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC5/UART_1_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC5/UART_1_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC5/UART_1_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  15:.\Generated_Source\PSoC5/UART_1_INT.c **** #include "UART_1.h"
  16:.\Generated_Source\PSoC5/UART_1_INT.c **** #include "cyapicallbacks.h"
  17:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  18:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  19:.\Generated_Source\PSoC5/UART_1_INT.c **** /***************************************
  20:.\Generated_Source\PSoC5/UART_1_INT.c **** * Custom Declarations
  21:.\Generated_Source\PSoC5/UART_1_INT.c **** ***************************************/
  22:.\Generated_Source\PSoC5/UART_1_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  24:.\Generated_Source\PSoC5/UART_1_INT.c **** /* `#END` */
  25:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  26:.\Generated_Source\PSoC5/UART_1_INT.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  27:.\Generated_Source\PSoC5/UART_1_INT.c ****     /*******************************************************************************
  28:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Function Name: UART_1_RXISR
  29:.\Generated_Source\PSoC5/UART_1_INT.c ****     ********************************************************************************
  30:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
  31:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Summary:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 2


  32:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  33:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
  34:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Parameters:
  35:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
  36:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
  37:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Return:
  38:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
  39:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
  40:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Global Variables:
  41:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
  42:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
  43:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     increments after each byte saved to buffer.
  44:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
  45:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     checked to detect overflow condition.
  46:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferOverflow - software overflow flag. Set to one
  47:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     when UART_1_rxBufferWrite index overtakes
  48:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     UART_1_rxBufferRead index.
  49:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferLoopDetect - additional variable to detect overflow.
  50:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     Set to one when UART_1_rxBufferWrite is equal to
  51:.\Generated_Source\PSoC5/UART_1_INT.c ****     *    UART_1_rxBufferRead
  52:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxAddressMode - this variable contains the Address mode,
  53:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  54:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxAddressDetected - set to 1 when correct address received,
  55:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  56:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  57:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
  58:.\Generated_Source\PSoC5/UART_1_INT.c ****     *******************************************************************************/
  59:.\Generated_Source\PSoC5/UART_1_INT.c ****     CY_ISR(UART_1_RXISR)
  60:.\Generated_Source\PSoC5/UART_1_INT.c ****     {
  27              		.loc 1 60 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 83B0     		sub	sp, sp, #12
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  61:.\Generated_Source\PSoC5/UART_1_INT.c ****         uint8 readData;
  62:.\Generated_Source\PSoC5/UART_1_INT.c ****         uint8 readStatus;
  63:.\Generated_Source\PSoC5/UART_1_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 63 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  42              	.L6:
  64:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  65:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
  66:.\Generated_Source\PSoC5/UART_1_INT.c ****         uint8 int_en;
  67:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  68:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  69:.\Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_RXISR_ENTRY_CALLBACK
  70:.\Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_RXISR_EntryCallback();
  71:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_RXISR_ENTRY_CALLBACK */
  72:.\Generated_Source\PSoC5/UART_1_INT.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 3


  73:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at start of ISR */
  74:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_RXISR_START` */
  75:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  76:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
  77:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  78:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  79:.\Generated_Source\PSoC5/UART_1_INT.c ****         int_en = EA;
  80:.\Generated_Source\PSoC5/UART_1_INT.c ****         CyGlobalIntEnable;
  81:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
  82:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  83:.\Generated_Source\PSoC5/UART_1_INT.c ****         do
  84:.\Generated_Source\PSoC5/UART_1_INT.c ****         {
  85:.\Generated_Source\PSoC5/UART_1_INT.c ****             /* Read receiver status register */
  86:.\Generated_Source\PSoC5/UART_1_INT.c ****             readStatus = UART_1_RXSTATUS_REG;
  43              		.loc 1 86 0
  44 000a 2B4B     		ldr	r3, .L7
  45 000c 1B78     		ldrb	r3, [r3]
  46 000e BB71     		strb	r3, [r7, #6]
  87:.\Generated_Source\PSoC5/UART_1_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  88:.\Generated_Source\PSoC5/UART_1_INT.c ****             *  of the user code in UART_1_RXISR_ERROR` section. 
  89:.\Generated_Source\PSoC5/UART_1_INT.c ****             */
  90:.\Generated_Source\PSoC5/UART_1_INT.c ****             readData = readStatus;
  47              		.loc 1 90 0
  48 0010 BB79     		ldrb	r3, [r7, #6]
  49 0012 7B71     		strb	r3, [r7, #5]
  91:.\Generated_Source\PSoC5/UART_1_INT.c **** 
  92:.\Generated_Source\PSoC5/UART_1_INT.c ****             if((readStatus & (UART_1_RX_STS_BREAK | 
  93:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_PAR_ERROR |
  94:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_STOP_ERROR | 
  95:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_OVERRUN)) != 0u)
  50              		.loc 1 95 0
  51 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  52 0016 03F01E03 		and	r3, r3, #30
  92:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RX_STS_PAR_ERROR |
  53              		.loc 1 92 0
  54 001a 002B     		cmp	r3, #0
  55 001c 0BD0     		beq	.L2
  96:.\Generated_Source\PSoC5/UART_1_INT.c ****             {
  97:.\Generated_Source\PSoC5/UART_1_INT.c ****                 /* ERROR handling. */
  98:.\Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_errorStatus |= readStatus & ( UART_1_RX_STS_BREAK | 
  56              		.loc 1 98 0
  57 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  58 0020 03F01E03 		and	r3, r3, #30
  59 0024 DAB2     		uxtb	r2, r3
  60 0026 254B     		ldr	r3, .L7+4
  61 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1343     		orrs	r3, r3, r2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 DAB2     		uxtb	r2, r3
  66 0032 224B     		ldr	r3, .L7+4
  67 0034 1A70     		strb	r2, [r3]
  68              	.L2:
  99:.\Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_PAR_ERROR | 
 100:.\Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_STOP_ERROR | 
 101:.\Generated_Source\PSoC5/UART_1_INT.c ****                                                             UART_1_RX_STS_OVERRUN);
 102:.\Generated_Source\PSoC5/UART_1_INT.c ****                 /* `#START UART_1_RXISR_ERROR` */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 4


 103:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 104:.\Generated_Source\PSoC5/UART_1_INT.c ****                 /* `#END` */
 105:.\Generated_Source\PSoC5/UART_1_INT.c ****                 
 106:.\Generated_Source\PSoC5/UART_1_INT.c ****             #ifdef UART_1_RXISR_ERROR_CALLBACK
 107:.\Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_RXISR_ERROR_Callback();
 108:.\Generated_Source\PSoC5/UART_1_INT.c ****             #endif /* UART_1_RXISR_ERROR_CALLBACK */
 109:.\Generated_Source\PSoC5/UART_1_INT.c ****             }
 110:.\Generated_Source\PSoC5/UART_1_INT.c ****             
 111:.\Generated_Source\PSoC5/UART_1_INT.c ****             if((readStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
  69              		.loc 1 111 0
  70 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  71 0038 03F02003 		and	r3, r3, #32
  72 003c 002B     		cmp	r3, #0
  73 003e 30D0     		beq	.L3
 112:.\Generated_Source\PSoC5/UART_1_INT.c ****             {
 113:.\Generated_Source\PSoC5/UART_1_INT.c ****                 /* Read data from the RX data register */
 114:.\Generated_Source\PSoC5/UART_1_INT.c ****                 readData = UART_1_RXDATA_REG;
  74              		.loc 1 114 0
  75 0040 1F4B     		ldr	r3, .L7+8
  76 0042 1B78     		ldrb	r3, [r3]
  77 0044 7B71     		strb	r3, [r7, #5]
 115:.\Generated_Source\PSoC5/UART_1_INT.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 116:.\Generated_Source\PSoC5/UART_1_INT.c ****                 if(UART_1_rxAddressMode == (uint8)UART_1__B_UART__AM_SW_DETECT_TO_BUFFER)
 117:.\Generated_Source\PSoC5/UART_1_INT.c ****                 {
 118:.\Generated_Source\PSoC5/UART_1_INT.c ****                     if((readStatus & UART_1_RX_STS_MRKSPC) != 0u)
 119:.\Generated_Source\PSoC5/UART_1_INT.c ****                     {
 120:.\Generated_Source\PSoC5/UART_1_INT.c ****                         if ((readStatus & UART_1_RX_STS_ADDR_MATCH) != 0u)
 121:.\Generated_Source\PSoC5/UART_1_INT.c ****                         {
 122:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_rxAddressDetected = 1u;
 123:.\Generated_Source\PSoC5/UART_1_INT.c ****                         }
 124:.\Generated_Source\PSoC5/UART_1_INT.c ****                         else
 125:.\Generated_Source\PSoC5/UART_1_INT.c ****                         {
 126:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_rxAddressDetected = 0u;
 127:.\Generated_Source\PSoC5/UART_1_INT.c ****                         }
 128:.\Generated_Source\PSoC5/UART_1_INT.c ****                     }
 129:.\Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxAddressDetected != 0u)
 130:.\Generated_Source\PSoC5/UART_1_INT.c ****                     {   /* Store only addressed data */
 131:.\Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
 132:.\Generated_Source\PSoC5/UART_1_INT.c ****                         increment_pointer = 1u;
 133:.\Generated_Source\PSoC5/UART_1_INT.c ****                     }
 134:.\Generated_Source\PSoC5/UART_1_INT.c ****                 }
 135:.\Generated_Source\PSoC5/UART_1_INT.c ****                 else /* Without software addressing */
 136:.\Generated_Source\PSoC5/UART_1_INT.c ****                 {
 137:.\Generated_Source\PSoC5/UART_1_INT.c ****                     UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
 138:.\Generated_Source\PSoC5/UART_1_INT.c ****                     increment_pointer = 1u;
 139:.\Generated_Source\PSoC5/UART_1_INT.c ****                 }
 140:.\Generated_Source\PSoC5/UART_1_INT.c ****             #else  /* Without addressing */
 141:.\Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_rxBuffer[UART_1_rxBufferWrite] = readData;
  78              		.loc 1 141 0
  79 0046 1F4B     		ldr	r3, .L7+12
  80 0048 1B88     		ldrh	r3, [r3]	@ movhi
  81 004a 9BB2     		uxth	r3, r3
  82 004c 1946     		mov	r1, r3
  83 004e 1E4A     		ldr	r2, .L7+16
  84 0050 7B79     		ldrb	r3, [r7, #5]
  85 0052 5354     		strb	r3, [r2, r1]
 142:.\Generated_Source\PSoC5/UART_1_INT.c ****                 increment_pointer = 1u;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 5


  86              		.loc 1 142 0
  87 0054 0123     		movs	r3, #1
  88 0056 FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/UART_1_INT.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 144:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 145:.\Generated_Source\PSoC5/UART_1_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 146:.\Generated_Source\PSoC5/UART_1_INT.c ****                 if(increment_pointer != 0u)
  89              		.loc 1 146 0
  90 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  91 005a 002B     		cmp	r3, #0
  92 005c 21D0     		beq	.L3
 147:.\Generated_Source\PSoC5/UART_1_INT.c ****                 {
 148:.\Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferLoopDetect != 0u)
  93              		.loc 1 148 0
  94 005e 1B4B     		ldr	r3, .L7+20
  95 0060 1B78     		ldrb	r3, [r3]
  96 0062 DBB2     		uxtb	r3, r3
  97 0064 002B     		cmp	r3, #0
  98 0066 02D0     		beq	.L4
 149:.\Generated_Source\PSoC5/UART_1_INT.c ****                     {   /* Set Software Buffer status Overflow */
 150:.\Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferOverflow = 1u;
  99              		.loc 1 150 0
 100 0068 194B     		ldr	r3, .L7+24
 101 006a 0122     		movs	r2, #1
 102 006c 1A70     		strb	r2, [r3]
 103              	.L4:
 151:.\Generated_Source\PSoC5/UART_1_INT.c ****                     }
 152:.\Generated_Source\PSoC5/UART_1_INT.c ****                     /* Set next pointer. */
 153:.\Generated_Source\PSoC5/UART_1_INT.c ****                     UART_1_rxBufferWrite++;
 104              		.loc 1 153 0
 105 006e 154B     		ldr	r3, .L7+12
 106 0070 1B88     		ldrh	r3, [r3]	@ movhi
 107 0072 9BB2     		uxth	r3, r3
 108 0074 0133     		adds	r3, r3, #1
 109 0076 9AB2     		uxth	r2, r3
 110 0078 124B     		ldr	r3, .L7+12
 111 007a 1A80     		strh	r2, [r3]	@ movhi
 154:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 155:.\Generated_Source\PSoC5/UART_1_INT.c ****                     /* Check pointer for a loop condition */
 156:.\Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferWrite >= UART_1_RX_BUFFER_SIZE)
 112              		.loc 1 156 0
 113 007c 114B     		ldr	r3, .L7+12
 114 007e 1B88     		ldrh	r3, [r3]	@ movhi
 115 0080 9BB2     		uxth	r3, r3
 116 0082 FF2B     		cmp	r3, #255
 117 0084 02D9     		bls	.L5
 157:.\Generated_Source\PSoC5/UART_1_INT.c ****                     {
 158:.\Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferWrite = 0u;
 118              		.loc 1 158 0
 119 0086 0F4B     		ldr	r3, .L7+12
 120 0088 0022     		movs	r2, #0
 121 008a 1A80     		strh	r2, [r3]	@ movhi
 122              	.L5:
 159:.\Generated_Source\PSoC5/UART_1_INT.c ****                     }
 160:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 161:.\Generated_Source\PSoC5/UART_1_INT.c ****                     /* Detect pre-overload condition and set flag */
 162:.\Generated_Source\PSoC5/UART_1_INT.c ****                     if(UART_1_rxBufferWrite == UART_1_rxBufferRead)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 6


 123              		.loc 1 162 0
 124 008c 0D4B     		ldr	r3, .L7+12
 125 008e 1B88     		ldrh	r3, [r3]	@ movhi
 126 0090 9AB2     		uxth	r2, r3
 127 0092 104B     		ldr	r3, .L7+28
 128 0094 1B88     		ldrh	r3, [r3]	@ movhi
 129 0096 9BB2     		uxth	r3, r3
 130 0098 9A42     		cmp	r2, r3
 131 009a 02D1     		bne	.L3
 163:.\Generated_Source\PSoC5/UART_1_INT.c ****                     {
 164:.\Generated_Source\PSoC5/UART_1_INT.c ****                         UART_1_rxBufferLoopDetect = 1u;
 132              		.loc 1 164 0
 133 009c 0B4B     		ldr	r3, .L7+20
 134 009e 0122     		movs	r2, #1
 135 00a0 1A70     		strb	r2, [r3]
 136              	.L3:
 165:.\Generated_Source\PSoC5/UART_1_INT.c ****                         /* When Hardware Flow Control selected */
 166:.\Generated_Source\PSoC5/UART_1_INT.c ****                         #if (UART_1_FLOW_CONTROL != 0u)
 167:.\Generated_Source\PSoC5/UART_1_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 168:.\Generated_Source\PSoC5/UART_1_INT.c ****                             UART_1_RXSTATUS_MASK_REG  &= (uint8)~UART_1_RX_STS_FIFO_NOTEMPTY;
 169:.\Generated_Source\PSoC5/UART_1_INT.c ****                             CyIntClearPending(UART_1_RX_VECT_NUM);
 170:.\Generated_Source\PSoC5/UART_1_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 171:.\Generated_Source\PSoC5/UART_1_INT.c ****                         #endif /* (UART_1_FLOW_CONTROL != 0u) */
 172:.\Generated_Source\PSoC5/UART_1_INT.c ****                     }
 173:.\Generated_Source\PSoC5/UART_1_INT.c ****                 }
 174:.\Generated_Source\PSoC5/UART_1_INT.c ****             }
 175:.\Generated_Source\PSoC5/UART_1_INT.c ****         }while((readStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u);
 137              		.loc 1 175 0
 138 00a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 139 00a4 03F02003 		and	r3, r3, #32
 140 00a8 002B     		cmp	r3, #0
 141 00aa AED1     		bne	.L6
 176:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 177:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at end of ISR (Optional) */
 178:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_RXISR_END` */
 179:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 180:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 181:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 182:.\Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_RXISR_EXIT_CALLBACK
 183:.\Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_RXISR_ExitCallback();
 184:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_RXISR_EXIT_CALLBACK */
 185:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 186:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 187:.\Generated_Source\PSoC5/UART_1_INT.c ****         EA = int_en;
 188:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 189:.\Generated_Source\PSoC5/UART_1_INT.c ****     }
 142              		.loc 1 189 0
 143 00ac 0C37     		adds	r7, r7, #12
 144              		.cfi_def_cfa_offset 4
 145 00ae BD46     		mov	sp, r7
 146              		.cfi_def_cfa_register 13
 147              		@ sp needed
 148 00b0 5DF8047B 		ldr	r7, [sp], #4
 149              		.cfi_restore 7
 150              		.cfi_def_cfa_offset 0
 151 00b4 7047     		bx	lr
 152              	.L8:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 7


 153 00b6 00BF     		.align	2
 154              	.L7:
 155 00b8 6A650040 		.word	1073767786
 156 00bc 00000000 		.word	UART_1_errorStatus
 157 00c0 49650040 		.word	1073767753
 158 00c4 00000000 		.word	UART_1_rxBufferWrite
 159 00c8 00000000 		.word	UART_1_rxBuffer
 160 00cc 00000000 		.word	UART_1_rxBufferLoopDetect
 161 00d0 00000000 		.word	UART_1_rxBufferOverflow
 162 00d4 00000000 		.word	UART_1_rxBufferRead
 163              		.cfi_endproc
 164              	.LFE0:
 165              		.size	UART_1_RXISR, .-UART_1_RXISR
 166              		.section	.text.UART_1_TXISR,"ax",%progbits
 167              		.align	2
 168              		.global	UART_1_TXISR
 169              		.thumb
 170              		.thumb_func
 171              		.type	UART_1_TXISR, %function
 172              	UART_1_TXISR:
 173              	.LFB1:
 190:.\Generated_Source\PSoC5/UART_1_INT.c ****     
 191:.\Generated_Source\PSoC5/UART_1_INT.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
 192:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 193:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 194:.\Generated_Source\PSoC5/UART_1_INT.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
 195:.\Generated_Source\PSoC5/UART_1_INT.c ****     /*******************************************************************************
 196:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Function Name: UART_1_TXISR
 197:.\Generated_Source\PSoC5/UART_1_INT.c ****     ********************************************************************************
 198:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
 199:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Summary:
 200:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Interrupt Service Routine for the TX portion of the UART
 201:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
 202:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Parameters:
 203:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
 204:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
 205:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Return:
 206:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  None.
 207:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
 208:.\Generated_Source\PSoC5/UART_1_INT.c ****     * Global Variables:
 209:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_txBuffer - RAM buffer pointer for transmit data from.
 210:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_txBufferRead - cyclic index for read and transmit data
 211:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     from txBuffer, increments after each transmitted byte.
 212:.\Generated_Source\PSoC5/UART_1_INT.c ****     *  UART_1_rxBufferWrite - cyclic index for write to txBuffer,
 213:.\Generated_Source\PSoC5/UART_1_INT.c ****     *     checked to detect available for transmission bytes.
 214:.\Generated_Source\PSoC5/UART_1_INT.c ****     *
 215:.\Generated_Source\PSoC5/UART_1_INT.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC5/UART_1_INT.c ****     CY_ISR(UART_1_TXISR)
 217:.\Generated_Source\PSoC5/UART_1_INT.c ****     {
 174              		.loc 1 217 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179 0000 80B4     		push	{r7}
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 7, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 8


 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 218:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 219:.\Generated_Source\PSoC5/UART_1_INT.c ****         uint8 int_en;
 220:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 221:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 222:.\Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_TXISR_ENTRY_CALLBACK
 223:.\Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_TXISR_EntryCallback();
 224:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_TXISR_ENTRY_CALLBACK */
 225:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 226:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at start of ISR */
 227:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_TXISR_START` */
 228:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 229:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 230:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 231:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
 232:.\Generated_Source\PSoC5/UART_1_INT.c ****         int_en = EA;
 233:.\Generated_Source\PSoC5/UART_1_INT.c ****         CyGlobalIntEnable;
 234:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 235:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 236:.\Generated_Source\PSoC5/UART_1_INT.c ****         while((UART_1_txBufferRead != UART_1_txBufferWrite) &&
 184              		.loc 1 236 0
 185 0004 17E0     		b	.L10
 186              	.L13:
 237:.\Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 238:.\Generated_Source\PSoC5/UART_1_INT.c ****         {
 239:.\Generated_Source\PSoC5/UART_1_INT.c ****             /* Check pointer wrap around */
 240:.\Generated_Source\PSoC5/UART_1_INT.c ****             if(UART_1_txBufferRead >= UART_1_TX_BUFFER_SIZE)
 187              		.loc 1 240 0
 188 0006 154B     		ldr	r3, .L14
 189 0008 1B88     		ldrh	r3, [r3]	@ movhi
 190 000a 9BB2     		uxth	r3, r3
 191 000c FF2B     		cmp	r3, #255
 192 000e 02D9     		bls	.L11
 241:.\Generated_Source\PSoC5/UART_1_INT.c ****             {
 242:.\Generated_Source\PSoC5/UART_1_INT.c ****                 UART_1_txBufferRead = 0u;
 193              		.loc 1 242 0
 194 0010 124B     		ldr	r3, .L14
 195 0012 0022     		movs	r2, #0
 196 0014 1A80     		strh	r2, [r3]	@ movhi
 197              	.L11:
 243:.\Generated_Source\PSoC5/UART_1_INT.c ****             }
 244:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 245:.\Generated_Source\PSoC5/UART_1_INT.c ****             UART_1_TXDATA_REG = UART_1_txBuffer[UART_1_txBufferRead];
 198              		.loc 1 245 0
 199 0016 124B     		ldr	r3, .L14+4
 200 0018 104A     		ldr	r2, .L14
 201 001a 1288     		ldrh	r2, [r2]	@ movhi
 202 001c 92B2     		uxth	r2, r2
 203 001e 1146     		mov	r1, r2
 204 0020 104A     		ldr	r2, .L14+8
 205 0022 525C     		ldrb	r2, [r2, r1]
 206 0024 D2B2     		uxtb	r2, r2
 207 0026 1A70     		strb	r2, [r3]
 246:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 247:.\Generated_Source\PSoC5/UART_1_INT.c ****             /* Set next pointer */
 248:.\Generated_Source\PSoC5/UART_1_INT.c ****             UART_1_txBufferRead++;
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 9


 208              		.loc 1 248 0
 209 0028 0C4B     		ldr	r3, .L14
 210 002a 1B88     		ldrh	r3, [r3]	@ movhi
 211 002c 9BB2     		uxth	r3, r3
 212 002e 0133     		adds	r3, r3, #1
 213 0030 9AB2     		uxth	r2, r3
 214 0032 0A4B     		ldr	r3, .L14
 215 0034 1A80     		strh	r2, [r3]	@ movhi
 216              	.L10:
 236:.\Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 217              		.loc 1 236 0
 218 0036 094B     		ldr	r3, .L14
 219 0038 1B88     		ldrh	r3, [r3]	@ movhi
 220 003a 9AB2     		uxth	r2, r3
 221 003c 0A4B     		ldr	r3, .L14+12
 222 003e 1B88     		ldrh	r3, [r3]
 223 0040 9A42     		cmp	r2, r3
 224 0042 06D0     		beq	.L9
 237:.\Generated_Source\PSoC5/UART_1_INT.c ****         {
 225              		.loc 1 237 0 discriminator 1
 226 0044 094B     		ldr	r3, .L14+16
 227 0046 1B78     		ldrb	r3, [r3]
 228 0048 DBB2     		uxtb	r3, r3
 229 004a 03F00403 		and	r3, r3, #4
 236:.\Generated_Source\PSoC5/UART_1_INT.c ****              ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u))
 230              		.loc 1 236 0 discriminator 1
 231 004e 002B     		cmp	r3, #0
 232 0050 D9D0     		beq	.L13
 233              	.L9:
 249:.\Generated_Source\PSoC5/UART_1_INT.c ****         }
 250:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 251:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* User code required at end of ISR (Optional) */
 252:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#START UART_1_TXISR_END` */
 253:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 254:.\Generated_Source\PSoC5/UART_1_INT.c ****         /* `#END` */
 255:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 256:.\Generated_Source\PSoC5/UART_1_INT.c ****     #ifdef UART_1_TXISR_EXIT_CALLBACK
 257:.\Generated_Source\PSoC5/UART_1_INT.c ****         UART_1_TXISR_ExitCallback();
 258:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* UART_1_TXISR_EXIT_CALLBACK */
 259:.\Generated_Source\PSoC5/UART_1_INT.c **** 
 260:.\Generated_Source\PSoC5/UART_1_INT.c ****     #if(CY_PSOC3)
 261:.\Generated_Source\PSoC5/UART_1_INT.c ****         EA = int_en;
 262:.\Generated_Source\PSoC5/UART_1_INT.c ****     #endif /* (CY_PSOC3) */
 263:.\Generated_Source\PSoC5/UART_1_INT.c ****    }
 234              		.loc 1 263 0
 235 0052 BD46     		mov	sp, r7
 236              		.cfi_def_cfa_register 13
 237              		@ sp needed
 238 0054 5DF8047B 		ldr	r7, [sp], #4
 239              		.cfi_restore 7
 240              		.cfi_def_cfa_offset 0
 241 0058 7047     		bx	lr
 242              	.L15:
 243 005a 00BF     		.align	2
 244              	.L14:
 245 005c 00000000 		.word	UART_1_txBufferRead
 246 0060 4F640040 		.word	1073767503
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 10


 247 0064 00000000 		.word	UART_1_txBuffer
 248 0068 00000000 		.word	UART_1_txBufferWrite
 249 006c 6F640040 		.word	1073767535
 250              		.cfi_endproc
 251              	.LFE1:
 252              		.size	UART_1_TXISR, .-UART_1_TXISR
 253              		.text
 254              	.Letext0:
 255              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 256              		.file 3 ".\\Generated_Source\\PSoC5\\UART_1.h"
 257              		.section	.debug_info,"",%progbits
 258              	.Ldebug_info0:
 259 0000 89010000 		.4byte	0x189
 260 0004 0400     		.2byte	0x4
 261 0006 00000000 		.4byte	.Ldebug_abbrev0
 262 000a 04       		.byte	0x4
 263 000b 01       		.uleb128 0x1
 264 000c 1E010000 		.4byte	.LASF28
 265 0010 01       		.byte	0x1
 266 0011 14000000 		.4byte	.LASF29
 267 0015 98000000 		.4byte	.LASF30
 268 0019 00000000 		.4byte	.Ldebug_ranges0+0
 269 001d 00000000 		.4byte	0
 270 0021 00000000 		.4byte	.Ldebug_line0
 271 0025 02       		.uleb128 0x2
 272 0026 01       		.byte	0x1
 273 0027 06       		.byte	0x6
 274 0028 85020000 		.4byte	.LASF0
 275 002c 02       		.uleb128 0x2
 276 002d 01       		.byte	0x1
 277 002e 08       		.byte	0x8
 278 002f 10010000 		.4byte	.LASF1
 279 0033 02       		.uleb128 0x2
 280 0034 02       		.byte	0x2
 281 0035 05       		.byte	0x5
 282 0036 34020000 		.4byte	.LASF2
 283 003a 02       		.uleb128 0x2
 284 003b 02       		.byte	0x2
 285 003c 07       		.byte	0x7
 286 003d 5A000000 		.4byte	.LASF3
 287 0041 02       		.uleb128 0x2
 288 0042 04       		.byte	0x4
 289 0043 05       		.byte	0x5
 290 0044 53020000 		.4byte	.LASF4
 291 0048 02       		.uleb128 0x2
 292 0049 04       		.byte	0x4
 293 004a 07       		.byte	0x7
 294 004b DB000000 		.4byte	.LASF5
 295 004f 02       		.uleb128 0x2
 296 0050 08       		.byte	0x8
 297 0051 05       		.byte	0x5
 298 0052 14020000 		.4byte	.LASF6
 299 0056 02       		.uleb128 0x2
 300 0057 08       		.byte	0x8
 301 0058 07       		.byte	0x7
 302 0059 DC010000 		.4byte	.LASF7
 303 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 11


 304 005e 04       		.byte	0x4
 305 005f 05       		.byte	0x5
 306 0060 696E7400 		.ascii	"int\000"
 307 0064 02       		.uleb128 0x2
 308 0065 04       		.byte	0x4
 309 0066 07       		.byte	0x7
 310 0067 CF010000 		.4byte	.LASF8
 311 006b 04       		.uleb128 0x4
 312 006c ED000000 		.4byte	.LASF9
 313 0070 02       		.byte	0x2
 314 0071 9201     		.2byte	0x192
 315 0073 2C000000 		.4byte	0x2c
 316 0077 04       		.uleb128 0x4
 317 0078 B3010000 		.4byte	.LASF10
 318 007c 02       		.byte	0x2
 319 007d 9301     		.2byte	0x193
 320 007f 3A000000 		.4byte	0x3a
 321 0083 02       		.uleb128 0x2
 322 0084 04       		.byte	0x4
 323 0085 04       		.byte	0x4
 324 0086 3A000000 		.4byte	.LASF11
 325 008a 02       		.uleb128 0x2
 326 008b 08       		.byte	0x8
 327 008c 04       		.byte	0x4
 328 008d AC010000 		.4byte	.LASF12
 329 0091 02       		.uleb128 0x2
 330 0092 01       		.byte	0x1
 331 0093 08       		.byte	0x8
 332 0094 5C020000 		.4byte	.LASF13
 333 0098 04       		.uleb128 0x4
 334 0099 D6000000 		.4byte	.LASF14
 335 009d 02       		.byte	0x2
 336 009e 3C02     		.2byte	0x23c
 337 00a0 A4000000 		.4byte	0xa4
 338 00a4 05       		.uleb128 0x5
 339 00a5 6B000000 		.4byte	0x6b
 340 00a9 05       		.uleb128 0x5
 341 00aa 77000000 		.4byte	0x77
 342 00ae 02       		.uleb128 0x2
 343 00af 04       		.byte	0x4
 344 00b0 07       		.byte	0x7
 345 00b1 0B020000 		.4byte	.LASF15
 346 00b5 06       		.uleb128 0x6
 347 00b6 80000000 		.4byte	.LASF31
 348 00ba 01       		.byte	0x1
 349 00bb 3B       		.byte	0x3b
 350 00bc 00000000 		.4byte	.LFB0
 351 00c0 D8000000 		.4byte	.LFE0-.LFB0
 352 00c4 01       		.uleb128 0x1
 353 00c5 9C       		.byte	0x9c
 354 00c6 F5000000 		.4byte	0xf5
 355 00ca 07       		.uleb128 0x7
 356 00cb 91020000 		.4byte	.LASF16
 357 00cf 01       		.byte	0x1
 358 00d0 3D       		.byte	0x3d
 359 00d1 6B000000 		.4byte	0x6b
 360 00d5 02       		.uleb128 0x2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 12


 361 00d6 91       		.byte	0x91
 362 00d7 75       		.sleb128 -11
 363 00d8 07       		.uleb128 0x7
 364 00d9 8D000000 		.4byte	.LASF17
 365 00dd 01       		.byte	0x1
 366 00de 3E       		.byte	0x3e
 367 00df 6B000000 		.4byte	0x6b
 368 00e3 02       		.uleb128 0x2
 369 00e4 91       		.byte	0x91
 370 00e5 76       		.sleb128 -10
 371 00e6 07       		.uleb128 0x7
 372 00e7 22020000 		.4byte	.LASF18
 373 00eb 01       		.byte	0x1
 374 00ec 3F       		.byte	0x3f
 375 00ed 6B000000 		.4byte	0x6b
 376 00f1 02       		.uleb128 0x2
 377 00f2 91       		.byte	0x91
 378 00f3 77       		.sleb128 -9
 379 00f4 00       		.byte	0
 380 00f5 08       		.uleb128 0x8
 381 00f6 F3000000 		.4byte	.LASF32
 382 00fa 01       		.byte	0x1
 383 00fb D8       		.byte	0xd8
 384 00fc 00000000 		.4byte	.LFB1
 385 0100 70000000 		.4byte	.LFE1-.LFB1
 386 0104 01       		.uleb128 0x1
 387 0105 9C       		.byte	0x9c
 388 0106 09       		.uleb128 0x9
 389 0107 6B000000 		.4byte	0x6b
 390 010b 16010000 		.4byte	0x116
 391 010f 0A       		.uleb128 0xa
 392 0110 AE000000 		.4byte	0xae
 393 0114 FF       		.byte	0xff
 394 0115 00       		.byte	0
 395 0116 0B       		.uleb128 0xb
 396 0117 00010000 		.4byte	.LASF19
 397 011b 03       		.byte	0x3
 398 011c 3801     		.2byte	0x138
 399 011e 22010000 		.4byte	0x122
 400 0122 05       		.uleb128 0x5
 401 0123 06010000 		.4byte	0x106
 402 0127 0B       		.uleb128 0xb
 403 0128 71020000 		.4byte	.LASF20
 404 012c 03       		.byte	0x3
 405 012d 3901     		.2byte	0x139
 406 012f A9000000 		.4byte	0xa9
 407 0133 0B       		.uleb128 0xb
 408 0134 3E020000 		.4byte	.LASF21
 409 0138 03       		.byte	0x3
 410 0139 3A01     		.2byte	0x13a
 411 013b 77000000 		.4byte	0x77
 412 013f 0B       		.uleb128 0xb
 413 0140 6D000000 		.4byte	.LASF22
 414 0144 03       		.byte	0x3
 415 0145 3D01     		.2byte	0x13d
 416 0147 6B000000 		.4byte	0x6b
 417 014b 0B       		.uleb128 0xb
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 13


 418 014c 61020000 		.4byte	.LASF23
 419 0150 03       		.byte	0x3
 420 0151 3E01     		.2byte	0x13e
 421 0153 57010000 		.4byte	0x157
 422 0157 05       		.uleb128 0x5
 423 0158 06010000 		.4byte	0x106
 424 015c 0B       		.uleb128 0xb
 425 015d 00000000 		.4byte	.LASF24
 426 0161 03       		.byte	0x3
 427 0162 3F01     		.2byte	0x13f
 428 0164 A9000000 		.4byte	0xa9
 429 0168 0B       		.uleb128 0xb
 430 0169 BA010000 		.4byte	.LASF25
 431 016d 03       		.byte	0x3
 432 016e 4001     		.2byte	0x140
 433 0170 A9000000 		.4byte	0xa9
 434 0174 0B       		.uleb128 0xb
 435 0175 40000000 		.4byte	.LASF26
 436 0179 03       		.byte	0x3
 437 017a 4101     		.2byte	0x141
 438 017c A4000000 		.4byte	0xa4
 439 0180 0B       		.uleb128 0xb
 440 0181 F3010000 		.4byte	.LASF27
 441 0185 03       		.byte	0x3
 442 0186 4201     		.2byte	0x142
 443 0188 A4000000 		.4byte	0xa4
 444 018c 00       		.byte	0
 445              		.section	.debug_abbrev,"",%progbits
 446              	.Ldebug_abbrev0:
 447 0000 01       		.uleb128 0x1
 448 0001 11       		.uleb128 0x11
 449 0002 01       		.byte	0x1
 450 0003 25       		.uleb128 0x25
 451 0004 0E       		.uleb128 0xe
 452 0005 13       		.uleb128 0x13
 453 0006 0B       		.uleb128 0xb
 454 0007 03       		.uleb128 0x3
 455 0008 0E       		.uleb128 0xe
 456 0009 1B       		.uleb128 0x1b
 457 000a 0E       		.uleb128 0xe
 458 000b 55       		.uleb128 0x55
 459 000c 17       		.uleb128 0x17
 460 000d 11       		.uleb128 0x11
 461 000e 01       		.uleb128 0x1
 462 000f 10       		.uleb128 0x10
 463 0010 17       		.uleb128 0x17
 464 0011 00       		.byte	0
 465 0012 00       		.byte	0
 466 0013 02       		.uleb128 0x2
 467 0014 24       		.uleb128 0x24
 468 0015 00       		.byte	0
 469 0016 0B       		.uleb128 0xb
 470 0017 0B       		.uleb128 0xb
 471 0018 3E       		.uleb128 0x3e
 472 0019 0B       		.uleb128 0xb
 473 001a 03       		.uleb128 0x3
 474 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 14


 475 001c 00       		.byte	0
 476 001d 00       		.byte	0
 477 001e 03       		.uleb128 0x3
 478 001f 24       		.uleb128 0x24
 479 0020 00       		.byte	0
 480 0021 0B       		.uleb128 0xb
 481 0022 0B       		.uleb128 0xb
 482 0023 3E       		.uleb128 0x3e
 483 0024 0B       		.uleb128 0xb
 484 0025 03       		.uleb128 0x3
 485 0026 08       		.uleb128 0x8
 486 0027 00       		.byte	0
 487 0028 00       		.byte	0
 488 0029 04       		.uleb128 0x4
 489 002a 16       		.uleb128 0x16
 490 002b 00       		.byte	0
 491 002c 03       		.uleb128 0x3
 492 002d 0E       		.uleb128 0xe
 493 002e 3A       		.uleb128 0x3a
 494 002f 0B       		.uleb128 0xb
 495 0030 3B       		.uleb128 0x3b
 496 0031 05       		.uleb128 0x5
 497 0032 49       		.uleb128 0x49
 498 0033 13       		.uleb128 0x13
 499 0034 00       		.byte	0
 500 0035 00       		.byte	0
 501 0036 05       		.uleb128 0x5
 502 0037 35       		.uleb128 0x35
 503 0038 00       		.byte	0
 504 0039 49       		.uleb128 0x49
 505 003a 13       		.uleb128 0x13
 506 003b 00       		.byte	0
 507 003c 00       		.byte	0
 508 003d 06       		.uleb128 0x6
 509 003e 2E       		.uleb128 0x2e
 510 003f 01       		.byte	0x1
 511 0040 3F       		.uleb128 0x3f
 512 0041 19       		.uleb128 0x19
 513 0042 03       		.uleb128 0x3
 514 0043 0E       		.uleb128 0xe
 515 0044 3A       		.uleb128 0x3a
 516 0045 0B       		.uleb128 0xb
 517 0046 3B       		.uleb128 0x3b
 518 0047 0B       		.uleb128 0xb
 519 0048 27       		.uleb128 0x27
 520 0049 19       		.uleb128 0x19
 521 004a 11       		.uleb128 0x11
 522 004b 01       		.uleb128 0x1
 523 004c 12       		.uleb128 0x12
 524 004d 06       		.uleb128 0x6
 525 004e 40       		.uleb128 0x40
 526 004f 18       		.uleb128 0x18
 527 0050 9742     		.uleb128 0x2117
 528 0052 19       		.uleb128 0x19
 529 0053 01       		.uleb128 0x1
 530 0054 13       		.uleb128 0x13
 531 0055 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 15


 532 0056 00       		.byte	0
 533 0057 07       		.uleb128 0x7
 534 0058 34       		.uleb128 0x34
 535 0059 00       		.byte	0
 536 005a 03       		.uleb128 0x3
 537 005b 0E       		.uleb128 0xe
 538 005c 3A       		.uleb128 0x3a
 539 005d 0B       		.uleb128 0xb
 540 005e 3B       		.uleb128 0x3b
 541 005f 0B       		.uleb128 0xb
 542 0060 49       		.uleb128 0x49
 543 0061 13       		.uleb128 0x13
 544 0062 02       		.uleb128 0x2
 545 0063 18       		.uleb128 0x18
 546 0064 00       		.byte	0
 547 0065 00       		.byte	0
 548 0066 08       		.uleb128 0x8
 549 0067 2E       		.uleb128 0x2e
 550 0068 00       		.byte	0
 551 0069 3F       		.uleb128 0x3f
 552 006a 19       		.uleb128 0x19
 553 006b 03       		.uleb128 0x3
 554 006c 0E       		.uleb128 0xe
 555 006d 3A       		.uleb128 0x3a
 556 006e 0B       		.uleb128 0xb
 557 006f 3B       		.uleb128 0x3b
 558 0070 0B       		.uleb128 0xb
 559 0071 27       		.uleb128 0x27
 560 0072 19       		.uleb128 0x19
 561 0073 11       		.uleb128 0x11
 562 0074 01       		.uleb128 0x1
 563 0075 12       		.uleb128 0x12
 564 0076 06       		.uleb128 0x6
 565 0077 40       		.uleb128 0x40
 566 0078 18       		.uleb128 0x18
 567 0079 9742     		.uleb128 0x2117
 568 007b 19       		.uleb128 0x19
 569 007c 00       		.byte	0
 570 007d 00       		.byte	0
 571 007e 09       		.uleb128 0x9
 572 007f 01       		.uleb128 0x1
 573 0080 01       		.byte	0x1
 574 0081 49       		.uleb128 0x49
 575 0082 13       		.uleb128 0x13
 576 0083 01       		.uleb128 0x1
 577 0084 13       		.uleb128 0x13
 578 0085 00       		.byte	0
 579 0086 00       		.byte	0
 580 0087 0A       		.uleb128 0xa
 581 0088 21       		.uleb128 0x21
 582 0089 00       		.byte	0
 583 008a 49       		.uleb128 0x49
 584 008b 13       		.uleb128 0x13
 585 008c 2F       		.uleb128 0x2f
 586 008d 0B       		.uleb128 0xb
 587 008e 00       		.byte	0
 588 008f 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 16


 589 0090 0B       		.uleb128 0xb
 590 0091 34       		.uleb128 0x34
 591 0092 00       		.byte	0
 592 0093 03       		.uleb128 0x3
 593 0094 0E       		.uleb128 0xe
 594 0095 3A       		.uleb128 0x3a
 595 0096 0B       		.uleb128 0xb
 596 0097 3B       		.uleb128 0x3b
 597 0098 05       		.uleb128 0x5
 598 0099 49       		.uleb128 0x49
 599 009a 13       		.uleb128 0x13
 600 009b 3F       		.uleb128 0x3f
 601 009c 19       		.uleb128 0x19
 602 009d 3C       		.uleb128 0x3c
 603 009e 19       		.uleb128 0x19
 604 009f 00       		.byte	0
 605 00a0 00       		.byte	0
 606 00a1 00       		.byte	0
 607              		.section	.debug_aranges,"",%progbits
 608 0000 24000000 		.4byte	0x24
 609 0004 0200     		.2byte	0x2
 610 0006 00000000 		.4byte	.Ldebug_info0
 611 000a 04       		.byte	0x4
 612 000b 00       		.byte	0
 613 000c 0000     		.2byte	0
 614 000e 0000     		.2byte	0
 615 0010 00000000 		.4byte	.LFB0
 616 0014 D8000000 		.4byte	.LFE0-.LFB0
 617 0018 00000000 		.4byte	.LFB1
 618 001c 70000000 		.4byte	.LFE1-.LFB1
 619 0020 00000000 		.4byte	0
 620 0024 00000000 		.4byte	0
 621              		.section	.debug_ranges,"",%progbits
 622              	.Ldebug_ranges0:
 623 0000 00000000 		.4byte	.LFB0
 624 0004 D8000000 		.4byte	.LFE0
 625 0008 00000000 		.4byte	.LFB1
 626 000c 70000000 		.4byte	.LFE1
 627 0010 00000000 		.4byte	0
 628 0014 00000000 		.4byte	0
 629              		.section	.debug_line,"",%progbits
 630              	.Ldebug_line0:
 631 0000 AF000000 		.section	.debug_str,"MS",%progbits,1
 631      02005500 
 631      00000201 
 631      FB0E0D00 
 631      01010101 
 632              	.LASF24:
 633 0000 55415254 		.ascii	"UART_1_rxBufferRead\000"
 633      5F315F72 
 633      78427566 
 633      66657252 
 633      65616400 
 634              	.LASF29:
 635 0014 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_1_INT.c\000"
 635      6E657261 
 635      7465645F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 17


 635      536F7572 
 635      63655C50 
 636              	.LASF11:
 637 003a 666C6F61 		.ascii	"float\000"
 637      7400
 638              	.LASF26:
 639 0040 55415254 		.ascii	"UART_1_rxBufferLoopDetect\000"
 639      5F315F72 
 639      78427566 
 639      6665724C 
 639      6F6F7044 
 640              	.LASF3:
 641 005a 73686F72 		.ascii	"short unsigned int\000"
 641      7420756E 
 641      7369676E 
 641      65642069 
 641      6E7400
 642              	.LASF22:
 643 006d 55415254 		.ascii	"UART_1_errorStatus\000"
 643      5F315F65 
 643      72726F72 
 643      53746174 
 643      757300
 644              	.LASF31:
 645 0080 55415254 		.ascii	"UART_1_RXISR\000"
 645      5F315F52 
 645      58495352 
 645      00
 646              	.LASF17:
 647 008d 72656164 		.ascii	"readStatus\000"
 647      53746174 
 647      757300
 648              	.LASF30:
 649 0098 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\moisture_sensor\\"
 649      73657273 
 649      5C676C65 
 649      6E6E5C4F 
 649      6E654472 
 650 00c5 5553425F 		.ascii	"USB_UART01.cydsn\000"
 650      55415254 
 650      30312E63 
 650      7964736E 
 650      00
 651              	.LASF14:
 652 00d6 72656738 		.ascii	"reg8\000"
 652      00
 653              	.LASF5:
 654 00db 6C6F6E67 		.ascii	"long unsigned int\000"
 654      20756E73 
 654      69676E65 
 654      6420696E 
 654      7400
 655              	.LASF9:
 656 00ed 75696E74 		.ascii	"uint8\000"
 656      3800
 657              	.LASF32:
 658 00f3 55415254 		.ascii	"UART_1_TXISR\000"
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 18


 658      5F315F54 
 658      58495352 
 658      00
 659              	.LASF19:
 660 0100 55415254 		.ascii	"UART_1_txBuffer\000"
 660      5F315F74 
 660      78427566 
 660      66657200 
 661              	.LASF1:
 662 0110 756E7369 		.ascii	"unsigned char\000"
 662      676E6564 
 662      20636861 
 662      7200
 663              	.LASF28:
 664 011e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 664      4320342E 
 664      392E3320 
 664      32303135 
 664      30333033 
 665 0151 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 665      20726576 
 665      6973696F 
 665      6E203232 
 665      31323230 
 666 0184 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 666      66756E63 
 666      74696F6E 
 666      2D736563 
 666      74696F6E 
 667              	.LASF12:
 668 01ac 646F7562 		.ascii	"double\000"
 668      6C6500
 669              	.LASF10:
 670 01b3 75696E74 		.ascii	"uint16\000"
 670      313600
 671              	.LASF25:
 672 01ba 55415254 		.ascii	"UART_1_rxBufferWrite\000"
 672      5F315F72 
 672      78427566 
 672      66657257 
 672      72697465 
 673              	.LASF8:
 674 01cf 756E7369 		.ascii	"unsigned int\000"
 674      676E6564 
 674      20696E74 
 674      00
 675              	.LASF7:
 676 01dc 6C6F6E67 		.ascii	"long long unsigned int\000"
 676      206C6F6E 
 676      6720756E 
 676      7369676E 
 676      65642069 
 677              	.LASF27:
 678 01f3 55415254 		.ascii	"UART_1_rxBufferOverflow\000"
 678      5F315F72 
 678      78427566 
 678      6665724F 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\cchuyWb6.s 			page 19


 678      76657266 
 679              	.LASF15:
 680 020b 73697A65 		.ascii	"sizetype\000"
 680      74797065 
 680      00
 681              	.LASF6:
 682 0214 6C6F6E67 		.ascii	"long long int\000"
 682      206C6F6E 
 682      6720696E 
 682      7400
 683              	.LASF18:
 684 0222 696E6372 		.ascii	"increment_pointer\000"
 684      656D656E 
 684      745F706F 
 684      696E7465 
 684      7200
 685              	.LASF2:
 686 0234 73686F72 		.ascii	"short int\000"
 686      7420696E 
 686      7400
 687              	.LASF21:
 688 023e 55415254 		.ascii	"UART_1_txBufferWrite\000"
 688      5F315F74 
 688      78427566 
 688      66657257 
 688      72697465 
 689              	.LASF4:
 690 0253 6C6F6E67 		.ascii	"long int\000"
 690      20696E74 
 690      00
 691              	.LASF13:
 692 025c 63686172 		.ascii	"char\000"
 692      00
 693              	.LASF23:
 694 0261 55415254 		.ascii	"UART_1_rxBuffer\000"
 694      5F315F72 
 694      78427566 
 694      66657200 
 695              	.LASF20:
 696 0271 55415254 		.ascii	"UART_1_txBufferRead\000"
 696      5F315F74 
 696      78427566 
 696      66657252 
 696      65616400 
 697              	.LASF0:
 698 0285 7369676E 		.ascii	"signed char\000"
 698      65642063 
 698      68617200 
 699              	.LASF16:
 700 0291 72656164 		.ascii	"readData\000"
 700      44617461 
 700      00
 701              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
