ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_1_initVar
  19              		.bss
  20              		.type	PWM_1_initVar, %object
  21              		.size	PWM_1_initVar, 1
  22              	PWM_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_1_Start, %function
  30              	PWM_1_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 2


  26:.\Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_1.c **** 
  32:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_1.c **** 
  34:.\Generated_Source\PSoC5/PWM_1.c **** 
  35:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_1.c **** *
  44:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_1.c **** *
  47:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_1.c **** *
  50:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_1.c **** *
  54:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC5/PWM_1.c ****     {
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	PWM_1_Init
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 3


  54              	.L2:
  62:.\Generated_Source\PSoC5/PWM_1.c ****     }
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:.\Generated_Source\PSoC5/PWM_1.c **** 
  65:.\Generated_Source\PSoC5/PWM_1.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	PWM_1_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_1_Start, .-PWM_1_Start
  66              		.section	.text.PWM_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_1_Init, %function
  72              	PWM_1_Init:
  73              	.LFB1:
  66:.\Generated_Source\PSoC5/PWM_1.c **** 
  67:.\Generated_Source\PSoC5/PWM_1.c **** 
  68:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC5/PWM_1.c **** *
  77:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_1.c **** *
  80:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_1.c **** *
  83:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 4


  87:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:.\Generated_Source\PSoC5/PWM_1.c **** 
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_1.c **** 
  97:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_1.c **** 
 104:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_1.c **** 
 107:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC5/PWM_1.c **** 
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_1.c **** 
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 164B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 134A     		ldr	r2, .L6
  94 0014 FB79     		ldrb	r3, [r7, #7]
  95 0016 43F00903 		orr	r3, r3, #9
  96 001a DBB2     		uxtb	r3, r3
  97 001c 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_1.c **** 
 123:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 129 0
  99 001e 114A     		ldr	r2, .L6+4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 5


 100 0020 104B     		ldr	r3, .L6+4
 101 0022 1B78     		ldrb	r3, [r3]
 102 0024 DBB2     		uxtb	r3, r3
 103 0026 43F00103 		orr	r3, r3, #1
 104 002a DBB2     		uxtb	r3, r3
 105 002c 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 106              		.loc 1 130 0
 107 002e 0E4A     		ldr	r2, .L6+8
 108 0030 0D4B     		ldr	r3, .L6+8
 109 0032 1B78     		ldrb	r3, [r3]
 110 0034 DBB2     		uxtb	r3, r3
 111 0036 43F00103 		orr	r3, r3, #1
 112 003a DBB2     		uxtb	r3, r3
 113 003c 1370     		strb	r3, [r2]
 131:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_1.c **** 
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 114              		.loc 1 133 0
 115 003e 4FF6FF70 		movw	r0, #65535
 116 0042 FFF7FEFF 		bl	PWM_1_WriteCounter
 134:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_1.c **** 
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 117              		.loc 1 136 0
 118 0046 4FF6FF70 		movw	r0, #65535
 119 004a FFF7FEFF 		bl	PWM_1_WritePeriod
 137:.\Generated_Source\PSoC5/PWM_1.c **** 
 138:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 120              		.loc 1 141 0
 121 004e 0020     		movs	r0, #0
 122 0050 FFF7FEFF 		bl	PWM_1_WriteCompare1
 142:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 123              		.loc 1 142 0
 124 0054 0020     		movs	r0, #0
 125 0056 FFF7FEFF 		bl	PWM_1_WriteCompare2
 143:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_1.c **** 
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_1.c **** 
 149:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_1.c **** 
 153:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_1.c **** 
 157:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 6


 161:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_1.c **** 
 165:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_1.c **** 
 171:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC5/PWM_1.c **** 
 174:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_1.c **** }
 126              		.loc 1 179 0
 127 005a 0837     		adds	r7, r7, #8
 128              		.cfi_def_cfa_offset 8
 129 005c BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 005e 80BD     		pop	{r7, pc}
 133              	.L7:
 134              		.align	2
 135              	.L6:
 136 0060 75650040 		.word	1073767797
 137 0064 94650040 		.word	1073767828
 138 0068 95650040 		.word	1073767829
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	PWM_1_Init, .-PWM_1_Init
 142              		.section	.text.PWM_1_Enable,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_1_Enable
 145              		.thumb
 146              		.thumb_func
 147              		.type	PWM_1_Enable, %function
 148              	PWM_1_Enable:
 149              	.LFB2:
 180:.\Generated_Source\PSoC5/PWM_1.c **** 
 181:.\Generated_Source\PSoC5/PWM_1.c **** 
 182:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_1.c **** *  None
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 7


 194:.\Generated_Source\PSoC5/PWM_1.c **** *
 195:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_1.c **** *
 198:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_1.c **** {
 150              		.loc 1 200 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 7, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 160              		.loc 1 209 0
 161 0004 054A     		ldr	r2, .L9
 162 0006 054B     		ldr	r3, .L9
 163 0008 1B78     		ldrb	r3, [r3]
 164 000a DBB2     		uxtb	r3, r3
 165 000c 63F07F03 		orn	r3, r3, #127
 166 0010 DBB2     		uxtb	r3, r3
 167 0012 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_1.c **** }
 168              		.loc 1 211 0
 169 0014 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 0016 5DF8047B 		ldr	r7, [sp], #4
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 0
 175 001a 7047     		bx	lr
 176              	.L10:
 177              		.align	2
 178              	.L9:
 179 001c 75650040 		.word	1073767797
 180              		.cfi_endproc
 181              	.LFE2:
 182              		.size	PWM_1_Enable, .-PWM_1_Enable
 183              		.section	.text.PWM_1_Stop,"ax",%progbits
 184              		.align	2
 185              		.global	PWM_1_Stop
 186              		.thumb
 187              		.thumb_func
 188              		.type	PWM_1_Stop, %function
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 8


 189              	PWM_1_Stop:
 190              	.LFB3:
 212:.\Generated_Source\PSoC5/PWM_1.c **** 
 213:.\Generated_Source\PSoC5/PWM_1.c **** 
 214:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_1.c **** *
 218:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_1.c **** *
 225:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_1.c **** *
 228:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_1.c **** *
 232:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC5/PWM_1.c **** {
 191              		.loc 1 234 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 0002 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 201              		.loc 1 236 0
 202 0004 054A     		ldr	r2, .L12
 203 0006 054B     		ldr	r3, .L12
 204 0008 1B78     		ldrb	r3, [r3]
 205 000a DBB2     		uxtb	r3, r3
 206 000c 03F07F03 		and	r3, r3, #127
 207 0010 DBB2     		uxtb	r3, r3
 208 0012 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** 
 239:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_1.c **** }
 209              		.loc 1 244 0
 210 0014 BD46     		mov	sp, r7
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 9


 213 0016 5DF8047B 		ldr	r7, [sp], #4
 214              		.cfi_restore 7
 215              		.cfi_def_cfa_offset 0
 216 001a 7047     		bx	lr
 217              	.L13:
 218              		.align	2
 219              	.L12:
 220 001c 75650040 		.word	1073767797
 221              		.cfi_endproc
 222              	.LFE3:
 223              		.size	PWM_1_Stop, .-PWM_1_Stop
 224              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 225              		.align	2
 226              		.global	PWM_1_WriteCounter
 227              		.thumb
 228              		.thumb_func
 229              		.type	PWM_1_WriteCounter, %function
 230              	PWM_1_WriteCounter:
 231              	.LFB4:
 245:.\Generated_Source\PSoC5/PWM_1.c **** 
 246:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_1.c **** 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 
 250:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_1.c ****         *
 254:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_1.c ****         *
 258:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_1.c ****         *
 262:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_1.c ****         *
 265:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_1.c ****         {
 268:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_1.c **** 
 270:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_1.c **** 
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_1.c **** 
 279:.\Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC5/PWM_1.c **** 
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 10


 283:.\Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_1.c **** 
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_1.c **** 
 295:.\Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_1.c ****         }
 304:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_1.c **** 
 306:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_1.c **** 
 308:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_1.c **** 
 310:.\Generated_Source\PSoC5/PWM_1.c **** 
 311:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_1.c ****         *
 315:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_1.c ****         *
 318:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_1.c ****         *
 322:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_1.c ****         *
 325:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_1.c ****         {
 328:.\Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_1.c **** 
 335:.\Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_1.c ****         }
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 11


 340:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_1.c **** 
 342:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_1.c **** 
 344:.\Generated_Source\PSoC5/PWM_1.c **** 
 345:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *
 349:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *
 352:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_1.c ****     *
 356:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_1.c ****     *
 359:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_1.c ****     {
 362:.\Generated_Source\PSoC5/PWM_1.c **** 
 363:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_1.c **** 
 370:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_1.c ****     }
 375:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_1.c **** 
 379:.\Generated_Source\PSoC5/PWM_1.c **** 
 380:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_1.c **** 
 382:.\Generated_Source\PSoC5/PWM_1.c **** 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 12


 397:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_1.c ****     *
 399:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_1.c ****     *
 402:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_1.c ****     {
 232              		.loc 1 405 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 8
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237 0000 80B4     		push	{r7}
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0002 83B0     		sub	sp, sp, #12
 241              		.cfi_def_cfa_offset 16
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 244 0006 0346     		mov	r3, r0
 245 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
 246              		.loc 1 406 0
 247 000a 044A     		ldr	r2, .L15
 248 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 249 000e 1380     		strh	r3, [r2]	@ movhi
 407:.\Generated_Source\PSoC5/PWM_1.c ****     }
 250              		.loc 1 407 0
 251 0010 0C37     		adds	r7, r7, #12
 252              		.cfi_def_cfa_offset 4
 253 0012 BD46     		mov	sp, r7
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 0014 5DF8047B 		ldr	r7, [sp], #4
 257              		.cfi_restore 7
 258              		.cfi_def_cfa_offset 0
 259 0018 7047     		bx	lr
 260              	.L16:
 261 001a 00BF     		.align	2
 262              	.L15:
 263 001c 086A0040 		.word	1073768968
 264              		.cfi_endproc
 265              	.LFE4:
 266              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 267              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_ReadCounter
 270              		.thumb
 271              		.thumb_func
 272              		.type	PWM_1_ReadCounter, %function
 273              	PWM_1_ReadCounter:
 274              	.LFB5:
 408:.\Generated_Source\PSoC5/PWM_1.c **** 
 409:.\Generated_Source\PSoC5/PWM_1.c **** 
 410:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 13


 411:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *
 414:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_1.c ****     *
 421:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_1.c ****     *
 424:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_1.c ****     {
 275              		.loc 1 426 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280 0000 80B4     		push	{r7}
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 7, -4
 283 0002 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 285              		.loc 1 430 0
 286 0004 044B     		ldr	r3, .L19
 287 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 288              		.loc 1 433 0
 289 0008 044B     		ldr	r3, .L19+4
 290 000a 1B88     		ldrh	r3, [r3]	@ movhi
 291 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC5/PWM_1.c ****     }
 292              		.loc 1 434 0
 293 000e 1846     		mov	r0, r3
 294 0010 BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 0012 5DF8047B 		ldr	r7, [sp], #4
 298              		.cfi_restore 7
 299              		.cfi_def_cfa_offset 0
 300 0016 7047     		bx	lr
 301              	.L20:
 302              		.align	2
 303              	.L19:
 304 0018 14650040 		.word	1073767700
 305 001c A86A0040 		.word	1073769128
 306              		.cfi_endproc
 307              	.LFE5:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 14


 308              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 309              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 310              		.align	2
 311              		.global	PWM_1_WritePeriod
 312              		.thumb
 313              		.thumb_func
 314              		.type	PWM_1_WritePeriod, %function
 315              	PWM_1_WritePeriod:
 316              	.LFB6:
 435:.\Generated_Source\PSoC5/PWM_1.c **** 
 436:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_1.c **** 
 438:.\Generated_Source\PSoC5/PWM_1.c **** 
 439:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_1.c ****         *
 443:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_1.c ****         *
 446:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_1.c ****         *
 449:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_1.c ****         *
 452:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_1.c ****             {
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_1.c ****             }
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 460:.\Generated_Source\PSoC5/PWM_1.c **** 
 461:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_1.c **** 
 463:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_1.c **** 
 465:.\Generated_Source\PSoC5/PWM_1.c **** 
 466:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_1.c **** *
 470:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_1.c **** *
 474:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_1.c **** *
 478:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_1.c **** *
 481:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 15


 483:.\Generated_Source\PSoC5/PWM_1.c **** {
 317              		.loc 1 483 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 8
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 83B0     		sub	sp, sp, #12
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 329 0006 0346     		mov	r3, r0
 330 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 331              		.loc 1 487 0
 332 000a 044A     		ldr	r2, .L22
 333 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 334 000e 1380     		strh	r3, [r2]	@ movhi
 488:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_1.c **** }
 335              		.loc 1 489 0
 336 0010 0C37     		adds	r7, r7, #12
 337              		.cfi_def_cfa_offset 4
 338 0012 BD46     		mov	sp, r7
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 0014 5DF8047B 		ldr	r7, [sp], #4
 342              		.cfi_restore 7
 343              		.cfi_def_cfa_offset 0
 344 0018 7047     		bx	lr
 345              	.L23:
 346 001a 00BF     		.align	2
 347              	.L22:
 348 001c 886A0040 		.word	1073769096
 349              		.cfi_endproc
 350              	.LFE6:
 351              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 352              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_1_WriteCompare1
 355              		.thumb
 356              		.thumb_func
 357              		.type	PWM_1_WriteCompare1, %function
 358              	PWM_1_WriteCompare1:
 359              	.LFB7:
 490:.\Generated_Source\PSoC5/PWM_1.c **** 
 491:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_1.c **** 
 493:.\Generated_Source\PSoC5/PWM_1.c **** 
 494:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 16


 497:.\Generated_Source\PSoC5/PWM_1.c ****     *
 498:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *
 508:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_1.c ****     *
 511:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_1.c ****     *
 515:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_1.c ****     {
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_1.c **** 
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_1.c ****     }
 533:.\Generated_Source\PSoC5/PWM_1.c **** 
 534:.\Generated_Source\PSoC5/PWM_1.c **** 
 535:.\Generated_Source\PSoC5/PWM_1.c **** #else
 536:.\Generated_Source\PSoC5/PWM_1.c **** 
 537:.\Generated_Source\PSoC5/PWM_1.c **** 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_1.c ****     *
 551:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 17


 554:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_1.c ****     {
 360              		.loc 1 557 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0000 80B4     		push	{r7}
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 0002 83B0     		sub	sp, sp, #12
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
 372 0006 0346     		mov	r3, r0
 373 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 558:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 374              		.loc 1 561 0
 375 000a 044A     		ldr	r2, .L25
 376 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 377 000e 1380     		strh	r3, [r2]	@ movhi
 562:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_1.c ****     }
 378              		.loc 1 563 0
 379 0010 0C37     		adds	r7, r7, #12
 380              		.cfi_def_cfa_offset 4
 381 0012 BD46     		mov	sp, r7
 382              		.cfi_def_cfa_register 13
 383              		@ sp needed
 384 0014 5DF8047B 		ldr	r7, [sp], #4
 385              		.cfi_restore 7
 386              		.cfi_def_cfa_offset 0
 387 0018 7047     		bx	lr
 388              	.L26:
 389 001a 00BF     		.align	2
 390              	.L25:
 391 001c 486A0040 		.word	1073769032
 392              		.cfi_endproc
 393              	.LFE7:
 394              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 395              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 396              		.align	2
 397              		.global	PWM_1_WriteCompare2
 398              		.thumb
 399              		.thumb_func
 400              		.type	PWM_1_WriteCompare2, %function
 401              	PWM_1_WriteCompare2:
 402              	.LFB8:
 564:.\Generated_Source\PSoC5/PWM_1.c **** 
 565:.\Generated_Source\PSoC5/PWM_1.c **** 
 566:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 18


 568:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *
 570:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_1.c ****     *
 580:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_1.c ****     *
 583:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_1.c ****     {
 403              		.loc 1 586 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 8
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408 0000 80B4     		push	{r7}
 409              		.cfi_def_cfa_offset 4
 410              		.cfi_offset 7, -4
 411 0002 83B0     		sub	sp, sp, #12
 412              		.cfi_def_cfa_offset 16
 413 0004 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 415 0006 0346     		mov	r3, r0
 416 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 417              		.loc 1 590 0
 418 000a 044A     		ldr	r2, .L28
 419 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 420 000e 1380     		strh	r3, [r2]	@ movhi
 591:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_1.c ****     }
 421              		.loc 1 592 0
 422 0010 0C37     		adds	r7, r7, #12
 423              		.cfi_def_cfa_offset 4
 424 0012 BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0014 5DF8047B 		ldr	r7, [sp], #4
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0018 7047     		bx	lr
 431              	.L29:
 432 001a 00BF     		.align	2
 433              	.L28:
 434 001c 686A0040 		.word	1073769064
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 19


 435              		.cfi_endproc
 436              	.LFE8:
 437              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 438              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 439              		.align	2
 440              		.global	PWM_1_ReadControlRegister
 441              		.thumb
 442              		.thumb_func
 443              		.type	PWM_1_ReadControlRegister, %function
 444              	PWM_1_ReadControlRegister:
 445              	.LFB9:
 593:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_1.c **** 
 595:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_1.c **** 
 597:.\Generated_Source\PSoC5/PWM_1.c **** 
 598:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_1.c ****     *
 608:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_1.c ****     *
 611:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_1.c ****     {
 614:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_1.c **** 
 622:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_1.c **** 
 630:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_1.c ****     }
 632:.\Generated_Source\PSoC5/PWM_1.c **** 
 633:.\Generated_Source\PSoC5/PWM_1.c **** 
 634:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 20


 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_1.c ****     *
 644:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_1.c ****     *
 647:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_1.c **** 
 655:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_1.c ****     }
 664:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_1.c **** 
 666:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_1.c **** 
 668:.\Generated_Source\PSoC5/PWM_1.c **** 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *
 673:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_1.c ****     *
 680:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_1.c ****     *
 683:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_1.c ****     {
 686:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC5/PWM_1.c ****     }
 688:.\Generated_Source\PSoC5/PWM_1.c **** 
 689:.\Generated_Source\PSoC5/PWM_1.c **** 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 21


 696:.\Generated_Source\PSoC5/PWM_1.c ****     *
 697:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *
 700:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_1.c ****     *
 710:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_1.c ****     {
 713:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 714:.\Generated_Source\PSoC5/PWM_1.c ****     }
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC5/PWM_1.c **** 
 721:.\Generated_Source\PSoC5/PWM_1.c **** 
 722:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *
 726:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_1.c ****     *
 736:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_1.c ****     {
 446              		.loc 1 738 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 83B0     		sub	sp, sp, #12
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 22


 741:.\Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 458              		.loc 1 741 0
 459 0006 054B     		ldr	r3, .L32
 460 0008 1B78     		ldrb	r3, [r3]
 461 000a FB71     		strb	r3, [r7, #7]
 742:.\Generated_Source\PSoC5/PWM_1.c ****         return (result);
 462              		.loc 1 742 0
 463 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:.\Generated_Source\PSoC5/PWM_1.c ****     }
 464              		.loc 1 743 0
 465 000e 1846     		mov	r0, r3
 466 0010 0C37     		adds	r7, r7, #12
 467              		.cfi_def_cfa_offset 4
 468 0012 BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0014 5DF8047B 		ldr	r7, [sp], #4
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0018 7047     		bx	lr
 475              	.L33:
 476 001a 00BF     		.align	2
 477              	.L32:
 478 001c 75650040 		.word	1073767797
 479              		.cfi_endproc
 480              	.LFE9:
 481              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 482              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 483              		.align	2
 484              		.global	PWM_1_WriteControlRegister
 485              		.thumb
 486              		.thumb_func
 487              		.type	PWM_1_WriteControlRegister, %function
 488              	PWM_1_WriteControlRegister:
 489              	.LFB10:
 744:.\Generated_Source\PSoC5/PWM_1.c **** 
 745:.\Generated_Source\PSoC5/PWM_1.c **** 
 746:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *
 750:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *
 754:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_1.c ****     *
 764:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 23


 766:.\Generated_Source\PSoC5/PWM_1.c ****     {
 490              		.loc 1 766 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 83B0     		sub	sp, sp, #12
 499              		.cfi_def_cfa_offset 16
 500 0004 00AF     		add	r7, sp, #0
 501              		.cfi_def_cfa_register 7
 502 0006 0346     		mov	r3, r0
 503 0008 FB71     		strb	r3, [r7, #7]
 767:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 504              		.loc 1 767 0
 505 000a 044A     		ldr	r2, .L35
 506 000c FB79     		ldrb	r3, [r7, #7]
 507 000e 1370     		strb	r3, [r2]
 768:.\Generated_Source\PSoC5/PWM_1.c ****     }
 508              		.loc 1 768 0
 509 0010 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 4
 511 0012 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0014 5DF8047B 		ldr	r7, [sp], #4
 515              		.cfi_restore 7
 516              		.cfi_def_cfa_offset 0
 517 0018 7047     		bx	lr
 518              	.L36:
 519 001a 00BF     		.align	2
 520              	.L35:
 521 001c 75650040 		.word	1073767797
 522              		.cfi_endproc
 523              	.LFE10:
 524              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 525              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 526              		.align	2
 527              		.global	PWM_1_ReadCapture
 528              		.thumb
 529              		.thumb_func
 530              		.type	PWM_1_ReadCapture, %function
 531              	PWM_1_ReadCapture:
 532              	.LFB11:
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_1.c **** 
 775:.\Generated_Source\PSoC5/PWM_1.c **** 
 776:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 24


 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_1.c ****     *
 789:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_1.c ****     {
 533              		.loc 1 791 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              		.cfi_def_cfa_offset 4
 540              		.cfi_offset 7, -4
 541 0002 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 543              		.loc 1 792 0
 544 0004 034B     		ldr	r3, .L39
 545 0006 1B88     		ldrh	r3, [r3]	@ movhi
 546 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC5/PWM_1.c ****     }
 547              		.loc 1 793 0
 548 000a 1846     		mov	r0, r3
 549 000c BD46     		mov	sp, r7
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 000e 5DF8047B 		ldr	r7, [sp], #4
 553              		.cfi_restore 7
 554              		.cfi_def_cfa_offset 0
 555 0012 7047     		bx	lr
 556              	.L40:
 557              		.align	2
 558              	.L39:
 559 0014 A86A0040 		.word	1073769128
 560              		.cfi_endproc
 561              	.LFE11:
 562              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 563              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 564              		.align	2
 565              		.global	PWM_1_ReadCompare1
 566              		.thumb
 567              		.thumb_func
 568              		.type	PWM_1_ReadCompare1, %function
 569              	PWM_1_ReadCompare1:
 570              	.LFB12:
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 25


 799:.\Generated_Source\PSoC5/PWM_1.c **** 
 800:.\Generated_Source\PSoC5/PWM_1.c **** 
 801:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *
 805:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_1.c ****     *
 815:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_1.c ****     {
 818:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_1.c ****     }
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c **** #else
 826:.\Generated_Source\PSoC5/PWM_1.c **** 
 827:.\Generated_Source\PSoC5/PWM_1.c **** 
 828:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_1.c ****     *
 841:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_1.c ****     {
 571              		.loc 1 843 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576 0000 80B4     		push	{r7}
 577              		.cfi_def_cfa_offset 4
 578              		.cfi_offset 7, -4
 579 0002 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 581              		.loc 1 844 0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 26


 582 0004 034B     		ldr	r3, .L43
 583 0006 1B88     		ldrh	r3, [r3]	@ movhi
 584 0008 9BB2     		uxth	r3, r3
 845:.\Generated_Source\PSoC5/PWM_1.c ****     }
 585              		.loc 1 845 0
 586 000a 1846     		mov	r0, r3
 587 000c BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 000e 5DF8047B 		ldr	r7, [sp], #4
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 0012 7047     		bx	lr
 594              	.L44:
 595              		.align	2
 596              	.L43:
 597 0014 486A0040 		.word	1073769032
 598              		.cfi_endproc
 599              	.LFE12:
 600              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 601              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 602              		.align	2
 603              		.global	PWM_1_ReadCompare2
 604              		.thumb
 605              		.thumb_func
 606              		.type	PWM_1_ReadCompare2, %function
 607              	PWM_1_ReadCompare2:
 608              	.LFB13:
 846:.\Generated_Source\PSoC5/PWM_1.c **** 
 847:.\Generated_Source\PSoC5/PWM_1.c **** 
 848:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_1.c ****     *
 861:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_1.c ****     {
 609              		.loc 1 863 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614 0000 80B4     		push	{r7}
 615              		.cfi_def_cfa_offset 4
 616              		.cfi_offset 7, -4
 617 0002 00AF     		add	r7, sp, #0
 618              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 27


 619              		.loc 1 864 0
 620 0004 034B     		ldr	r3, .L47
 621 0006 1B88     		ldrh	r3, [r3]	@ movhi
 622 0008 9BB2     		uxth	r3, r3
 865:.\Generated_Source\PSoC5/PWM_1.c ****     }
 623              		.loc 1 865 0
 624 000a 1846     		mov	r0, r3
 625 000c BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 000e 5DF8047B 		ldr	r7, [sp], #4
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 0012 7047     		bx	lr
 632              	.L48:
 633              		.align	2
 634              	.L47:
 635 0014 686A0040 		.word	1073769064
 636              		.cfi_endproc
 637              	.LFE13:
 638              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 639              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 640              		.align	2
 641              		.global	PWM_1_ReadPeriod
 642              		.thumb
 643              		.thumb_func
 644              		.type	PWM_1_ReadPeriod, %function
 645              	PWM_1_ReadPeriod:
 646              	.LFB14:
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_1.c **** 
 869:.\Generated_Source\PSoC5/PWM_1.c **** 
 870:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_1.c **** *
 883:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_1.c **** {
 647              		.loc 1 885 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652 0000 80B4     		push	{r7}
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 7, -4
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 28


 655 0002 00AF     		add	r7, sp, #0
 656              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 657              		.loc 1 889 0
 658 0004 034B     		ldr	r3, .L51
 659 0006 1B88     		ldrh	r3, [r3]	@ movhi
 660 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_1.c **** }
 661              		.loc 1 891 0
 662 000a 1846     		mov	r0, r3
 663 000c BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 000e 5DF8047B 		ldr	r7, [sp], #4
 667              		.cfi_restore 7
 668              		.cfi_def_cfa_offset 0
 669 0012 7047     		bx	lr
 670              	.L52:
 671              		.align	2
 672              	.L51:
 673 0014 886A0040 		.word	1073769096
 674              		.cfi_endproc
 675              	.LFE14:
 676              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 677              		.text
 678              	.Letext0:
 679              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 680              		.section	.debug_info,"",%progbits
 681              	.Ldebug_info0:
 682 0000 7C020000 		.4byte	0x27c
 683 0004 0400     		.2byte	0x4
 684 0006 00000000 		.4byte	.Ldebug_abbrev0
 685 000a 04       		.byte	0x4
 686 000b 01       		.uleb128 0x1
 687 000c 01010000 		.4byte	.LASF37
 688 0010 01       		.byte	0x1
 689 0011 66000000 		.4byte	.LASF38
 690 0015 60020000 		.4byte	.LASF39
 691 0019 00000000 		.4byte	.Ldebug_ranges0+0
 692 001d 00000000 		.4byte	0
 693 0021 00000000 		.4byte	.Ldebug_line0
 694 0025 02       		.uleb128 0x2
 695 0026 01       		.byte	0x1
 696 0027 06       		.byte	0x6
 697 0028 DA020000 		.4byte	.LASF0
 698 002c 02       		.uleb128 0x2
 699 002d 01       		.byte	0x1
 700 002e 08       		.byte	0x8
 701 002f BD000000 		.4byte	.LASF1
 702 0033 02       		.uleb128 0x2
 703 0034 02       		.byte	0x2
 704 0035 05       		.byte	0x5
 705 0036 A4010000 		.4byte	.LASF2
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 29


 706 003a 02       		.uleb128 0x2
 707 003b 02       		.byte	0x2
 708 003c 07       		.byte	0x7
 709 003d 53000000 		.4byte	.LASF3
 710 0041 02       		.uleb128 0x2
 711 0042 04       		.byte	0x4
 712 0043 05       		.byte	0x5
 713 0044 CC020000 		.4byte	.LASF4
 714 0048 02       		.uleb128 0x2
 715 0049 04       		.byte	0x4
 716 004a 07       		.byte	0x7
 717 004b E1000000 		.4byte	.LASF5
 718 004f 02       		.uleb128 0x2
 719 0050 08       		.byte	0x8
 720 0051 05       		.byte	0x5
 721 0052 0B020000 		.4byte	.LASF6
 722 0056 02       		.uleb128 0x2
 723 0057 08       		.byte	0x8
 724 0058 07       		.byte	0x7
 725 0059 DF010000 		.4byte	.LASF7
 726 005d 03       		.uleb128 0x3
 727 005e 04       		.byte	0x4
 728 005f 05       		.byte	0x5
 729 0060 696E7400 		.ascii	"int\000"
 730 0064 02       		.uleb128 0x2
 731 0065 04       		.byte	0x4
 732 0066 07       		.byte	0x7
 733 0067 D2010000 		.4byte	.LASF8
 734 006b 04       		.uleb128 0x4
 735 006c F3000000 		.4byte	.LASF9
 736 0070 02       		.byte	0x2
 737 0071 9201     		.2byte	0x192
 738 0073 2C000000 		.4byte	0x2c
 739 0077 04       		.uleb128 0x4
 740 0078 C0010000 		.4byte	.LASF10
 741 007c 02       		.byte	0x2
 742 007d 9301     		.2byte	0x193
 743 007f 3A000000 		.4byte	0x3a
 744 0083 02       		.uleb128 0x2
 745 0084 04       		.byte	0x4
 746 0085 04       		.byte	0x4
 747 0086 AF000000 		.4byte	.LASF11
 748 008a 02       		.uleb128 0x2
 749 008b 08       		.byte	0x8
 750 008c 04       		.byte	0x4
 751 008d 8F010000 		.4byte	.LASF12
 752 0091 02       		.uleb128 0x2
 753 0092 01       		.byte	0x1
 754 0093 08       		.byte	0x8
 755 0094 D5020000 		.4byte	.LASF13
 756 0098 04       		.uleb128 0x4
 757 0099 CB000000 		.4byte	.LASF14
 758 009d 02       		.byte	0x2
 759 009e 3C02     		.2byte	0x23c
 760 00a0 A4000000 		.4byte	0xa4
 761 00a4 05       		.uleb128 0x5
 762 00a5 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 30


 763 00a9 04       		.uleb128 0x4
 764 00aa 00000000 		.4byte	.LASF15
 765 00ae 02       		.byte	0x2
 766 00af 3D02     		.2byte	0x23d
 767 00b1 B5000000 		.4byte	0xb5
 768 00b5 05       		.uleb128 0x5
 769 00b6 77000000 		.4byte	0x77
 770 00ba 02       		.uleb128 0x2
 771 00bb 04       		.byte	0x4
 772 00bc 07       		.byte	0x7
 773 00bd 02020000 		.4byte	.LASF16
 774 00c1 06       		.uleb128 0x6
 775 00c2 EE020000 		.4byte	.LASF17
 776 00c6 01       		.byte	0x1
 777 00c7 37       		.byte	0x37
 778 00c8 00000000 		.4byte	.LFB0
 779 00cc 20000000 		.4byte	.LFE0-.LFB0
 780 00d0 01       		.uleb128 0x1
 781 00d1 9C       		.byte	0x9c
 782 00d2 07       		.uleb128 0x7
 783 00d3 C7010000 		.4byte	.LASF20
 784 00d7 01       		.byte	0x1
 785 00d8 54       		.byte	0x54
 786 00d9 00000000 		.4byte	.LFB1
 787 00dd 6C000000 		.4byte	.LFE1-.LFB1
 788 00e1 01       		.uleb128 0x1
 789 00e2 9C       		.byte	0x9c
 790 00e3 F6000000 		.4byte	0xf6
 791 00e7 08       		.uleb128 0x8
 792 00e8 FD010000 		.4byte	.LASF28
 793 00ec 01       		.byte	0x1
 794 00ed 57       		.byte	0x57
 795 00ee 6B000000 		.4byte	0x6b
 796 00f2 02       		.uleb128 0x2
 797 00f3 91       		.byte	0x91
 798 00f4 77       		.sleb128 -9
 799 00f5 00       		.byte	0
 800 00f6 09       		.uleb128 0x9
 801 00f7 06000000 		.4byte	.LASF18
 802 00fb 01       		.byte	0x1
 803 00fc C7       		.byte	0xc7
 804 00fd 00000000 		.4byte	.LFB2
 805 0101 20000000 		.4byte	.LFE2-.LFB2
 806 0105 01       		.uleb128 0x1
 807 0106 9C       		.byte	0x9c
 808 0107 09       		.uleb128 0x9
 809 0108 C1020000 		.4byte	.LASF19
 810 010c 01       		.byte	0x1
 811 010d E9       		.byte	0xe9
 812 010e 00000000 		.4byte	.LFB3
 813 0112 20000000 		.4byte	.LFE3-.LFB3
 814 0116 01       		.uleb128 0x1
 815 0117 9C       		.byte	0x9c
 816 0118 0A       		.uleb128 0xa
 817 0119 13000000 		.4byte	.LASF21
 818 011d 01       		.byte	0x1
 819 011e 9301     		.2byte	0x193
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 31


 820 0120 00000000 		.4byte	.LFB4
 821 0124 20000000 		.4byte	.LFE4-.LFB4
 822 0128 01       		.uleb128 0x1
 823 0129 9C       		.byte	0x9c
 824 012a 3E010000 		.4byte	0x13e
 825 012e 0B       		.uleb128 0xb
 826 012f B5000000 		.4byte	.LASF23
 827 0133 01       		.byte	0x1
 828 0134 9301     		.2byte	0x193
 829 0136 77000000 		.4byte	0x77
 830 013a 02       		.uleb128 0x2
 831 013b 91       		.byte	0x91
 832 013c 76       		.sleb128 -10
 833 013d 00       		.byte	0
 834 013e 0C       		.uleb128 0xc
 835 013f AF020000 		.4byte	.LASF32
 836 0143 01       		.byte	0x1
 837 0144 A901     		.2byte	0x1a9
 838 0146 77000000 		.4byte	0x77
 839 014a 00000000 		.4byte	.LFB5
 840 014e 20000000 		.4byte	.LFE5-.LFB5
 841 0152 01       		.uleb128 0x1
 842 0153 9C       		.byte	0x9c
 843 0154 0A       		.uleb128 0xa
 844 0155 4E020000 		.4byte	.LASF22
 845 0159 01       		.byte	0x1
 846 015a E201     		.2byte	0x1e2
 847 015c 00000000 		.4byte	.LFB6
 848 0160 20000000 		.4byte	.LFE6-.LFB6
 849 0164 01       		.uleb128 0x1
 850 0165 9C       		.byte	0x9c
 851 0166 7A010000 		.4byte	0x17a
 852 016a 0B       		.uleb128 0xb
 853 016b 26000000 		.4byte	.LASF24
 854 016f 01       		.byte	0x1
 855 0170 E201     		.2byte	0x1e2
 856 0172 77000000 		.4byte	0x77
 857 0176 02       		.uleb128 0x2
 858 0177 91       		.byte	0x91
 859 0178 76       		.sleb128 -10
 860 0179 00       		.byte	0
 861 017a 0A       		.uleb128 0xa
 862 017b 87000000 		.4byte	.LASF25
 863 017f 01       		.byte	0x1
 864 0180 2B02     		.2byte	0x22b
 865 0182 00000000 		.4byte	.LFB7
 866 0186 20000000 		.4byte	.LFE7-.LFB7
 867 018a 01       		.uleb128 0x1
 868 018b 9C       		.byte	0x9c
 869 018c A0010000 		.4byte	0x1a0
 870 0190 0B       		.uleb128 0xb
 871 0191 E6020000 		.4byte	.LASF26
 872 0195 01       		.byte	0x1
 873 0196 2B02     		.2byte	0x22b
 874 0198 77000000 		.4byte	0x77
 875 019c 02       		.uleb128 0x2
 876 019d 91       		.byte	0x91
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 32


 877 019e 76       		.sleb128 -10
 878 019f 00       		.byte	0
 879 01a0 0A       		.uleb128 0xa
 880 01a1 9B000000 		.4byte	.LASF27
 881 01a5 01       		.byte	0x1
 882 01a6 4802     		.2byte	0x248
 883 01a8 00000000 		.4byte	.LFB8
 884 01ac 20000000 		.4byte	.LFE8-.LFB8
 885 01b0 01       		.uleb128 0x1
 886 01b1 9C       		.byte	0x9c
 887 01b2 C6010000 		.4byte	0x1c6
 888 01b6 0B       		.uleb128 0xb
 889 01b7 E6020000 		.4byte	.LASF26
 890 01bb 01       		.byte	0x1
 891 01bc 4802     		.2byte	0x248
 892 01be 77000000 		.4byte	0x77
 893 01c2 02       		.uleb128 0x2
 894 01c3 91       		.byte	0x91
 895 01c4 76       		.sleb128 -10
 896 01c5 00       		.byte	0
 897 01c6 0D       		.uleb128 0xd
 898 01c7 19020000 		.4byte	.LASF40
 899 01cb 01       		.byte	0x1
 900 01cc E102     		.2byte	0x2e1
 901 01ce 6B000000 		.4byte	0x6b
 902 01d2 00000000 		.4byte	.LFB9
 903 01d6 20000000 		.4byte	.LFE9-.LFB9
 904 01da 01       		.uleb128 0x1
 905 01db 9C       		.byte	0x9c
 906 01dc F0010000 		.4byte	0x1f0
 907 01e0 0E       		.uleb128 0xe
 908 01e1 F6010000 		.4byte	.LASF29
 909 01e5 01       		.byte	0x1
 910 01e6 E302     		.2byte	0x2e3
 911 01e8 6B000000 		.4byte	0x6b
 912 01ec 02       		.uleb128 0x2
 913 01ed 91       		.byte	0x91
 914 01ee 77       		.sleb128 -9
 915 01ef 00       		.byte	0
 916 01f0 0A       		.uleb128 0xa
 917 01f1 33020000 		.4byte	.LASF30
 918 01f5 01       		.byte	0x1
 919 01f6 FD02     		.2byte	0x2fd
 920 01f8 00000000 		.4byte	.LFB10
 921 01fc 20000000 		.4byte	.LFE10-.LFB10
 922 0200 01       		.uleb128 0x1
 923 0201 9C       		.byte	0x9c
 924 0202 16020000 		.4byte	0x216
 925 0206 0B       		.uleb128 0xb
 926 0207 F9000000 		.4byte	.LASF31
 927 020b 01       		.byte	0x1
 928 020c FD02     		.2byte	0x2fd
 929 020e 6B000000 		.4byte	0x6b
 930 0212 02       		.uleb128 0x2
 931 0213 91       		.byte	0x91
 932 0214 77       		.sleb128 -9
 933 0215 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 33


 934 0216 0C       		.uleb128 0xc
 935 0217 AE010000 		.4byte	.LASF33
 936 021b 01       		.byte	0x1
 937 021c 1603     		.2byte	0x316
 938 021e 77000000 		.4byte	0x77
 939 0222 00000000 		.4byte	.LFB11
 940 0226 18000000 		.4byte	.LFE11-.LFB11
 941 022a 01       		.uleb128 0x1
 942 022b 9C       		.byte	0x9c
 943 022c 0C       		.uleb128 0xc
 944 022d 2D000000 		.4byte	.LASF34
 945 0231 01       		.byte	0x1
 946 0232 4A03     		.2byte	0x34a
 947 0234 77000000 		.4byte	0x77
 948 0238 00000000 		.4byte	.LFB12
 949 023c 18000000 		.4byte	.LFE12-.LFB12
 950 0240 01       		.uleb128 0x1
 951 0241 9C       		.byte	0x9c
 952 0242 0C       		.uleb128 0xc
 953 0243 40000000 		.4byte	.LASF35
 954 0247 01       		.byte	0x1
 955 0248 5E03     		.2byte	0x35e
 956 024a 77000000 		.4byte	0x77
 957 024e 00000000 		.4byte	.LFB13
 958 0252 18000000 		.4byte	.LFE13-.LFB13
 959 0256 01       		.uleb128 0x1
 960 0257 9C       		.byte	0x9c
 961 0258 0C       		.uleb128 0xc
 962 0259 D0000000 		.4byte	.LASF36
 963 025d 01       		.byte	0x1
 964 025e 7403     		.2byte	0x374
 965 0260 77000000 		.4byte	0x77
 966 0264 00000000 		.4byte	.LFB14
 967 0268 18000000 		.4byte	.LFE14-.LFB14
 968 026c 01       		.uleb128 0x1
 969 026d 9C       		.byte	0x9c
 970 026e 0F       		.uleb128 0xf
 971 026f 96010000 		.4byte	.LASF41
 972 0273 01       		.byte	0x1
 973 0274 20       		.byte	0x20
 974 0275 6B000000 		.4byte	0x6b
 975 0279 05       		.uleb128 0x5
 976 027a 03       		.byte	0x3
 977 027b 00000000 		.4byte	PWM_1_initVar
 978 027f 00       		.byte	0
 979              		.section	.debug_abbrev,"",%progbits
 980              	.Ldebug_abbrev0:
 981 0000 01       		.uleb128 0x1
 982 0001 11       		.uleb128 0x11
 983 0002 01       		.byte	0x1
 984 0003 25       		.uleb128 0x25
 985 0004 0E       		.uleb128 0xe
 986 0005 13       		.uleb128 0x13
 987 0006 0B       		.uleb128 0xb
 988 0007 03       		.uleb128 0x3
 989 0008 0E       		.uleb128 0xe
 990 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 34


 991 000a 0E       		.uleb128 0xe
 992 000b 55       		.uleb128 0x55
 993 000c 17       		.uleb128 0x17
 994 000d 11       		.uleb128 0x11
 995 000e 01       		.uleb128 0x1
 996 000f 10       		.uleb128 0x10
 997 0010 17       		.uleb128 0x17
 998 0011 00       		.byte	0
 999 0012 00       		.byte	0
 1000 0013 02       		.uleb128 0x2
 1001 0014 24       		.uleb128 0x24
 1002 0015 00       		.byte	0
 1003 0016 0B       		.uleb128 0xb
 1004 0017 0B       		.uleb128 0xb
 1005 0018 3E       		.uleb128 0x3e
 1006 0019 0B       		.uleb128 0xb
 1007 001a 03       		.uleb128 0x3
 1008 001b 0E       		.uleb128 0xe
 1009 001c 00       		.byte	0
 1010 001d 00       		.byte	0
 1011 001e 03       		.uleb128 0x3
 1012 001f 24       		.uleb128 0x24
 1013 0020 00       		.byte	0
 1014 0021 0B       		.uleb128 0xb
 1015 0022 0B       		.uleb128 0xb
 1016 0023 3E       		.uleb128 0x3e
 1017 0024 0B       		.uleb128 0xb
 1018 0025 03       		.uleb128 0x3
 1019 0026 08       		.uleb128 0x8
 1020 0027 00       		.byte	0
 1021 0028 00       		.byte	0
 1022 0029 04       		.uleb128 0x4
 1023 002a 16       		.uleb128 0x16
 1024 002b 00       		.byte	0
 1025 002c 03       		.uleb128 0x3
 1026 002d 0E       		.uleb128 0xe
 1027 002e 3A       		.uleb128 0x3a
 1028 002f 0B       		.uleb128 0xb
 1029 0030 3B       		.uleb128 0x3b
 1030 0031 05       		.uleb128 0x5
 1031 0032 49       		.uleb128 0x49
 1032 0033 13       		.uleb128 0x13
 1033 0034 00       		.byte	0
 1034 0035 00       		.byte	0
 1035 0036 05       		.uleb128 0x5
 1036 0037 35       		.uleb128 0x35
 1037 0038 00       		.byte	0
 1038 0039 49       		.uleb128 0x49
 1039 003a 13       		.uleb128 0x13
 1040 003b 00       		.byte	0
 1041 003c 00       		.byte	0
 1042 003d 06       		.uleb128 0x6
 1043 003e 2E       		.uleb128 0x2e
 1044 003f 00       		.byte	0
 1045 0040 3F       		.uleb128 0x3f
 1046 0041 19       		.uleb128 0x19
 1047 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 35


 1048 0043 0E       		.uleb128 0xe
 1049 0044 3A       		.uleb128 0x3a
 1050 0045 0B       		.uleb128 0xb
 1051 0046 3B       		.uleb128 0x3b
 1052 0047 0B       		.uleb128 0xb
 1053 0048 27       		.uleb128 0x27
 1054 0049 19       		.uleb128 0x19
 1055 004a 11       		.uleb128 0x11
 1056 004b 01       		.uleb128 0x1
 1057 004c 12       		.uleb128 0x12
 1058 004d 06       		.uleb128 0x6
 1059 004e 40       		.uleb128 0x40
 1060 004f 18       		.uleb128 0x18
 1061 0050 9642     		.uleb128 0x2116
 1062 0052 19       		.uleb128 0x19
 1063 0053 00       		.byte	0
 1064 0054 00       		.byte	0
 1065 0055 07       		.uleb128 0x7
 1066 0056 2E       		.uleb128 0x2e
 1067 0057 01       		.byte	0x1
 1068 0058 3F       		.uleb128 0x3f
 1069 0059 19       		.uleb128 0x19
 1070 005a 03       		.uleb128 0x3
 1071 005b 0E       		.uleb128 0xe
 1072 005c 3A       		.uleb128 0x3a
 1073 005d 0B       		.uleb128 0xb
 1074 005e 3B       		.uleb128 0x3b
 1075 005f 0B       		.uleb128 0xb
 1076 0060 27       		.uleb128 0x27
 1077 0061 19       		.uleb128 0x19
 1078 0062 11       		.uleb128 0x11
 1079 0063 01       		.uleb128 0x1
 1080 0064 12       		.uleb128 0x12
 1081 0065 06       		.uleb128 0x6
 1082 0066 40       		.uleb128 0x40
 1083 0067 18       		.uleb128 0x18
 1084 0068 9642     		.uleb128 0x2116
 1085 006a 19       		.uleb128 0x19
 1086 006b 01       		.uleb128 0x1
 1087 006c 13       		.uleb128 0x13
 1088 006d 00       		.byte	0
 1089 006e 00       		.byte	0
 1090 006f 08       		.uleb128 0x8
 1091 0070 34       		.uleb128 0x34
 1092 0071 00       		.byte	0
 1093 0072 03       		.uleb128 0x3
 1094 0073 0E       		.uleb128 0xe
 1095 0074 3A       		.uleb128 0x3a
 1096 0075 0B       		.uleb128 0xb
 1097 0076 3B       		.uleb128 0x3b
 1098 0077 0B       		.uleb128 0xb
 1099 0078 49       		.uleb128 0x49
 1100 0079 13       		.uleb128 0x13
 1101 007a 02       		.uleb128 0x2
 1102 007b 18       		.uleb128 0x18
 1103 007c 00       		.byte	0
 1104 007d 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 36


 1105 007e 09       		.uleb128 0x9
 1106 007f 2E       		.uleb128 0x2e
 1107 0080 00       		.byte	0
 1108 0081 3F       		.uleb128 0x3f
 1109 0082 19       		.uleb128 0x19
 1110 0083 03       		.uleb128 0x3
 1111 0084 0E       		.uleb128 0xe
 1112 0085 3A       		.uleb128 0x3a
 1113 0086 0B       		.uleb128 0xb
 1114 0087 3B       		.uleb128 0x3b
 1115 0088 0B       		.uleb128 0xb
 1116 0089 27       		.uleb128 0x27
 1117 008a 19       		.uleb128 0x19
 1118 008b 11       		.uleb128 0x11
 1119 008c 01       		.uleb128 0x1
 1120 008d 12       		.uleb128 0x12
 1121 008e 06       		.uleb128 0x6
 1122 008f 40       		.uleb128 0x40
 1123 0090 18       		.uleb128 0x18
 1124 0091 9742     		.uleb128 0x2117
 1125 0093 19       		.uleb128 0x19
 1126 0094 00       		.byte	0
 1127 0095 00       		.byte	0
 1128 0096 0A       		.uleb128 0xa
 1129 0097 2E       		.uleb128 0x2e
 1130 0098 01       		.byte	0x1
 1131 0099 3F       		.uleb128 0x3f
 1132 009a 19       		.uleb128 0x19
 1133 009b 03       		.uleb128 0x3
 1134 009c 0E       		.uleb128 0xe
 1135 009d 3A       		.uleb128 0x3a
 1136 009e 0B       		.uleb128 0xb
 1137 009f 3B       		.uleb128 0x3b
 1138 00a0 05       		.uleb128 0x5
 1139 00a1 27       		.uleb128 0x27
 1140 00a2 19       		.uleb128 0x19
 1141 00a3 11       		.uleb128 0x11
 1142 00a4 01       		.uleb128 0x1
 1143 00a5 12       		.uleb128 0x12
 1144 00a6 06       		.uleb128 0x6
 1145 00a7 40       		.uleb128 0x40
 1146 00a8 18       		.uleb128 0x18
 1147 00a9 9742     		.uleb128 0x2117
 1148 00ab 19       		.uleb128 0x19
 1149 00ac 01       		.uleb128 0x1
 1150 00ad 13       		.uleb128 0x13
 1151 00ae 00       		.byte	0
 1152 00af 00       		.byte	0
 1153 00b0 0B       		.uleb128 0xb
 1154 00b1 05       		.uleb128 0x5
 1155 00b2 00       		.byte	0
 1156 00b3 03       		.uleb128 0x3
 1157 00b4 0E       		.uleb128 0xe
 1158 00b5 3A       		.uleb128 0x3a
 1159 00b6 0B       		.uleb128 0xb
 1160 00b7 3B       		.uleb128 0x3b
 1161 00b8 05       		.uleb128 0x5
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 37


 1162 00b9 49       		.uleb128 0x49
 1163 00ba 13       		.uleb128 0x13
 1164 00bb 02       		.uleb128 0x2
 1165 00bc 18       		.uleb128 0x18
 1166 00bd 00       		.byte	0
 1167 00be 00       		.byte	0
 1168 00bf 0C       		.uleb128 0xc
 1169 00c0 2E       		.uleb128 0x2e
 1170 00c1 00       		.byte	0
 1171 00c2 3F       		.uleb128 0x3f
 1172 00c3 19       		.uleb128 0x19
 1173 00c4 03       		.uleb128 0x3
 1174 00c5 0E       		.uleb128 0xe
 1175 00c6 3A       		.uleb128 0x3a
 1176 00c7 0B       		.uleb128 0xb
 1177 00c8 3B       		.uleb128 0x3b
 1178 00c9 05       		.uleb128 0x5
 1179 00ca 27       		.uleb128 0x27
 1180 00cb 19       		.uleb128 0x19
 1181 00cc 49       		.uleb128 0x49
 1182 00cd 13       		.uleb128 0x13
 1183 00ce 11       		.uleb128 0x11
 1184 00cf 01       		.uleb128 0x1
 1185 00d0 12       		.uleb128 0x12
 1186 00d1 06       		.uleb128 0x6
 1187 00d2 40       		.uleb128 0x40
 1188 00d3 18       		.uleb128 0x18
 1189 00d4 9742     		.uleb128 0x2117
 1190 00d6 19       		.uleb128 0x19
 1191 00d7 00       		.byte	0
 1192 00d8 00       		.byte	0
 1193 00d9 0D       		.uleb128 0xd
 1194 00da 2E       		.uleb128 0x2e
 1195 00db 01       		.byte	0x1
 1196 00dc 3F       		.uleb128 0x3f
 1197 00dd 19       		.uleb128 0x19
 1198 00de 03       		.uleb128 0x3
 1199 00df 0E       		.uleb128 0xe
 1200 00e0 3A       		.uleb128 0x3a
 1201 00e1 0B       		.uleb128 0xb
 1202 00e2 3B       		.uleb128 0x3b
 1203 00e3 05       		.uleb128 0x5
 1204 00e4 27       		.uleb128 0x27
 1205 00e5 19       		.uleb128 0x19
 1206 00e6 49       		.uleb128 0x49
 1207 00e7 13       		.uleb128 0x13
 1208 00e8 11       		.uleb128 0x11
 1209 00e9 01       		.uleb128 0x1
 1210 00ea 12       		.uleb128 0x12
 1211 00eb 06       		.uleb128 0x6
 1212 00ec 40       		.uleb128 0x40
 1213 00ed 18       		.uleb128 0x18
 1214 00ee 9742     		.uleb128 0x2117
 1215 00f0 19       		.uleb128 0x19
 1216 00f1 01       		.uleb128 0x1
 1217 00f2 13       		.uleb128 0x13
 1218 00f3 00       		.byte	0
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 38


 1219 00f4 00       		.byte	0
 1220 00f5 0E       		.uleb128 0xe
 1221 00f6 34       		.uleb128 0x34
 1222 00f7 00       		.byte	0
 1223 00f8 03       		.uleb128 0x3
 1224 00f9 0E       		.uleb128 0xe
 1225 00fa 3A       		.uleb128 0x3a
 1226 00fb 0B       		.uleb128 0xb
 1227 00fc 3B       		.uleb128 0x3b
 1228 00fd 05       		.uleb128 0x5
 1229 00fe 49       		.uleb128 0x49
 1230 00ff 13       		.uleb128 0x13
 1231 0100 02       		.uleb128 0x2
 1232 0101 18       		.uleb128 0x18
 1233 0102 00       		.byte	0
 1234 0103 00       		.byte	0
 1235 0104 0F       		.uleb128 0xf
 1236 0105 34       		.uleb128 0x34
 1237 0106 00       		.byte	0
 1238 0107 03       		.uleb128 0x3
 1239 0108 0E       		.uleb128 0xe
 1240 0109 3A       		.uleb128 0x3a
 1241 010a 0B       		.uleb128 0xb
 1242 010b 3B       		.uleb128 0x3b
 1243 010c 0B       		.uleb128 0xb
 1244 010d 49       		.uleb128 0x49
 1245 010e 13       		.uleb128 0x13
 1246 010f 3F       		.uleb128 0x3f
 1247 0110 19       		.uleb128 0x19
 1248 0111 02       		.uleb128 0x2
 1249 0112 18       		.uleb128 0x18
 1250 0113 00       		.byte	0
 1251 0114 00       		.byte	0
 1252 0115 00       		.byte	0
 1253              		.section	.debug_aranges,"",%progbits
 1254 0000 8C000000 		.4byte	0x8c
 1255 0004 0200     		.2byte	0x2
 1256 0006 00000000 		.4byte	.Ldebug_info0
 1257 000a 04       		.byte	0x4
 1258 000b 00       		.byte	0
 1259 000c 0000     		.2byte	0
 1260 000e 0000     		.2byte	0
 1261 0010 00000000 		.4byte	.LFB0
 1262 0014 20000000 		.4byte	.LFE0-.LFB0
 1263 0018 00000000 		.4byte	.LFB1
 1264 001c 6C000000 		.4byte	.LFE1-.LFB1
 1265 0020 00000000 		.4byte	.LFB2
 1266 0024 20000000 		.4byte	.LFE2-.LFB2
 1267 0028 00000000 		.4byte	.LFB3
 1268 002c 20000000 		.4byte	.LFE3-.LFB3
 1269 0030 00000000 		.4byte	.LFB4
 1270 0034 20000000 		.4byte	.LFE4-.LFB4
 1271 0038 00000000 		.4byte	.LFB5
 1272 003c 20000000 		.4byte	.LFE5-.LFB5
 1273 0040 00000000 		.4byte	.LFB6
 1274 0044 20000000 		.4byte	.LFE6-.LFB6
 1275 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 39


 1276 004c 20000000 		.4byte	.LFE7-.LFB7
 1277 0050 00000000 		.4byte	.LFB8
 1278 0054 20000000 		.4byte	.LFE8-.LFB8
 1279 0058 00000000 		.4byte	.LFB9
 1280 005c 20000000 		.4byte	.LFE9-.LFB9
 1281 0060 00000000 		.4byte	.LFB10
 1282 0064 20000000 		.4byte	.LFE10-.LFB10
 1283 0068 00000000 		.4byte	.LFB11
 1284 006c 18000000 		.4byte	.LFE11-.LFB11
 1285 0070 00000000 		.4byte	.LFB12
 1286 0074 18000000 		.4byte	.LFE12-.LFB12
 1287 0078 00000000 		.4byte	.LFB13
 1288 007c 18000000 		.4byte	.LFE13-.LFB13
 1289 0080 00000000 		.4byte	.LFB14
 1290 0084 18000000 		.4byte	.LFE14-.LFB14
 1291 0088 00000000 		.4byte	0
 1292 008c 00000000 		.4byte	0
 1293              		.section	.debug_ranges,"",%progbits
 1294              	.Ldebug_ranges0:
 1295 0000 00000000 		.4byte	.LFB0
 1296 0004 20000000 		.4byte	.LFE0
 1297 0008 00000000 		.4byte	.LFB1
 1298 000c 6C000000 		.4byte	.LFE1
 1299 0010 00000000 		.4byte	.LFB2
 1300 0014 20000000 		.4byte	.LFE2
 1301 0018 00000000 		.4byte	.LFB3
 1302 001c 20000000 		.4byte	.LFE3
 1303 0020 00000000 		.4byte	.LFB4
 1304 0024 20000000 		.4byte	.LFE4
 1305 0028 00000000 		.4byte	.LFB5
 1306 002c 20000000 		.4byte	.LFE5
 1307 0030 00000000 		.4byte	.LFB6
 1308 0034 20000000 		.4byte	.LFE6
 1309 0038 00000000 		.4byte	.LFB7
 1310 003c 20000000 		.4byte	.LFE7
 1311 0040 00000000 		.4byte	.LFB8
 1312 0044 20000000 		.4byte	.LFE8
 1313 0048 00000000 		.4byte	.LFB9
 1314 004c 20000000 		.4byte	.LFE9
 1315 0050 00000000 		.4byte	.LFB10
 1316 0054 20000000 		.4byte	.LFE10
 1317 0058 00000000 		.4byte	.LFB11
 1318 005c 18000000 		.4byte	.LFE11
 1319 0060 00000000 		.4byte	.LFB12
 1320 0064 18000000 		.4byte	.LFE12
 1321 0068 00000000 		.4byte	.LFB13
 1322 006c 18000000 		.4byte	.LFE13
 1323 0070 00000000 		.4byte	.LFB14
 1324 0074 18000000 		.4byte	.LFE14
 1325 0078 00000000 		.4byte	0
 1326 007c 00000000 		.4byte	0
 1327              		.section	.debug_line,"",%progbits
 1328              	.Ldebug_line0:
 1329 0000 6B010000 		.section	.debug_str,"MS",%progbits,1
 1329      02004400 
 1329      00000201 
 1329      FB0E0D00 
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 40


 1329      01010101 
 1330              	.LASF15:
 1331 0000 72656731 		.ascii	"reg16\000"
 1331      3600
 1332              	.LASF18:
 1333 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1333      315F456E 
 1333      61626C65 
 1333      00
 1334              	.LASF21:
 1335 0013 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1335      315F5772 
 1335      69746543 
 1335      6F756E74 
 1335      657200
 1336              	.LASF24:
 1337 0026 70657269 		.ascii	"period\000"
 1337      6F6400
 1338              	.LASF34:
 1339 002d 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1339      315F5265 
 1339      6164436F 
 1339      6D706172 
 1339      653100
 1340              	.LASF35:
 1341 0040 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1341      315F5265 
 1341      6164436F 
 1341      6D706172 
 1341      653200
 1342              	.LASF3:
 1343 0053 73686F72 		.ascii	"short unsigned int\000"
 1343      7420756E 
 1343      7369676E 
 1343      65642069 
 1343      6E7400
 1344              	.LASF38:
 1345 0066 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1345      6E657261 
 1345      7465645F 
 1345      536F7572 
 1345      63655C50 
 1346              	.LASF25:
 1347 0087 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1347      315F5772 
 1347      69746543 
 1347      6F6D7061 
 1347      72653100 
 1348              	.LASF27:
 1349 009b 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1349      315F5772 
 1349      69746543 
 1349      6F6D7061 
 1349      72653200 
 1350              	.LASF11:
 1351 00af 666C6F61 		.ascii	"float\000"
 1351      7400
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 41


 1352              	.LASF23:
 1353 00b5 636F756E 		.ascii	"counter\000"
 1353      74657200 
 1354              	.LASF1:
 1355 00bd 756E7369 		.ascii	"unsigned char\000"
 1355      676E6564 
 1355      20636861 
 1355      7200
 1356              	.LASF14:
 1357 00cb 72656738 		.ascii	"reg8\000"
 1357      00
 1358              	.LASF36:
 1359 00d0 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1359      315F5265 
 1359      61645065 
 1359      72696F64 
 1359      00
 1360              	.LASF5:
 1361 00e1 6C6F6E67 		.ascii	"long unsigned int\000"
 1361      20756E73 
 1361      69676E65 
 1361      6420696E 
 1361      7400
 1362              	.LASF9:
 1363 00f3 75696E74 		.ascii	"uint8\000"
 1363      3800
 1364              	.LASF31:
 1365 00f9 636F6E74 		.ascii	"control\000"
 1365      726F6C00 
 1366              	.LASF37:
 1367 0101 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1367      4320342E 
 1367      392E3320 
 1367      32303135 
 1367      30333033 
 1368 0134 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1368      20726576 
 1368      6973696F 
 1368      6E203232 
 1368      31323230 
 1369 0167 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1369      66756E63 
 1369      74696F6E 
 1369      2D736563 
 1369      74696F6E 
 1370              	.LASF12:
 1371 018f 646F7562 		.ascii	"double\000"
 1371      6C6500
 1372              	.LASF41:
 1373 0196 50574D5F 		.ascii	"PWM_1_initVar\000"
 1373      315F696E 
 1373      69745661 
 1373      7200
 1374              	.LASF2:
 1375 01a4 73686F72 		.ascii	"short int\000"
 1375      7420696E 
 1375      7400
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 42


 1376              	.LASF33:
 1377 01ae 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1377      315F5265 
 1377      61644361 
 1377      70747572 
 1377      6500
 1378              	.LASF10:
 1379 01c0 75696E74 		.ascii	"uint16\000"
 1379      313600
 1380              	.LASF20:
 1381 01c7 50574D5F 		.ascii	"PWM_1_Init\000"
 1381      315F496E 
 1381      697400
 1382              	.LASF8:
 1383 01d2 756E7369 		.ascii	"unsigned int\000"
 1383      676E6564 
 1383      20696E74 
 1383      00
 1384              	.LASF7:
 1385 01df 6C6F6E67 		.ascii	"long long unsigned int\000"
 1385      206C6F6E 
 1385      6720756E 
 1385      7369676E 
 1385      65642069 
 1386              	.LASF29:
 1387 01f6 72657375 		.ascii	"result\000"
 1387      6C7400
 1388              	.LASF28:
 1389 01fd 6374726C 		.ascii	"ctrl\000"
 1389      00
 1390              	.LASF16:
 1391 0202 73697A65 		.ascii	"sizetype\000"
 1391      74797065 
 1391      00
 1392              	.LASF6:
 1393 020b 6C6F6E67 		.ascii	"long long int\000"
 1393      206C6F6E 
 1393      6720696E 
 1393      7400
 1394              	.LASF40:
 1395 0219 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1395      315F5265 
 1395      6164436F 
 1395      6E74726F 
 1395      6C526567 
 1396              	.LASF30:
 1397 0233 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1397      315F5772 
 1397      69746543 
 1397      6F6E7472 
 1397      6F6C5265 
 1398              	.LASF22:
 1399 024e 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1399      315F5772 
 1399      69746550 
 1399      6572696F 
 1399      6400
ARM GAS  C:\Users\glenn\AppData\Local\Temp\ccTU8u2e.s 			page 43


 1400              	.LASF39:
 1401 0260 433A5C55 		.ascii	"C:\\Users\\glenn\\OneDrive\\PSOC\\psoc-5lp\\5lp-rtu"
 1401      73657273 
 1401      5C676C65 
 1401      6E6E5C4F 
 1401      6E654472 
 1402 028d 5C637572 		.ascii	"\\current_monitor\\USB_UART01.cydsn\000"
 1402      72656E74 
 1402      5F6D6F6E 
 1402      69746F72 
 1402      5C555342 
 1403              	.LASF32:
 1404 02af 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1404      315F5265 
 1404      6164436F 
 1404      756E7465 
 1404      7200
 1405              	.LASF19:
 1406 02c1 50574D5F 		.ascii	"PWM_1_Stop\000"
 1406      315F5374 
 1406      6F7000
 1407              	.LASF4:
 1408 02cc 6C6F6E67 		.ascii	"long int\000"
 1408      20696E74 
 1408      00
 1409              	.LASF13:
 1410 02d5 63686172 		.ascii	"char\000"
 1410      00
 1411              	.LASF0:
 1412 02da 7369676E 		.ascii	"signed char\000"
 1412      65642063 
 1412      68617200 
 1413              	.LASF26:
 1414 02e6 636F6D70 		.ascii	"compare\000"
 1414      61726500 
 1415              	.LASF17:
 1416 02ee 50574D5F 		.ascii	"PWM_1_Start\000"
 1416      315F5374 
 1416      61727400 
 1417              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
