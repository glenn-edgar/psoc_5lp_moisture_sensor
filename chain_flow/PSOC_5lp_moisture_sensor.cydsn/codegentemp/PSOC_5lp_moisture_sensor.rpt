Loading plugins phase: Elapsed time ==> 0s.304ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -d CY8C5888LTI-LP097 -s C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 3s.436ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.110ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 PSOC_5lp_moisture_sensor.v -verilog
======================================================================

======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 PSOC_5lp_moisture_sensor.v -verilog
======================================================================

======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 -verilog PSOC_5lp_moisture_sensor.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Fri Sep 23 19:02:35 2016


======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   vpp
Options  :    -yv2 -q10 PSOC_5lp_moisture_sensor.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Fri Sep 23 19:02:35 2016

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'PSOC_5lp_moisture_sensor.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
PSOC_5lp_moisture_sensor.v (line 1173, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 -verilog PSOC_5lp_moisture_sensor.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Fri Sep 23 19:02:35 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\codegentemp\PSOC_5lp_moisture_sensor.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\codegentemp\PSOC_5lp_moisture_sensor.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  PSOC_5lp_moisture_sensor.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 -verilog PSOC_5lp_moisture_sensor.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Fri Sep 23 19:02:35 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\codegentemp\PSOC_5lp_moisture_sensor.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\codegentemp\PSOC_5lp_moisture_sensor.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\Debouncer_v1_0\Debouncer_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\UART_1:BUART:reset_sr\
	\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_133
	\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART_1:BUART:sRX:MODULE_6:lt\
	\UART_1:BUART:sRX:MODULE_6:eq\
	\UART_1:BUART:sRX:MODULE_6:gt\
	\UART_1:BUART:sRX:MODULE_6:gte\
	\UART_1:BUART:sRX:MODULE_6:lte\
	\IDAC8_1:Net_157\
	\SIGMA_A_D:Net_268\
	\SIGMA_A_D:Net_270\
	\ADC_SAR_Seq_1:SAR:Net_221\
	\ADC_SAR_Seq_1:SAR:Net_381\
	\ADC_SAR_Seq_1:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_1:soc_out\
	\ADC_SAR_Seq_1:Net_3905\
	\ADC_SAR_Seq_1:Net_3867\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq_1:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq_1:MODULE_1:lt\
	\ADC_SAR_Seq_1:MODULE_1:gt\
	\ADC_SAR_Seq_1:MODULE_1:gte\
	\ADC_SAR_Seq_1:MODULE_1:lte\
	\ADC_SAR_Seq_1:MODULE_1:neq\


Deleted 50 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__RS_485_OUTPUT_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__RS_485_TX_ENBABLE_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:tx_hd_send_break\ to zero
Aliasing \UART_1:BUART:HalfDuplexSend\ to zero
Aliasing \UART_1:BUART:FinalParityType_1\ to zero
Aliasing \UART_1:BUART:FinalParityType_0\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_2\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_1\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_0\ to zero
Aliasing \UART_1:BUART:tx_ctrl_mark\ to zero
Aliasing \UART_1:BUART:tx_status_6\ to zero
Aliasing \UART_1:BUART:tx_status_5\ to zero
Aliasing \UART_1:BUART:tx_status_4\ to zero
Aliasing \UART_1:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN4_1\ to \UART_1:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN4_0\ to \UART_1:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN5_1\ to \UART_1:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN5_0\ to \UART_1:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:rx_status_1\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_3\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_2\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_1\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__RS_485_Input_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__switch_pin_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Active_Pin_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing \IDAC8_1:Net_125\ to zero
Aliasing \IDAC8_1:Net_194\ to zero
Aliasing \IDAC8_1:Net_195\ to zero
Aliasing \VDAC8_1:Net_83\ to zero
Aliasing \VDAC8_1:Net_81\ to zero
Aliasing \VDAC8_1:Net_82\ to zero
Aliasing tmpOE__Temp_Sensor_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Log_Pin_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing \SIGMA_A_D:Net_482\ to zero
Aliasing \SIGMA_A_D:Net_252\ to zero
Aliasing \SIGMA_A_D:soc\ to tmpOE__heart_beat_pin_net_0
Aliasing \Status_Reg_1:status_3\ to zero
Aliasing \Status_Reg_1:status_4\ to zero
Aliasing \Status_Reg_1:status_5\ to zero
Aliasing \Status_Reg_1:status_6\ to zero
Aliasing \Status_Reg_1:status_7\ to zero
Aliasing tmpOE__Moisture_sensor_1_pins_net_8 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_7 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_6 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_5 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_4 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_3 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_2 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_1 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_sensor_1_pins_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_8 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_7 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_6 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_5 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_4 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_3 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_2 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_1 to tmpOE__heart_beat_pin_net_0
Aliasing tmpOE__Moisture_Sensor_Pin_2_net_0 to tmpOE__heart_beat_pin_net_0
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\ to tmpOE__heart_beat_pin_net_0
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_1:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_1:bSAR_SEQ:status_1\ to zero
Aliasing Net_6099 to \ADC_SAR_Seq_1:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__heart_beat_pin_net_0
Aliasing \UART_1:BUART:reset_reg\\D\ to zero
Aliasing \UART_1:BUART:rx_break_status\\D\ to zero
Aliasing \Active_Switch_Debounce:DEBOUNCER[0]:d_sync_1\\D\ to Net_8069
Aliasing \Log_Switch_Debounce:DEBOUNCER[0]:d_sync_1\\D\ to Net_5750
Aliasing \Board_Switch_Debug:DEBOUNCER[0]:d_sync_1\\D\ to Net_7675
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_1:MODIN1_5\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_1:MODIN1_4\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_1:MODIN1_3\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_1:MODIN1_2\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_1:MODIN1_1\
Aliasing \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_1:MODIN1_0\
Removing Lhs of wire one[9] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__RS_485_OUTPUT_net_0[15] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__RS_485_TX_ENBABLE_net_0[22] = tmpOE__heart_beat_pin_net_0[4]
Removing Rhs of wire Net_136[29] = \UART_1:BUART:tx_interrupt_out\[49]
Removing Rhs of wire Net_137[33] = \UART_1:BUART:rx_interrupt_out\[50]
Removing Lhs of wire \UART_1:Net_61\[34] = \UART_1:Net_9\[31]
Removing Lhs of wire \UART_1:BUART:tx_hd_send_break\[38] = zero[5]
Removing Lhs of wire \UART_1:BUART:HalfDuplexSend\[39] = zero[5]
Removing Lhs of wire \UART_1:BUART:FinalParityType_1\[40] = zero[5]
Removing Lhs of wire \UART_1:BUART:FinalParityType_0\[41] = zero[5]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_2\[42] = zero[5]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_1\[43] = zero[5]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_0\[44] = zero[5]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark\[45] = zero[5]
Removing Rhs of wire \UART_1:BUART:tx_bitclk_enable_pre\[54] = \UART_1:BUART:tx_bitclk_dp\[90]
Removing Lhs of wire \UART_1:BUART:tx_counter_tc\[100] = \UART_1:BUART:tx_counter_dp\[91]
Removing Lhs of wire \UART_1:BUART:tx_status_6\[101] = zero[5]
Removing Lhs of wire \UART_1:BUART:tx_status_5\[102] = zero[5]
Removing Lhs of wire \UART_1:BUART:tx_status_4\[103] = zero[5]
Removing Lhs of wire \UART_1:BUART:tx_status_1\[105] = \UART_1:BUART:tx_fifo_empty\[68]
Removing Lhs of wire \UART_1:BUART:tx_status_3\[107] = \UART_1:BUART:tx_fifo_notfull\[67]
Removing Lhs of wire \UART_1:BUART:rx_count7_bit8_wire\[166] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[174] = \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[185]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[176] = \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[186]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[177] = \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[202]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[178] = \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[216]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[179] = \UART_1:BUART:sRX:s23Poll:MODIN3_1\[180]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN3_1\[180] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[181] = \UART_1:BUART:sRX:s23Poll:MODIN3_0\[182]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN3_0\[182] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[188] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[189] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[190] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN4_1\[191] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[192] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN4_0\[193] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[194] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[195] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[196] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[197] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[198] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[199] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[204] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_1\[205] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[206] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_0\[207] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[208] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[209] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[210] = \UART_1:BUART:pollcount_1\[172]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[211] = \UART_1:BUART:pollcount_0\[175]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[212] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[213] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_status_1\[220] = zero[5]
Removing Rhs of wire \UART_1:BUART:rx_status_2\[221] = \UART_1:BUART:rx_parity_error_status\[222]
Removing Rhs of wire \UART_1:BUART:rx_status_3\[223] = \UART_1:BUART:rx_stop_bit_error\[224]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_5\[234] = \UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\[283]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_6\[238] = \UART_1:BUART:sRX:MODULE_6:g1:a0:xneq\[305]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_6\[239] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_5\[240] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_4\[241] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_3\[242] = \UART_1:BUART:sRX:MODIN6_6\[243]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_6\[243] = \UART_1:BUART:rx_count_6\[161]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_2\[244] = \UART_1:BUART:sRX:MODIN6_5\[245]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_5\[245] = \UART_1:BUART:rx_count_5\[162]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_1\[246] = \UART_1:BUART:sRX:MODIN6_4\[247]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_4\[247] = \UART_1:BUART:rx_count_4\[163]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_0\[248] = \UART_1:BUART:sRX:MODIN6_3\[249]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_3\[249] = \UART_1:BUART:rx_count_3\[164]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_6\[250] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_5\[251] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_4\[252] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_3\[253] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_2\[254] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_1\[255] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_0\[256] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_6\[257] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_5\[258] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_4\[259] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_3\[260] = \UART_1:BUART:rx_count_6\[161]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_2\[261] = \UART_1:BUART:rx_count_5\[162]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_1\[262] = \UART_1:BUART:rx_count_4\[163]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_0\[263] = \UART_1:BUART:rx_count_3\[164]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_6\[264] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_5\[265] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_4\[266] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_3\[267] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_2\[268] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_1\[269] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_0\[270] = zero[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:newa_0\[285] = \UART_1:BUART:rx_postpoll\[120]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:newb_0\[286] = \UART_1:BUART:rx_parity_bit\[237]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:dataa_0\[287] = \UART_1:BUART:rx_postpoll\[120]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:datab_0\[288] = \UART_1:BUART:rx_parity_bit\[237]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[289] = \UART_1:BUART:rx_postpoll\[120]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[290] = \UART_1:BUART:rx_parity_bit\[237]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[292] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[293] = \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[291]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[294] = \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[291]
Removing Lhs of wire tmpOE__RS_485_Input_net_0[316] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__switch_pin_net_0[321] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Active_Pin_net_0[327] = tmpOE__heart_beat_pin_net_0[4]
Removing Rhs of wire Net_8069[337] = \Active_Switch_Debounce:DEBOUNCER[0]:d_sync_0\[335]
Removing Lhs of wire \IDAC8_1:Net_125\[345] = zero[5]
Removing Lhs of wire \IDAC8_1:Net_158\[346] = zero[5]
Removing Lhs of wire \IDAC8_1:Net_123\[347] = zero[5]
Removing Lhs of wire \IDAC8_1:Net_194\[352] = zero[5]
Removing Lhs of wire \IDAC8_1:Net_195\[353] = zero[5]
Removing Lhs of wire \VDAC8_1:Net_83\[360] = zero[5]
Removing Lhs of wire \VDAC8_1:Net_81\[361] = zero[5]
Removing Lhs of wire \VDAC8_1:Net_82\[362] = zero[5]
Removing Lhs of wire tmpOE__Temp_Sensor_net_0[367] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Log_Pin_net_0[385] = tmpOE__heart_beat_pin_net_0[4]
Removing Rhs of wire Net_5750[394] = \Log_Switch_Debounce:DEBOUNCER[0]:d_sync_0\[392]
Removing Rhs of wire \SIGMA_A_D:Net_488\[406] = \SIGMA_A_D:Net_250\[441]
Removing Lhs of wire \SIGMA_A_D:Net_481\[408] = zero[5]
Removing Lhs of wire \SIGMA_A_D:Net_482\[409] = zero[5]
Removing Lhs of wire \SIGMA_A_D:Net_252\[443] = zero[5]
Removing Lhs of wire \SIGMA_A_D:soc\[445] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \Status_Reg_1:status_0\[448] = Net_5750[394]
Removing Lhs of wire \Status_Reg_1:status_1\[449] = Net_7675[450]
Removing Rhs of wire Net_7675[450] = \Board_Switch_Debug:DEBOUNCER[0]:d_sync_0\[530]
Removing Lhs of wire \Status_Reg_1:status_2\[451] = Net_8069[337]
Removing Lhs of wire \Status_Reg_1:status_3\[452] = zero[5]
Removing Lhs of wire \Status_Reg_1:status_4\[453] = zero[5]
Removing Lhs of wire \Status_Reg_1:status_5\[454] = zero[5]
Removing Lhs of wire \Status_Reg_1:status_6\[455] = zero[5]
Removing Lhs of wire \Status_Reg_1:status_7\[456] = zero[5]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_8[469] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_7[470] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_6[471] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_5[472] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_4[473] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_3[474] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_2[475] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_1[476] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_sensor_1_pins_net_0[477] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_8[499] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_7[500] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_6[501] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_5[502] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_4[503] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_3[504] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_2[505] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_1[506] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire tmpOE__Moisture_Sensor_Pin_2_net_0[507] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_enable\[535] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \ADC_SAR_Seq_1:cmp_vv_vv_MODGEN_1\[537] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[871]
Removing Rhs of wire \ADC_SAR_Seq_1:clock\[538] = \ADC_SAR_Seq_1:Net_3874\[771]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_5\[540] = \ADC_SAR_Seq_1:bSAR_SEQ:count_5\[738]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_4\[542] = \ADC_SAR_Seq_1:bSAR_SEQ:count_4\[739]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_3\[544] = \ADC_SAR_Seq_1:bSAR_SEQ:count_3\[740]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_2\[546] = \ADC_SAR_Seq_1:bSAR_SEQ:count_2\[741]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_1\[548] = \ADC_SAR_Seq_1:bSAR_SEQ:count_1\[742]
Removing Rhs of wire \ADC_SAR_Seq_1:ch_addr_0\[550] = \ADC_SAR_Seq_1:bSAR_SEQ:count_0\[743]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_0\[683] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_2\[684] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_1\[685] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_3\[686] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_1\[687] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vp_ctl_3\[688] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_0\[689] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:vn_ctl_2\[690] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:Net_188\[691] = \ADC_SAR_Seq_1:clock\[538]
Removing Lhs of wire \ADC_SAR_Seq_1:SAR:soc\[697] = zero[5]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:enable\[728] = \ADC_SAR_Seq_1:bSAR_SEQ:control_0\[729]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:load_period\[730] = \ADC_SAR_Seq_1:bSAR_SEQ:control_1\[731]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_7\[744] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_6\[745] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_5\[746] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_4\[747] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_3\[748] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_2\[749] = zero[5]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_1\[750] = zero[5]
Removing Rhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[751] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\[752]
Removing Rhs of wire Net_6099[759] = \ADC_SAR_Seq_1:bSAR_SEQ:status_0\[751]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_5\[782] = \ADC_SAR_Seq_1:MODIN1_5\[783]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_5\[783] = \ADC_SAR_Seq_1:ch_addr_5\[540]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_4\[784] = \ADC_SAR_Seq_1:MODIN1_4\[785]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_4\[785] = \ADC_SAR_Seq_1:ch_addr_4\[542]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_3\[786] = \ADC_SAR_Seq_1:MODIN1_3\[787]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_3\[787] = \ADC_SAR_Seq_1:ch_addr_3\[544]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_2\[788] = \ADC_SAR_Seq_1:MODIN1_2\[789]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_2\[789] = \ADC_SAR_Seq_1:ch_addr_2\[546]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_1\[790] = \ADC_SAR_Seq_1:MODIN1_1\[791]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_1\[791] = \ADC_SAR_Seq_1:ch_addr_1\[548]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newa_0\[792] = \ADC_SAR_Seq_1:MODIN1_0\[793]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN1_0\[793] = \ADC_SAR_Seq_1:ch_addr_0\[550]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_5\[794] = \ADC_SAR_Seq_1:MODIN2_5\[795]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_5\[795] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[539]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_4\[796] = \ADC_SAR_Seq_1:MODIN2_4\[797]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_4\[797] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[541]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_3\[798] = \ADC_SAR_Seq_1:MODIN2_3\[799]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_3\[799] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[543]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_2\[800] = \ADC_SAR_Seq_1:MODIN2_2\[801]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_2\[801] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[545]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_1\[802] = \ADC_SAR_Seq_1:MODIN2_1\[803]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_1\[803] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[547]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:newb_0\[804] = \ADC_SAR_Seq_1:MODIN2_0\[805]
Removing Lhs of wire \ADC_SAR_Seq_1:MODIN2_0\[805] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[549]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_5\[806] = \ADC_SAR_Seq_1:ch_addr_5\[540]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_4\[807] = \ADC_SAR_Seq_1:ch_addr_4\[542]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_3\[808] = \ADC_SAR_Seq_1:ch_addr_3\[544]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_2\[809] = \ADC_SAR_Seq_1:ch_addr_2\[546]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_1\[810] = \ADC_SAR_Seq_1:ch_addr_1\[548]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:dataa_0\[811] = \ADC_SAR_Seq_1:ch_addr_0\[550]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_5\[812] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[539]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_4\[813] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[541]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_3\[814] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[543]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_2\[815] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[545]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_1\[816] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[547]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:datab_0\[817] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[549]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_5\[818] = \ADC_SAR_Seq_1:ch_addr_5\[540]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_4\[819] = \ADC_SAR_Seq_1:ch_addr_4\[542]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_3\[820] = \ADC_SAR_Seq_1:ch_addr_3\[544]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_2\[821] = \ADC_SAR_Seq_1:ch_addr_2\[546]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_1\[822] = \ADC_SAR_Seq_1:ch_addr_1\[548]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:a_0\[823] = \ADC_SAR_Seq_1:ch_addr_0\[550]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_5\[824] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\[539]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_4\[825] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\[541]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_3\[826] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\[543]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_2\[827] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\[545]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_1\[828] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\[547]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:b_0\[829] = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\[549]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_0\[836] = tmpOE__heart_beat_pin_net_0[4]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_0\[837] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\[835]
Removing Lhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eqi_0\[843] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\[842]
Removing Rhs of wire \ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\[871] = \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:aeqb_1\[844]
Removing Lhs of wire \UART_1:BUART:reset_reg\\D\[892] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_bitclk\\D\[906] = \UART_1:BUART:rx_bitclk_pre\[155]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_pre\\D\[915] = \UART_1:BUART:rx_parity_error_pre\[232]
Removing Lhs of wire \UART_1:BUART:rx_break_status\\D\[916] = zero[5]
Removing Lhs of wire \Active_Switch_Debounce:DEBOUNCER[0]:d_sync_0\\D\[920] = Net_8067[328]
Removing Lhs of wire \Active_Switch_Debounce:DEBOUNCER[0]:d_sync_1\\D\[921] = Net_8069[337]
Removing Lhs of wire \Log_Switch_Debounce:DEBOUNCER[0]:d_sync_0\\D\[925] = Net_8063[386]
Removing Lhs of wire \Log_Switch_Debounce:DEBOUNCER[0]:d_sync_1\\D\[926] = Net_5750[394]
Removing Lhs of wire \Board_Switch_Debug:DEBOUNCER[0]:d_sync_0\\D\[930] = Net_7671[322]
Removing Lhs of wire \Board_Switch_Debug:DEBOUNCER[0]:d_sync_1\\D\[931] = Net_7675[450]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\\D\[935] = \ADC_SAR_Seq_1:ch_addr_5\[540]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\\D\[936] = \ADC_SAR_Seq_1:ch_addr_4\[542]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\\D\[937] = \ADC_SAR_Seq_1:ch_addr_3\[544]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\\D\[938] = \ADC_SAR_Seq_1:ch_addr_2\[546]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\\D\[939] = \ADC_SAR_Seq_1:ch_addr_1\[548]
Removing Lhs of wire \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\\D\[940] = \ADC_SAR_Seq_1:ch_addr_0\[550]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect_reg\\D\[1005] = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_edge_detect\[758]
Removing Lhs of wire \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\\D\[1007] = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\[755]

------------------------------------------------------
Aliased 0 equations, 245 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__heart_beat_pin_net_0' (cost = 0):
tmpOE__heart_beat_pin_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:rx_addressmatch\' (cost = 0):
\UART_1:BUART:rx_addressmatch\ <= (\UART_1:BUART:rx_addressmatch2\
	OR \UART_1:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre\' (cost = 1):
\UART_1:BUART:rx_bitclk_pre\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART_1:BUART:rx_bitclk_pre16x\ <= ((not \UART_1:BUART:rx_count_2\ and \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit1\' (cost = 1):
\UART_1:BUART:rx_poll_bit1\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit2\' (cost = 1):
\UART_1:BUART:rx_poll_bit2\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:pollingrange\' (cost = 4):
\UART_1:BUART:pollingrange\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:pollcount_1\)
	OR (not \UART_1:BUART:pollcount_1\ and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_1:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART_1:BUART:rx_postpoll\' (cost = 72):
\UART_1:BUART:rx_postpoll\ <= (\UART_1:BUART:pollcount_1\
	OR (Net_130 and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_130 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_130 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_130 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_130 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_1:ch_addr_0\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (not \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\)
	OR (\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_1:ch_addr_5\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_1:ch_addr_4\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_1:ch_addr_3\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_1:ch_addr_2\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_1:ch_addr_1\ and \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_1:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 53 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART_1:BUART:rx_status_0\ to zero
Aliasing \UART_1:BUART:rx_status_6\ to zero
Aliasing \UART_1:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART_1:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART_1:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART_1:BUART:rx_bitclk_enable\[119] = \UART_1:BUART:rx_bitclk\[167]
Removing Lhs of wire \UART_1:BUART:rx_status_0\[218] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_status_6\[227] = zero[5]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark_last\\D\[898] = \UART_1:BUART:tx_ctrl_mark_last\[110]
Removing Lhs of wire \UART_1:BUART:rx_markspace_status\\D\[910] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_status\\D\[911] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_addr_match_status\\D\[913] = zero[5]
Removing Lhs of wire \UART_1:BUART:rx_markspace_pre\\D\[914] = \UART_1:BUART:rx_markspace_pre\[231]
Removing Lhs of wire \UART_1:BUART:rx_parity_bit\\D\[919] = \UART_1:BUART:rx_parity_bit\[237]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_1:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART_1:BUART:rx_parity_bit\ and Net_130 and \UART_1:BUART:pollcount_0\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not Net_130 and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:rx_parity_bit\ and \UART_1:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.3\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -dcpsoc3 PSOC_5lp_moisture_sensor.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.295ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.3.0.9604, Family: PSoC3, Started at: Friday, 23 September 2016 19:02:36
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\glenn\OneDrive\PSOC\moisture_sensor\USB_UART01.cydsn\chain_flow\PSOC_5lp_moisture_sensor.cydsn\PSOC_5lp_moisture_sensor.cyprj -d CY8C5888LTI-LP097 PSOC_5lp_moisture_sensor.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.039ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_1:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART_1:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_1_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'SIGMA_A_D_Ext_CP_Clk'. Fanout=1, Signal=\SIGMA_A_D:Net_93\
    Analog  Clock 0: Automatic-assigning  clock 'SIGMA_A_D_theACLK'. Fanout=1, Signal=\SIGMA_A_D:Net_488\
    Digital Clock 1: Automatic-assigning  clock 'ADC_SAR_Seq_1_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_1:clock\
    Digital Clock 2: Automatic-assigning  clock 'UART_1_IntClock'. Fanout=1, Signal=\UART_1:Net_9\
    Digital Clock 3: Automatic-assigning  clock 'modbus_symbol_clock'. Fanout=1, Signal=Net_5443
    Digital Clock 4: Automatic-assigning  clock 'ad_process_clock_1'. Fanout=1, Signal=Net_8051
    Digital Clock 5: Automatic-assigning  clock 'Clock_2'. Fanout=3, Signal=Net_7676
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART_1:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \Active_Switch_Debounce:ClkSync\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \Log_Switch_Debounce:ClkSync\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \Board_Switch_Debug:ClkSync\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: \ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_1:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_1_IntClock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_1:BUART:rx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:rx_address_detected\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_1:BUART:rx_parity_error_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_markspace_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_state_1\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_state_1\ (fanout=8)

    Removing \UART_1:BUART:tx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:tx_mark\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = heart_beat_pin(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: INP_DIS_LO
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => heart_beat_pin(0)__PA ,
            pad => heart_beat_pin(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RS_485_OUTPUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RS_485_OUTPUT(0)__PA ,
            input => Net_116 ,
            pad => RS_485_OUTPUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RS_485_TX_ENBABLE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RS_485_TX_ENBABLE(0)__PA ,
            input => Net_118 ,
            pad => RS_485_TX_ENBABLE(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RS_485_Input(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RS_485_Input(0)__PA ,
            fb => Net_130 ,
            pad => RS_485_Input(0)_PAD );
        Properties:
        {
        }

    Pin : Name = switch_pin(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => switch_pin(0)__PA ,
            fb => Net_7671 ,
            pad => switch_pin(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Active_Pin(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Active_Pin(0)__PA ,
            fb => Net_8067 ,
            pad => Active_Pin(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Temp_Sensor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Temp_Sensor(0)__PA ,
            analog_term => Net_8005 ,
            pad => Temp_Sensor(0)_PAD ,
            input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = Log_Pin(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Log_Pin(0)__PA ,
            fb => Net_8063 ,
            pad => Log_Pin(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(0)__PA ,
            analog_term => Net_7968 ,
            pad => Moisture_sensor_1_pins(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(1)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(1)__PA ,
            analog_term => Net_7967 ,
            pad => Moisture_sensor_1_pins(1)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(2)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(2)__PA ,
            analog_term => Net_7966 ,
            pad => Moisture_sensor_1_pins(2)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(3)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(3)__PA ,
            analog_term => Net_7965 ,
            pad => Moisture_sensor_1_pins(3)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(4)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(4)__PA ,
            analog_term => Net_7964 ,
            pad => Moisture_sensor_1_pins(4)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(5)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(5)__PA ,
            analog_term => Net_7963 ,
            pad => Moisture_sensor_1_pins(5)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(6)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(6)__PA ,
            analog_term => Net_7962 ,
            pad => Moisture_sensor_1_pins(6)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(7)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(7)__PA ,
            analog_term => Net_7952 ,
            pad => Moisture_sensor_1_pins(7)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_sensor_1_pins(8)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_sensor_1_pins(8)__PA ,
            analog_term => Net_8026 ,
            pad => Moisture_sensor_1_pins(8)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(0)__PA ,
            analog_term => Net_7969 ,
            pad => Moisture_Sensor_Pin_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(1)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(1)__PA ,
            analog_term => Net_8027 ,
            pad => Moisture_Sensor_Pin_2(1)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(2)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(2)__PA ,
            analog_term => Net_7971 ,
            pad => Moisture_Sensor_Pin_2(2)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(3)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(3)__PA ,
            analog_term => Net_7974 ,
            pad => Moisture_Sensor_Pin_2(3)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(4)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(4)__PA ,
            analog_term => Net_7976 ,
            pad => Moisture_Sensor_Pin_2(4)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(5)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(5)__PA ,
            analog_term => Net_7978 ,
            pad => Moisture_Sensor_Pin_2(5)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(6)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(6)__PA ,
            analog_term => Net_7979 ,
            pad => Moisture_Sensor_Pin_2(6)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(7)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(7)__PA ,
            analog_term => Net_7956 ,
            pad => Moisture_Sensor_Pin_2(7)_PAD );
        Properties:
        {
        }

    Pin : Name = Moisture_Sensor_Pin_2(8)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Moisture_Sensor_Pin_2(8)__PA ,
            analog_term => Net_7957 ,
            pad => Moisture_Sensor_Pin_2(8)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_116, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_116 (fanout=1)

    MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_130 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_6098 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=Net_118, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = Net_118 (fanout=1)

    MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=9)

    MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=9)

    MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_130
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_130 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_130 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_130
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_130 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_130 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_130
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_130
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)

    MacroCell: Name=Net_8069, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_8067
        );
        Output = Net_8069 (fanout=1)

    MacroCell: Name=Net_5750, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_8063
        );
        Output = Net_5750 (fanout=1)

    MacroCell: Name=Net_7675, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_7671
        );
        Output = Net_7675 (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_6099, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_6099 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_6099
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_1:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
            ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_1:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
            route_si => \UART_1:BUART:rx_postpoll\ ,
            f0_load => \UART_1:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\Status_Reg_1:sts:sts_reg\
        PORT MAP (
            status_2 => Net_8069 ,
            status_1 => Net_7675 ,
            status_0 => Net_5750 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True

    statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            status_0 => Net_6099 ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART_1:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_1:BUART:tx_status_2\ ,
            status_1 => \UART_1:BUART:tx_fifo_empty\ ,
            status_0 => \UART_1:BUART:tx_status_0\ ,
            interrupt => Net_136 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_1:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_5 => \UART_1:BUART:rx_status_5\ ,
            status_4 => \UART_1:BUART:rx_status_4\ ,
            status_3 => \UART_1:BUART:rx_status_3\ ,
            interrupt => Net_137 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_1:nrq\ ,
            out => \ADC_SAR_Seq_1:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            load => \UART_1:BUART:rx_counter_load\ ,
            count_6 => \UART_1:BUART:rx_count_6\ ,
            count_5 => \UART_1:BUART:rx_count_5\ ,
            count_4 => \UART_1:BUART:rx_count_4\ ,
            count_3 => \UART_1:BUART:rx_count_3\ ,
            count_2 => \UART_1:BUART:rx_count_2\ ,
            count_1 => \UART_1:BUART:rx_count_1\ ,
            count_0 => \UART_1:BUART:rx_count_0\ ,
            tc => \UART_1:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_1:clock\ ,
            load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000000"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =isr_1
        PORT MAP (
            interrupt => CTW_OUT );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\RTC_1:isr\
        PORT MAP (
            interrupt => OPPS_OUT );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\UART_1:TXInternalInterrupt\
        PORT MAP (
            interrupt => Net_136 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\UART_1:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_137 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =UART_TX_INTERRUPT
        PORT MAP (
            interrupt => Net_136 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =UART_RX_INTERRUPT
        PORT MAP (
            interrupt => Net_137 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =modbus_symbol_timer
        PORT MAP (
            interrupt => Net_5443_local );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\SIGMA_A_D:IRQ\
        PORT MAP (
            interrupt => Net_7789 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_6099 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =ad_interrupt_1
        PORT MAP (
            interrupt => Net_8051_local );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    6 :    2 :    8 : 75.00 %
Analog Clocks                 :    1 :    3 :    4 : 25.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :   10 :   22 :   32 : 31.25 %
IO                            :   32 :   16 :   48 : 66.67 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  105 :   87 :  192 : 54.69 %
  Unique P-terms              :  135 :  249 :  384 : 35.16 %
  Total P-terms               :  145 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    7 :   17 :   24 : 29.17 %
    Status Registers          :    2 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    3 :   21 :   24 : 12.50 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    1 :    0 :    1 : 100.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    2 :    2 :    4 : 50.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.190ms
Tech mapping phase: Elapsed time ==> 0s.303ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_5988" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6102" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6104" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6109" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6111" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6112" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6114" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6116" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6117" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6119" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6121" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6122" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6124" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6126" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6127" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6129" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6131" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6132" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6134" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6136" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6137" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6139" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6141" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6142" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6144" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6146" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6147" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6149" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6151" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6152" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6154" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6156" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6157" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6159" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6161" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6162" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6164" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6166" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6167" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6169" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6171" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6172" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6174" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6176" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6177" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6178" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6179" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6180" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6181" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6182" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6183" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6184" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6185" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6186" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6187" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6188" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6189" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6190" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6191" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6192" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(2)][IoId=(6)] : Active_Pin(0) (fixed)
IO_7@[IOP=(2)][IoId=(7)] : Log_Pin(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : Moisture_Sensor_Pin_2(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Moisture_Sensor_Pin_2(1) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Moisture_Sensor_Pin_2(2) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Moisture_Sensor_Pin_2(3) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Moisture_Sensor_Pin_2(4) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Moisture_Sensor_Pin_2(5) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : Moisture_Sensor_Pin_2(6) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : Moisture_Sensor_Pin_2(7) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : Moisture_Sensor_Pin_2(8) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : Moisture_sensor_1_pins(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : Moisture_sensor_1_pins(1) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Moisture_sensor_1_pins(2) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : Moisture_sensor_1_pins(3) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Moisture_sensor_1_pins(4) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Moisture_sensor_1_pins(5) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Moisture_sensor_1_pins(6) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : Moisture_sensor_1_pins(7) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : Moisture_sensor_1_pins(8) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : RS_485_Input(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : RS_485_OUTPUT(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : RS_485_TX_ENBABLE(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : Temp_Sensor(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : heart_beat_pin(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : switch_pin(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
VIDAC[3]@[FFB(VIDAC,3)] : \IDAC8_1:viDAC8\
DSM[0]@[FFB(DSM,0)] : \SIGMA_A_D:DSM\
VIDAC[2]@[FFB(VIDAC,2)] : \VDAC8_1:viDAC8\
Log: apr.M0058: The analog placement iterative improvement is 59% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 83% done. (App=cydsfit)
Analog Placement Results:
IO_6@[IOP=(2)][IoId=(6)] : Active_Pin(0) (fixed)
IO_7@[IOP=(2)][IoId=(7)] : Log_Pin(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : Moisture_Sensor_Pin_2(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : Moisture_Sensor_Pin_2(1) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Moisture_Sensor_Pin_2(2) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Moisture_Sensor_Pin_2(3) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : Moisture_Sensor_Pin_2(4) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : Moisture_Sensor_Pin_2(5) (fixed)
IO_5@[IOP=(0)][IoId=(5)] : Moisture_Sensor_Pin_2(6) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : Moisture_Sensor_Pin_2(7) (fixed)
IO_5@[IOP=(2)][IoId=(5)] : Moisture_Sensor_Pin_2(8) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : Moisture_sensor_1_pins(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : Moisture_sensor_1_pins(1) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Moisture_sensor_1_pins(2) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : Moisture_sensor_1_pins(3) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : Moisture_sensor_1_pins(4) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : Moisture_sensor_1_pins(5) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Moisture_sensor_1_pins(6) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : Moisture_sensor_1_pins(7) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : Moisture_sensor_1_pins(8) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : RS_485_Input(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : RS_485_OUTPUT(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : RS_485_TX_ENBABLE(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : Temp_Sensor(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : heart_beat_pin(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : switch_pin(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_1:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
VIDAC[0]@[FFB(VIDAC,0)] : \IDAC8_1:viDAC8\
DSM[0]@[FFB(DSM,0)] : \SIGMA_A_D:DSM\
VIDAC[2]@[FFB(VIDAC,2)] : \VDAC8_1:viDAC8\

Analog Placement phase: Elapsed time ==> 11s.509ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.045ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: Net_7939 {
    dsm_0_vplus
    agl0_x_dsm_0_vplus
    agl0
    agl0_x_vidac_0_iout
    vidac_0_iout
  }
  Net: Net_7968 {
    p3_0
  }
  Net: Net_7967 {
    p3_2
  }
  Net: Net_7966 {
    p3_4
  }
  Net: Net_7965 {
    p3_6
  }
  Net: Net_7964 {
    p0_0
  }
  Net: Net_7963 {
    p0_2
  }
  Net: Net_7962 {
    p0_4
  }
  Net: Net_7952 {
    p0_6
  }
  Net: Net_8026 {
    p2_4
  }
  Net: Net_306 {
    vidac_2_vout
    agl5_x_vidac_2_vout
    agl5
    agl5_x_dsm_0_vminus
    dsm_0_vminus
  }
  Net: Net_7969 {
    p3_1
  }
  Net: Net_8027 {
    p3_3
  }
  Net: Net_7971 {
    p3_5
  }
  Net: Net_7974 {
    p3_7
  }
  Net: Net_7976 {
    p0_1
  }
  Net: Net_7978 {
    p0_3
  }
  Net: Net_7979 {
    p0_5
  }
  Net: Net_7956 {
    p0_7
  }
  Net: Net_7957 {
    p2_5
  }
  Net: \ADC_SAR_Seq_1:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_8005 {
    p2_3
  }
  Net: Net_5988 {
  }
  Net: Net_6101 {
  }
  Net: Net_6102 {
  }
  Net: Net_6104 {
  }
  Net: Net_6106 {
  }
  Net: Net_6107 {
  }
  Net: Net_6109 {
  }
  Net: Net_6111 {
  }
  Net: Net_6112 {
  }
  Net: Net_6114 {
  }
  Net: Net_6116 {
  }
  Net: Net_6117 {
  }
  Net: Net_6119 {
  }
  Net: Net_6121 {
  }
  Net: Net_6122 {
  }
  Net: Net_6124 {
  }
  Net: Net_6126 {
  }
  Net: Net_6127 {
  }
  Net: Net_6129 {
  }
  Net: Net_6131 {
  }
  Net: Net_6132 {
  }
  Net: Net_6134 {
  }
  Net: Net_6136 {
  }
  Net: Net_6137 {
  }
  Net: Net_6139 {
  }
  Net: Net_6141 {
  }
  Net: Net_6142 {
  }
  Net: Net_6144 {
  }
  Net: Net_6146 {
  }
  Net: Net_6147 {
  }
  Net: Net_6149 {
  }
  Net: Net_6151 {
  }
  Net: Net_6152 {
  }
  Net: Net_6154 {
  }
  Net: Net_6156 {
  }
  Net: Net_6157 {
  }
  Net: Net_6159 {
  }
  Net: Net_6161 {
  }
  Net: Net_6162 {
  }
  Net: Net_6164 {
  }
  Net: Net_6166 {
  }
  Net: Net_6167 {
  }
  Net: Net_6169 {
  }
  Net: Net_6171 {
  }
  Net: Net_6172 {
  }
  Net: Net_6174 {
  }
  Net: Net_6176 {
  }
  Net: Net_6177 {
  }
  Net: Net_6178 {
  }
  Net: Net_6179 {
  }
  Net: Net_6180 {
  }
  Net: Net_6181 {
  }
  Net: Net_6182 {
  }
  Net: Net_6183 {
  }
  Net: Net_6184 {
  }
  Net: Net_6185 {
  }
  Net: Net_6186 {
  }
  Net: Net_6187 {
  }
  Net: Net_6188 {
  }
  Net: Net_6189 {
  }
  Net: Net_6190 {
  }
  Net: Net_6191 {
  }
  Net: Net_6192 {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_209\ {
  }
  Net: \ADC_SAR_Seq_1:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: \IDAC8_1:Net_124\ {
  }
  Net: \SIGMA_A_D:Net_249\ {
  }
  Net: \SIGMA_A_D:Net_257\ {
  }
  Net: \SIGMA_A_D:Net_109\ {
  }
  Net: \SIGMA_A_D:Net_34\ {
  }
  Net: \VDAC8_1:Net_77\ {
  }
  Net: AmuxNet::AMux_1 {
    dsm_0_vplus
    agl4_x_dsm_0_vplus
    agl4
    agl4_x_agr4
    agr4
    agr4_x_p3_4
    agl6_x_dsm_0_vplus
    agl6
    agl6_x_agr6
    agr6
    agr6_x_p3_2
    agl4_x_p0_0
    agl4_x_p0_4
    agr4_x_p3_0
    agr6_x_p3_6
    agl6_x_p0_2
    vidac_0_iout
    p0_6_x_vidac_0_iout
    agl0_x_p2_4
    p3_4
    p3_2
    p0_0
    p0_4
    p3_0
    p3_6
    p0_2
    p0_6
    p2_4
  }
  Net: AmuxNet::AMux_2 {
    dsm_0_vminus
    agl7_x_dsm_0_vminus
    agl7
    agl7_x_agr7
    agr7
    agr7_x_p3_7
    agl1_x_dsm_0_vminus
    agl1
    agl1_x_p2_5
    agl5
    agl5_x_agr5
    agr5
    agr5_x_p3_5
    agr5_x_p3_1
    agl7_x_p0_7
    agl7_x_p0_3
    agr7_x_p3_3
    agl5_x_p0_5
    agl5_x_p0_1
    p3_7
    p2_5
    p3_5
    p3_1
    p0_7
    p0_3
    p3_3
    p0_5
    p0_1
  }
  Net: AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\ {
    sar_0_vplus
    agl3_x_sar_0_vplus
    agl3
    agl3_x_p2_3
    p2_3
  }
}
Map of item to net {
  dsm_0_vplus                                      -> Net_7939
  agl0_x_dsm_0_vplus                               -> Net_7939
  agl0                                             -> Net_7939
  agl0_x_vidac_0_iout                              -> Net_7939
  vidac_0_iout                                     -> Net_7939
  vidac_2_vout                                     -> Net_306
  agl5_x_vidac_2_vout                              -> Net_306
  agl5                                             -> Net_306
  agl5_x_dsm_0_vminus                              -> Net_306
  dsm_0_vminus                                     -> Net_306
  sar_0_vrefhi                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq_1:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq_1:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_SAR_Seq_1:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR_Seq_1:SAR:Net_235\
  sar_0_vref                                       -> \ADC_SAR_Seq_1:SAR:Net_235\
  p3_0                                             -> Net_7968
  p3_2                                             -> Net_7967
  p3_4                                             -> Net_7966
  p3_6                                             -> Net_7965
  p0_0                                             -> Net_7964
  p0_2                                             -> Net_7963
  p0_4                                             -> Net_7962
  p0_6                                             -> Net_7952
  p2_4                                             -> Net_8026
  p3_1                                             -> Net_7969
  p3_3                                             -> Net_8027
  p3_5                                             -> Net_7971
  p3_7                                             -> Net_7974
  p0_1                                             -> Net_7976
  p0_3                                             -> Net_7978
  p0_5                                             -> Net_7979
  p0_7                                             -> Net_7956
  p2_5                                             -> Net_7957
  sar_0_vplus                                      -> \ADC_SAR_Seq_1:Net_2803\
  p2_3                                             -> Net_8005
  agl4_x_dsm_0_vplus                               -> AmuxNet::AMux_1
  agl4                                             -> AmuxNet::AMux_1
  agl4_x_agr4                                      -> AmuxNet::AMux_1
  agr4                                             -> AmuxNet::AMux_1
  agr4_x_p3_4                                      -> AmuxNet::AMux_1
  agl6_x_dsm_0_vplus                               -> AmuxNet::AMux_1
  agl6                                             -> AmuxNet::AMux_1
  agl6_x_agr6                                      -> AmuxNet::AMux_1
  agr6                                             -> AmuxNet::AMux_1
  agr6_x_p3_2                                      -> AmuxNet::AMux_1
  agl4_x_p0_0                                      -> AmuxNet::AMux_1
  agl4_x_p0_4                                      -> AmuxNet::AMux_1
  agr4_x_p3_0                                      -> AmuxNet::AMux_1
  agr6_x_p3_6                                      -> AmuxNet::AMux_1
  agl6_x_p0_2                                      -> AmuxNet::AMux_1
  p0_6_x_vidac_0_iout                              -> AmuxNet::AMux_1
  agl0_x_p2_4                                      -> AmuxNet::AMux_1
  agl7_x_dsm_0_vminus                              -> AmuxNet::AMux_2
  agl7                                             -> AmuxNet::AMux_2
  agl7_x_agr7                                      -> AmuxNet::AMux_2
  agr7                                             -> AmuxNet::AMux_2
  agr7_x_p3_7                                      -> AmuxNet::AMux_2
  agl1_x_dsm_0_vminus                              -> AmuxNet::AMux_2
  agl1                                             -> AmuxNet::AMux_2
  agl1_x_p2_5                                      -> AmuxNet::AMux_2
  agl5_x_agr5                                      -> AmuxNet::AMux_2
  agr5                                             -> AmuxNet::AMux_2
  agr5_x_p3_5                                      -> AmuxNet::AMux_2
  agr5_x_p3_1                                      -> AmuxNet::AMux_2
  agl7_x_p0_7                                      -> AmuxNet::AMux_2
  agl7_x_p0_3                                      -> AmuxNet::AMux_2
  agr7_x_p3_3                                      -> AmuxNet::AMux_2
  agl5_x_p0_5                                      -> AmuxNet::AMux_2
  agl5_x_p0_1                                      -> AmuxNet::AMux_2
  agl3_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3                                             -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
  agl3_x_p2_3                                      -> AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
}
Mux Info {
  Mux: AMux_1 {
     Mouth: Net_7939
     Guts:  AmuxNet::AMux_1
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_7968
      Outer: agr4_x_p3_0
      Inner: __open__
      Path {
        p3_0
        agr4_x_p3_0
        agr4
        agl4_x_agr4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_7967
      Outer: agr6_x_p3_2
      Inner: __open__
      Path {
        p3_2
        agr6_x_p3_2
        agr6
        agl6_x_agr6
        agl6
        agl6_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_7966
      Outer: agr4_x_p3_4
      Inner: __open__
      Path {
        p3_4
        agr4_x_p3_4
        agr4
        agl4_x_agr4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_7965
      Outer: agr6_x_p3_6
      Inner: __open__
      Path {
        p3_6
        agr6_x_p3_6
        agr6
        agl6_x_agr6
        agl6
        agl6_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_7964
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 5 {
      Net:   Net_7963
      Outer: agl6_x_p0_2
      Inner: __open__
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 6 {
      Net:   Net_7962
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 7 {
      Net:   Net_7952
      Outer: p0_6_x_vidac_0_iout
      Inner: __open__
      Path {
        p0_6
        p0_6_x_vidac_0_iout
        vidac_0_iout
      }
    }
    Arm: 8 {
      Net:   Net_8026
      Outer: agl0_x_p2_4
      Inner: __open__
      Path {
        p2_4
        agl0_x_p2_4
      }
    }
  }
  Mux: AMux_2 {
     Mouth: Net_306
     Guts:  AmuxNet::AMux_2
     IsSingleSwitching: False
     IsStaticSwitching: False
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_7969
      Outer: agr5_x_p3_1
      Inner: agl5_x_agr5
      Path {
        p3_1
        agr5_x_p3_1
        agr5
        agl5_x_agr5
        agl5
      }
    }
    Arm: 1 {
      Net:   Net_8027
      Outer: agr7_x_p3_3
      Inner: agl7_x_dsm_0_vminus
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agl7_x_agr7
        agl7
        agl7_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 2 {
      Net:   Net_7971
      Outer: agr5_x_p3_5
      Inner: agl5_x_agr5
      Path {
        p3_5
        agr5_x_p3_5
        agr5
        agl5_x_agr5
        agl5
      }
    }
    Arm: 3 {
      Net:   Net_7974
      Outer: agr7_x_p3_7
      Inner: agl7_x_dsm_0_vminus
      Path {
        p3_7
        agr7_x_p3_7
        agr7
        agl7_x_agr7
        agl7
        agl7_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 4 {
      Net:   Net_7976
      Outer: agl5_x_p0_1
      Inner: __open__
      Path {
        p0_1
        agl5_x_p0_1
      }
    }
    Arm: 5 {
      Net:   Net_7978
      Outer: agl7_x_p0_3
      Inner: agl7_x_dsm_0_vminus
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 6 {
      Net:   Net_7979
      Outer: agl5_x_p0_5
      Inner: __open__
      Path {
        p0_5
        agl5_x_p0_5
      }
    }
    Arm: 7 {
      Net:   Net_7956
      Outer: agl7_x_p0_7
      Inner: agl7_x_dsm_0_vminus
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 8 {
      Net:   Net_7957
      Outer: agl1_x_p2_5
      Inner: agl1_x_dsm_0_vminus
      Path {
        p2_5
        agl1_x_p2_5
        agl1
        agl1_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
  }
  Mux: \ADC_SAR_Seq_1:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_1:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_1:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_8005
      Outer: agl3_x_p2_3
      Inner: agl3_x_sar_0_vplus
      Path {
        p2_3
        agl3_x_p2_3
        agl3
        agl3_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_5988
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 2 {
      Net:   Net_6101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_6102
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_6104
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_6106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_6107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_6109
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_6111
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_6112
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_6114
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_6116
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_6117
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_6119
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_6121
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_6122
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_6124
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_6126
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_6127
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_6129
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_6131
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_6132
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_6134
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_6136
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_6137
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_6139
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_6141
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_6142
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_6144
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_6146
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_6147
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_6149
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_6151
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_6152
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_6154
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_6156
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_6157
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_6159
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_6161
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_6162
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_6164
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_6166
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_6167
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_6169
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_6171
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_6172
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_6174
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_6176
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_6177
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_6178
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_6179
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_6180
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_6181
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_6182
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_6183
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_6184
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_6185
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_6186
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_6187
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_6188
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_6189
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_6190
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_6191
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_6192
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.482ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 4.9 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   33 :   15 :   48 :  68.75%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.79
                   Pterms :            4.27
               Macrocells :            3.18
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.003ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.180ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.002ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 649, final cost is 649 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         17 :       9.82 :       6.18
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=11, #pterms=6
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_130
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=3, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_130 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_130
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_130
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_1:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_5 => \UART_1:BUART:rx_status_5\ ,
        status_4 => \UART_1:BUART:rx_status_4\ ,
        status_3 => \UART_1:BUART:rx_status_3\ ,
        interrupt => Net_137 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=3, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_130 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_130 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_130 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_130 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_130
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
        route_si => \UART_1:BUART:rx_postpoll\ ,
        f0_load => \UART_1:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=11, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=2, #inputs=3, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }
}

count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        load => \UART_1:BUART:rx_counter_load\ ,
        count_6 => \UART_1:BUART:rx_count_6\ ,
        count_5 => \UART_1:BUART:rx_count_5\ ,
        count_4 => \UART_1:BUART:rx_count_4\ ,
        count_3 => \UART_1:BUART:rx_count_3\ ,
        count_2 => \UART_1:BUART:rx_count_2\ ,
        count_1 => \UART_1:BUART:rx_count_1\ ,
        count_0 => \UART_1:BUART:rx_count_0\ ,
        tc => \UART_1:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=Net_5750, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_8063
        );
        Output = Net_5750 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_7675, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_7671
        );
        Output = Net_7675 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_8069, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_7676) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_8067
        );
        Output = Net_8069 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\Status_Reg_1:sts:sts_reg\
    PORT MAP (
        status_2 => Net_8069 ,
        status_1 => Net_7675 ,
        status_0 => Net_5750 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_6099
            + \ADC_SAR_Seq_1:Net_3935\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_6098 * !\ADC_SAR_Seq_1:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_6099, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\
        );
        Output = Net_6099 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_1:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_SAR_Seq_1:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_1:nrq\ ,
        out => \ADC_SAR_Seq_1:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:ch_addr_5\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:ch_addr_4\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:ch_addr_3\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:ch_addr_2\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:ch_addr_1\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:ch_addr_1\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_1:ch_addr_0\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        control_7 => \ADC_SAR_Seq_1:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_1:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_1:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_1:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_1:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_1:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=3, #inputs=8, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_116, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_116 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        load => \ADC_SAR_Seq_1:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_1:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_1:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_1:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_1:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_1:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_1:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_1:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_1:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000000"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=6, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_118, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = Net_118 (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
        ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_1:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statuscell: Name =\ADC_SAR_Seq_1:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_1:clock\ ,
        status_0 => Net_6099 ,
        clk_en => \ADC_SAR_Seq_1:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_1:bSAR_SEQ:enable\)

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=12, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=2, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_1:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART_1:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_1:BUART:tx_status_2\ ,
        status_1 => \UART_1:BUART:tx_fifo_empty\ ,
        status_0 => \UART_1:BUART:tx_status_0\ ,
        interrupt => Net_136 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] is empty.
UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:ch_addr_5\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:ch_addr_4\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:ch_addr_3\
            + !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:ch_addr_2\
            + \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=1] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] is empty.
UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_1:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_1:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =UART_RX_INTERRUPT
        PORT MAP (
            interrupt => Net_137 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =UART_TX_INTERRUPT
        PORT MAP (
            interrupt => Net_136 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\ADC_SAR_Seq_1:IRQ\
        PORT MAP (
            interrupt => Net_6099 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\RTC_1:isr\
        PORT MAP (
            interrupt => OPPS_OUT );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =\UART_1:RXInternalInterrupt\
        PORT MAP (
            interrupt => Net_137 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =\UART_1:TXInternalInterrupt\
        PORT MAP (
            interrupt => Net_136 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(6)] 
    interrupt: Name =ad_interrupt_1
        PORT MAP (
            interrupt => Net_8051_local );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(7)] 
    interrupt: Name =isr_1
        PORT MAP (
            interrupt => CTW_OUT );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(8)] 
    interrupt: Name =modbus_symbol_timer
        PORT MAP (
            interrupt => Net_5443_local );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrContainer=(0)][IntrId=(29)] 
    interrupt: Name =\SIGMA_A_D:IRQ\
        PORT MAP (
            interrupt => Net_7789 );
        Properties:
        {
            int_type = "10"
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq_1:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq_1:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_1:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_1:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Moisture_sensor_1_pins(4)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(4)__PA ,
        analog_term => Net_7964 ,
        pad => Moisture_sensor_1_pins(4)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Moisture_Sensor_Pin_2(4)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(4)__PA ,
        analog_term => Net_7976 ,
        pad => Moisture_Sensor_Pin_2(4)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Moisture_sensor_1_pins(5)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(5)__PA ,
        analog_term => Net_7963 ,
        pad => Moisture_sensor_1_pins(5)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Moisture_Sensor_Pin_2(5)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(5)__PA ,
        analog_term => Net_7978 ,
        pad => Moisture_Sensor_Pin_2(5)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Moisture_sensor_1_pins(6)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(6)__PA ,
        analog_term => Net_7962 ,
        pad => Moisture_sensor_1_pins(6)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Moisture_Sensor_Pin_2(6)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(6)__PA ,
        analog_term => Net_7979 ,
        pad => Moisture_Sensor_Pin_2(6)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Moisture_sensor_1_pins(7)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(7)__PA ,
        analog_term => Net_7952 ,
        pad => Moisture_sensor_1_pins(7)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Moisture_Sensor_Pin_2(7)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(7)__PA ,
        analog_term => Net_7956 ,
        pad => Moisture_Sensor_Pin_2(7)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=5]: 
Pin : Name = RS_485_Input(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RS_485_Input(0)__PA ,
        fb => Net_130 ,
        pad => RS_485_Input(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = RS_485_TX_ENBABLE(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RS_485_TX_ENBABLE(0)__PA ,
        input => Net_118 ,
        pad => RS_485_TX_ENBABLE(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = RS_485_OUTPUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RS_485_OUTPUT(0)__PA ,
        input => Net_116 ,
        pad => RS_485_OUTPUT(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = heart_beat_pin(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: INP_DIS_LO
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => heart_beat_pin(0)__PA ,
        pad => heart_beat_pin(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = switch_pin(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => switch_pin(0)__PA ,
        fb => Net_7671 ,
        pad => switch_pin(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Temp_Sensor(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Temp_Sensor(0)__PA ,
        analog_term => Net_8005 ,
        pad => Temp_Sensor(0)_PAD ,
        input => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Moisture_sensor_1_pins(8)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(8)__PA ,
        analog_term => Net_8026 ,
        pad => Moisture_sensor_1_pins(8)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Moisture_Sensor_Pin_2(8)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(8)__PA ,
        analog_term => Net_7957 ,
        pad => Moisture_Sensor_Pin_2(8)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Active_Pin(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Active_Pin(0)__PA ,
        fb => Net_8067 ,
        pad => Active_Pin(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Log_Pin(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Log_Pin(0)__PA ,
        fb => Net_8063 ,
        pad => Log_Pin(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = Moisture_sensor_1_pins(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(0)__PA ,
        analog_term => Net_7968 ,
        pad => Moisture_sensor_1_pins(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Moisture_Sensor_Pin_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(0)__PA ,
        analog_term => Net_7969 ,
        pad => Moisture_Sensor_Pin_2(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Moisture_sensor_1_pins(1)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(1)__PA ,
        analog_term => Net_7967 ,
        pad => Moisture_sensor_1_pins(1)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Moisture_Sensor_Pin_2(1)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(1)__PA ,
        analog_term => Net_8027 ,
        pad => Moisture_Sensor_Pin_2(1)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Moisture_sensor_1_pins(2)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(2)__PA ,
        analog_term => Net_7966 ,
        pad => Moisture_sensor_1_pins(2)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Moisture_Sensor_Pin_2(2)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(2)__PA ,
        analog_term => Net_7971 ,
        pad => Moisture_Sensor_Pin_2(2)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Moisture_sensor_1_pins(3)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_sensor_1_pins(3)__PA ,
        analog_term => Net_7965 ,
        pad => Moisture_sensor_1_pins(3)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Moisture_Sensor_Pin_2(3)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Moisture_Sensor_Pin_2(3)__PA ,
        analog_term => Net_7974 ,
        pad => Moisture_Sensor_Pin_2(3)_PAD );
    Properties:
    {
    }

Port 12 is empty
Port 15 is empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \SIGMA_A_D:Net_93\ ,
            dclk_0 => \SIGMA_A_D:Net_93_local\ ,
            aclk_glb_0 => \SIGMA_A_D:Net_488\ ,
            aclk_0 => \SIGMA_A_D:Net_488_local\ ,
            clk_a_dig_glb_0 => \SIGMA_A_D:Net_488_adig\ ,
            clk_a_dig_0 => \SIGMA_A_D:Net_488_adig_local\ ,
            dclk_glb_1 => \ADC_SAR_Seq_1:clock\ ,
            dclk_1 => \ADC_SAR_Seq_1:clock_local\ ,
            dclk_glb_2 => \UART_1:Net_9\ ,
            dclk_2 => \UART_1:Net_9_local\ ,
            dclk_glb_3 => Net_5443 ,
            dclk_3 => Net_5443_local ,
            dclk_glb_4 => Net_8051 ,
            dclk_4 => Net_8051_local ,
            dclk_glb_5 => Net_7676 ,
            dclk_5 => Net_7676_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: empty
Delta-Sigma ADC group 0: 
    DS Modulator @ F(DSM,0): 
    dsmodcell: Name =\SIGMA_A_D:DSM\
        PORT MAP (
            aclock => \SIGMA_A_D:Net_488\ ,
            vplus => Net_7939 ,
            vminus => Net_306 ,
            reset_dec => \SIGMA_A_D:mod_reset\ ,
            extclk_cp_udb => \SIGMA_A_D:Net_93_local\ ,
            ext_pin_1 => \SIGMA_A_D:Net_249\ ,
            ext_pin_2 => \SIGMA_A_D:Net_257\ ,
            ext_vssa => \SIGMA_A_D:Net_109\ ,
            qtz_ref => \SIGMA_A_D:Net_34\ ,
            dec_clock => \SIGMA_A_D:aclock\ ,
            mod_dat_3 => \SIGMA_A_D:mod_dat_3\ ,
            mod_dat_2 => \SIGMA_A_D:mod_dat_2\ ,
            mod_dat_1 => \SIGMA_A_D:mod_dat_1\ ,
            mod_dat_0 => \SIGMA_A_D:mod_dat_0\ ,
            dout_udb_7 => \SIGMA_A_D:Net_245_7\ ,
            dout_udb_6 => \SIGMA_A_D:Net_245_6\ ,
            dout_udb_5 => \SIGMA_A_D:Net_245_5\ ,
            dout_udb_4 => \SIGMA_A_D:Net_245_4\ ,
            dout_udb_3 => \SIGMA_A_D:Net_245_3\ ,
            dout_udb_2 => \SIGMA_A_D:Net_245_2\ ,
            dout_udb_1 => \SIGMA_A_D:Net_245_1\ ,
            dout_udb_0 => \SIGMA_A_D:Net_245_0\ );
        Properties:
        {
            cy_registers = ""
            resolution = 18
        }
Decimator group 0: 
    Decimator Block @ F(Decimator,0): 
    decimatorcell: Name =\SIGMA_A_D:DEC\
        PORT MAP (
            aclock => \SIGMA_A_D:aclock\ ,
            mod_dat_3 => \SIGMA_A_D:mod_dat_3\ ,
            mod_dat_2 => \SIGMA_A_D:mod_dat_2\ ,
            mod_dat_1 => \SIGMA_A_D:mod_dat_1\ ,
            mod_dat_0 => \SIGMA_A_D:mod_dat_0\ ,
            ext_start => __ONE__ ,
            modrst => \SIGMA_A_D:mod_reset\ ,
            interrupt => Net_7789 );
        Properties:
        {
            cy_registers = ""
        }
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: 
    Pm Block @ F(PM,0): 
    pmcell: Name =PM
        PORT MAP (
            ctw_int => CTW_OUT ,
            onepps_int => OPPS_OUT );
        Properties:
        {
        }
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: 
    VIDAC Block @ F(VIDAC,0): 
    vidaccell: Name =\IDAC8_1:viDAC8\
        PORT MAP (
            vout => \IDAC8_1:Net_124\ ,
            iout => Net_7939 );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
    VIDAC Block @ F(VIDAC,2): 
    vidaccell: Name =\VDAC8_1:viDAC8\
        PORT MAP (
            vout => Net_306 ,
            iout => \VDAC8_1:Net_77\ );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_Seq_1:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_Seq_1:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq_1:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_1:Net_2803\ ,
            vminus => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_1:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq_1:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq_1:SAR:Net_235\ ,
            clk_udb => \ADC_SAR_Seq_1:clock_local\ ,
            irq => \ADC_SAR_Seq_1:SAR:Net_252\ ,
            next => Net_6098 ,
            data_out_udb_11 => \ADC_SAR_Seq_1:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_1:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_1:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_1:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_1:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_1:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_1:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_1:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_1:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_1:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_1:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_1:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_1:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =AMux_1
        PORT MAP (
            muxin_8 => Net_8026 ,
            muxin_7 => Net_7952 ,
            muxin_6 => Net_7962 ,
            muxin_5 => Net_7963 ,
            muxin_4 => Net_7964 ,
            muxin_3 => Net_7965 ,
            muxin_2 => Net_7966 ,
            muxin_1 => Net_7967 ,
            muxin_0 => Net_7968 ,
            vout => Net_7939 );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "000000000"
            muxin_width = 9
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =AMux_2
        PORT MAP (
            muxin_8 => Net_7957 ,
            muxin_7 => Net_7956 ,
            muxin_6 => Net_7979 ,
            muxin_5 => Net_7978 ,
            muxin_4 => Net_7976 ,
            muxin_3 => Net_7974 ,
            muxin_2 => Net_7971 ,
            muxin_1 => Net_8027 ,
            muxin_0 => Net_7969 ,
            vout => Net_306 );
        Properties:
        {
            api_type = 0
            connect_mode = 2
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "000000000"
            muxin_width = 9
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_1:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_6192 ,
            muxin_62 => Net_6191 ,
            muxin_61 => Net_6190 ,
            muxin_60 => Net_6189 ,
            muxin_59 => Net_6188 ,
            muxin_58 => Net_6187 ,
            muxin_57 => Net_6186 ,
            muxin_56 => Net_6185 ,
            muxin_55 => Net_6184 ,
            muxin_54 => Net_6183 ,
            muxin_53 => Net_6182 ,
            muxin_52 => Net_6181 ,
            muxin_51 => Net_6180 ,
            muxin_50 => Net_6179 ,
            muxin_49 => Net_6178 ,
            muxin_48 => Net_6177 ,
            muxin_47 => Net_6176 ,
            muxin_46 => Net_6174 ,
            muxin_45 => Net_6172 ,
            muxin_44 => Net_6171 ,
            muxin_43 => Net_6169 ,
            muxin_42 => Net_6167 ,
            muxin_41 => Net_6166 ,
            muxin_40 => Net_6164 ,
            muxin_39 => Net_6162 ,
            muxin_38 => Net_6161 ,
            muxin_37 => Net_6159 ,
            muxin_36 => Net_6157 ,
            muxin_35 => Net_6156 ,
            muxin_34 => Net_6154 ,
            muxin_33 => Net_6152 ,
            muxin_32 => Net_6151 ,
            muxin_31 => Net_6149 ,
            muxin_30 => Net_6147 ,
            muxin_29 => Net_6146 ,
            muxin_28 => Net_6144 ,
            muxin_27 => Net_6142 ,
            muxin_26 => Net_6141 ,
            muxin_25 => Net_6139 ,
            muxin_24 => Net_6137 ,
            muxin_23 => Net_6136 ,
            muxin_22 => Net_6134 ,
            muxin_21 => Net_6132 ,
            muxin_20 => Net_6131 ,
            muxin_19 => Net_6129 ,
            muxin_18 => Net_6127 ,
            muxin_17 => Net_6126 ,
            muxin_16 => Net_6124 ,
            muxin_15 => Net_6122 ,
            muxin_14 => Net_6121 ,
            muxin_13 => Net_6119 ,
            muxin_12 => Net_6117 ,
            muxin_11 => Net_6116 ,
            muxin_10 => Net_6114 ,
            muxin_9 => Net_6112 ,
            muxin_8 => Net_6111 ,
            muxin_7 => Net_6109 ,
            muxin_6 => Net_6107 ,
            muxin_5 => Net_6106 ,
            muxin_4 => Net_6104 ,
            muxin_3 => Net_6102 ,
            muxin_2 => Net_6101 ,
            muxin_1 => Net_5988 ,
            muxin_0 => Net_8005 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_2\ ,
            hw_ctrl_en_1 => \ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_1\ ,
            vout => \ADC_SAR_Seq_1:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                           | 
Port | Pin | Fixed |      Type |       Drive Mode |                      Name | Connections
-----+-----+-------+-----------+------------------+---------------------------+-----------------------------------------------------------------
   0 |   0 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(4) | Analog(Net_7964)
     |   1 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(4) | Analog(Net_7976)
     |   2 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(5) | Analog(Net_7963)
     |   3 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(5) | Analog(Net_7978)
     |   4 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(6) | Analog(Net_7962)
     |   5 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(6) | Analog(Net_7979)
     |   6 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(7) | Analog(Net_7952)
     |   7 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(7) | Analog(Net_7956)
-----+-----+-------+-----------+------------------+---------------------------+-----------------------------------------------------------------
   1 |   5 |     * |      NONE |     HI_Z_DIGITAL |           RS_485_Input(0) | FB(Net_130)
     |   6 |     * |      NONE |         CMOS_OUT |      RS_485_TX_ENBABLE(0) | In(Net_118)
     |   7 |     * |      NONE |         CMOS_OUT |          RS_485_OUTPUT(0) | In(Net_116)
-----+-----+-------+-----------+------------------+---------------------------+-----------------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT |         heart_beat_pin(0) | 
     |   2 |     * |      NONE |      RES_PULL_UP |             switch_pin(0) | FB(Net_7671)
     |   3 |     * |      NONE |      HI_Z_ANALOG |            Temp_Sensor(0) | In(\ADC_SAR_Seq_1:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_8005)
     |   4 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(8) | Analog(Net_8026)
     |   5 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(8) | Analog(Net_7957)
     |   6 |     * |      NONE |    RES_PULL_DOWN |             Active_Pin(0) | FB(Net_8067)
     |   7 |     * |      NONE |      RES_PULL_UP |                Log_Pin(0) | FB(Net_8063)
-----+-----+-------+-----------+------------------+---------------------------+-----------------------------------------------------------------
   3 |   0 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(0) | Analog(Net_7968)
     |   1 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(0) | Analog(Net_7969)
     |   2 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(1) | Analog(Net_7967)
     |   3 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(1) | Analog(Net_8027)
     |   4 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(2) | Analog(Net_7966)
     |   5 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(2) | Analog(Net_7971)
     |   6 |     * |      NONE |      HI_Z_ANALOG | Moisture_sensor_1_pins(3) | Analog(Net_7965)
     |   7 |     * |      NONE |      HI_Z_ANALOG |  Moisture_Sensor_Pin_2(3) | Analog(Net_7974)
------------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.004ms
Digital Placement phase: Elapsed time ==> 5s.521ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 5s.039ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 0s.322ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.060ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in PSOC_5lp_moisture_sensor_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.992ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.358ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 24s.701ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 24s.751ms
API generation phase: Elapsed time ==> 3s.315ms
Dependency generation phase: Elapsed time ==> 0s.036ms
Cleanup phase: Elapsed time ==> 0s.001ms
